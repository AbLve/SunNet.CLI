@using Sunnet.Cli.Core.Users.Enums
@using Sunnet.Cli.UIBase.Models;
@using Sunnet.Cli.MainSite.Models;
@model Sunnet.Cli.Business.Schools.Models.SchoolModel

@{
    ViewBag.Title = "Assign Community Specialist to class";
    var formIdPage = PostFormHelper.GetFormId(Html.ViewContext.View);
    var formId = PostFormHelper.GetFormId(Html.ViewContext.View) + "1";
    var formId2 = PostFormHelper.GetFormId(Html.ViewContext.View) + "2";
}
@section LeftMenu
{
    @Html.Partial("~/Views/Shared/_MasterData_LeftMenu.cshtml", Leftmenu_MainSite.Class)
}

@section BreadPath
{
    @(Html.ActionLink("Class List", "Index", "Class"))
    <i class="icon-angle-right"></i>Assign Users to School
}
@Html.AntiForgeryToken()
<div class="right-content-top">
    <a class="mainbutton mainright-btn nav-btn" href="@(Server.UrlDecode(Request.QueryString["returnurl"]) ?? Url.Action("Index","School"))">Back
    </a>
</div>
<div class="main-content">
    <div style="text-align: center"><i class="icon-user"></i><span>&nbsp;</span>@Model.SchoolName</div>
    <div class="content-body tab-d-con">
        <form class="form-horizontal clearfix" role="form">
            <div id="@formId">
                <div class="tab-content tab-d">
                    <div class="content-title">
                        Unassgined Users
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-3" for="txtCommunity">Community/District</label>
                        <div class="col-sm-9">
                            @Html.TextBox("txtCommunity", "", new
                            {
                                autocomplete = "off",
                                @class = "form-control",
                                data_list = "true",
                                data_for = "#SearchCommunityId",
                                data_remote = Url.Action("GetCommunitySelectListForSearch", "Community", new { Area = "Community" }),
                                data_text = "Name",
                                data_value = "ID",
                                placeholder = "Enter key text to search",
                                id = "txtCommunity",
                                name = "txtCommunity",
                                @for = "SearchCommunityId",
                                data_required = "false",
                                data_bind = "value: searchCriteria.communityName",
                                data_extraParams = "{\"isActiveCommunity\":\"#isActiveCommunity\"}"

                            })
                            @Html.Hidden("SearchCommunityId","0",new {data_bind="value: searchCriteria.communityId"})
                            @Html.Hidden("isActiveCommunity", false)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-3" for="UnassignRole">Role</label>
                        <div class="col-sm-9"> 
                            @Html.DropDownList("UnassignRole", (IEnumerable<SelectListItem>)ViewBag.RoleOptions, new { @class = "form-control" ,data_bind="value: searchCriteria.role"} ) 
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-3" for="Keyword">Keyword</label>
                        <div class="col-sm-6"> 
                            <input class="form-control" placeholder="Enter key to search" data-bind="value: searchCriteria.name"
                                   id="Keyword" name="Keyword" type="text" value="" />
                        </div>
                        <div class="col-sm-3">
                               <button class="mainbutton mainright-btn sreach-btn" data-bind="event: { click: search }">search</button>
                        </div> 
                    </div> 
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr data-bind="foreach: { data: headers, as: 'header' }">
                                <!--ko if:($index()===0)-->
                                <th>
                                    <input type="checkbox" onclick="CheckAll(this)" value="@formId" id="chkSelectAll" />
                                    <label for="chkSelectAll">Select All</label>
                                </th>
                                <!--/ko-->
                                <!-- ko if: (header.order === true)-->
                                <th data-bind="style: { width: width }">
                                    <a href="javascript:;" data-bind="text: text, click: $root.changeOrder"></a>
                                    <span class="glyphicon"
                                        data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'ASC',
    css: { 'glyphicon-arrow-up': $root.orderDirection().toUpperCase() == 'ASC' }"></span>
                                    <span class="glyphicon"
                                        data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'DESC',
    css: { 'glyphicon-arrow-down': $root.orderDirection().toUpperCase() == 'DESC' }"></span>
                                </th>
                                <!--/ko-->
                                <!-- ko if: (header.order === false) -->
                                <th data-bind="text: text, style: { width: width }"></th>
                                <!-- /ko-->
                            </tr>
                        </thead>
                        <tbody data-bind="foreach: { data: showRecords, as: 'item' }">
                            <tr>
                                <td>
                                    <label data-bind="attr: { 'for': 'chkComm' + $index() }" class="hide">hiddenChk</label>
                                    <input type="checkbox" name="chkComm" data-bind="value: item.UserId, attr: { id: 'chkComm' + $index() }" />
                                </td>
                                <td data-bind="text: item.FullName"></td>
                                 <td data-bind="text: item.UserRole.text"></td>
                            </tr>
                        </tbody>
                        @Html.Display("e", "NoData", new { Colspan = 2 })
                    </table>
                    @Html.Partial("_Partial_Pager")
                </div>

                <div class="tab-d-m">
                    <a class="mainright-btn tab-save-btn cancel-btn" href="#" title="Assign Users to School" data-bind="event: { click: $root.AssignAll }">
                        <i class="icon-double-angle-right icon-large"></i>
                        <span class="hide">Assign Users to School</span>
                    </a>
                    <a class="mainright-btn tab-save-btn save-btn" href="#" title="Unassign Users From School" data-bind="event: { click: $root.UnAssignAll }">
                        <i class="icon-double-angle-left icon-large"></i>
                        <span class="hide">Unassign Users From School</span>
                    </a>
                </div>
            </div>


            <div class="tab-content tab-d"  id="@formId2">
                <div class="content-title">Assigned Users</div>
                  <div class="form-group">
                        <label class="control-label col-sm-3" for="txtCommunity2">Community/District</label>
                        <div class="col-sm-9">
                            @Html.TextBox("txtCommunity2", "", new
                            {
                                autocomplete = "off",
                                @class = "form-control",
                                data_list = "true",
                                data_for = "#SearchCommunityId",
                                data_remote = Url.Action("GetCommunitySelectListForSearch", "Community", new { Area = "Community" }),
                                data_text = "Name",
                                data_value = "ID",
                                placeholder = "Enter key text to search",
                                id = "txtCommunity2",
                                name = "txtCommunity2",
                                @for = "SearchCommunityId2",
                                data_required = "false",
                                data_bind = "value: searchCriteria.communityName",
                                data_extraParams = "{\"isActiveCommunity\":\"#isActiveCommunity\"}"

                            })
                           @Html.Hidden("SearchCommunityId2","0",new {data_bind="value: searchCriteria.communityId"})
                            @Html.Hidden("isActiveCommunity", false)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-3" for="assignedRole">Role</label>
                        <div class="col-sm-9"> 
                            @Html.DropDownList("assignedRole", (IEnumerable<SelectListItem>)ViewBag.RoleOptions, new { @class = "form-control" ,data_bind="value: searchCriteria.role"} ) 
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-3" for="Keyword2">Keyword</label>
                        <div class="col-sm-6"> 
                            <input class="form-control" placeholder="Enter key to search" data-bind="value: searchCriteria.name"
                                   id="Keyword2" name="Keyword" type="text" value="" />
                        </div>
                        <div class="col-sm-3">
                               <button class="mainbutton mainright-btn sreach-btn" data-bind="event: { click: search }">search</button>
                        </div> 
                    </div> 
                <table class="table table-striped table-hover">
                    <thead>
                        <tr data-bind="foreach: { data: headers, as: 'header' }">
                            <!-- ko if: ($index() === 0)-->
                            <th>

                                <input type="checkbox" onclick="CheckAll(this)"  value="@formId2" id="chkSelectAll2" />
                                <label for="chkSelectAll2">Select All</label>
                            </th>
                            <!-- /ko-->
                            <!-- ko if: (header.order === true)-->
                            <th data-bind="style: { width: width }">
                                <a href="javascript:;" data-bind="text: text, click: $root.changeOrder"></a>
                                <span class="glyphicon"
                                    data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'ASC',
    css: { 'glyphicon-arrow-up': $root.orderDirection().toUpperCase() == 'ASC' }"></span>
                                <span class="glyphicon"
                                    data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'DESC',
    css: { 'glyphicon-arrow-down': $root.orderDirection().toUpperCase() == 'DESC' }"></span>
                            </th>
                            <!-- /ko-->
                            <!-- ko if: (header.order === false) -->
                            <th data-bind="text: text, style: { width: width }"></th>
                            <!-- /ko-->
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: { data: showRecords, as: 'item' }">
                        <tr>
                            <td>
                                <label data-bind=" attr: { 'for': 'chkComm2' + $index() }" class="hide">hiddenChk</label>
                                <input type="checkbox" name="chkComm" data-bind="value: item.UserId,
    attr: { id: 'chkComm2' + $index() }">
                            </td>
                            <td data-bind="text: item.FullName"></td>
                                <td data-bind="text: item.UserRole.text"></td>
                        </tr>
                    </tbody>
                    @Html.Display("e", "NoData", new { Colspan = 2 })
                </table>
                @Html.Partial("_Partial_Pager")
            </div>
        </form>
    </div>
</div>


@section Scripts{
    <script type="text/javascript">
        function CheckAll(obj) {
            var formId = $(obj).val();
            if ($(obj).is(":checked")) {
                $("#" + formId + " [name='chkComm']").prop("checked", true);
            }
            else {
                $("#" + formId + " [name='chkComm']").prop("checked", false);
            }
        }
        function GetAllCheckedItem(formId) {
            var ids = new Array();
            $("#" + formId + " input:checked").not("#chkSelectAll").not("#chkSelectAll2").each(function (index, obj) {
                ids.push($(this).val());
            });
            return ids;
        }

        $(function () {
            var list_Unassignd = {};
            var list_assignd = {};
            InitList = function () {
                $("#chkSelectAll").prop("checked", false);
                $("#chkSelectAll2").prop("checked", false);
                list_Unassignd.search();
                list_assignd.search();
            }

            //list_Unassignd begin
            list_Unassignd = new ViewModel(
                {
                    instanceName: "list_Unassignd",
                    modalId: "modalNormal",
                    viewType: "Redirect",
                    getDataUrl: '@Html.Raw(Server.UrlDecode(Url.Action("SearchUnAssignedUsers")))',
                    orderBy: "FirstName",
                    orderDirection: "ASC",
                    pageSize: 10,
                    headers: [
                        {
                            text: "User Name",
                            field: "Name",
                            order: true,
                            width: '40%'
                        }, {
                                text: "Role",
                                field: "Role",
                                order: true,
                                width: '40%'
                            }
                    ],
                    miniPager: true,
                    searchCriteria: {
                        communityId:ko.observable("0"),
                        communityName: ko.observable(""),
                        name: ko.observable(""), 
                        role: ko.observable("0"), 
                        schoolId: ko.observable("@Model.ID")
                    }
                },
        {
            AssignAll: function (item) {
                var ids = GetAllCheckedItem("@formId");
                if (ids != "") {
                    $.post(
                        "@Html.Raw(Server.UrlDecode(Url.Action("AssignUsers")))",
                        {  schoolId: "@Model.ID", userIds: ids },
                        function (data) {
                            var res = JSON.parse(data);
                            if (res.success == true) {
                                InitList();
                            } else {
                                $.when(window.waitingAlert("fail", res.msg)).done(function () {
                                    $(".mainbutton.mainright-btn.nav-btn")[0].click();
                                }
                                );
                            }
                        }
                        );
                }
            },
            UnAssignAll: function (item) {
                var ids = GetAllCheckedItem("@formId2");
                if (ids != "") {
                    $.post(
                    "@Html.Raw(Server.UrlDecode(Url.Action("UnsignUsers")))",
                    {  schoolId: "@Model.ID", userIds: ids },
                    function (data) {
                        var res = JSON.parse(data);
                        if (res.success == true) {
                            InitList();
                        }
                    }
                    );
                }
            }
        }
                );
            //list_Unassignd end


            //list_assignd begin
            list_assignd = new ViewModel(
                {
                    instanceName: "list_assignd",
                    modalId: "modalNormal",
                    viewType: "Redirect",
                    getDataUrl: '@Html.Raw(Server.UrlDecode(Url.Action("SearchAssignedUsers")))',
                    orderBy: "FirstName",
                    orderDirection: "ASC",
                    pageSize: 10,
                    miniPager: true,
                    headers: [
                        {
                            text: "User Name",
                            field: "Name",
                            order: true,
                            width: '40%'
                        },
                         {
                             text: "Role",
                             field: "Role",
                             order: true,
                             width: '40%'
                         }
                    ],
                    searchCriteria: {
                        communityId:ko.observable("0"),
                        communityName: ko.observable(""),
                        name: ko.observable(""), 
                        role: ko.observable("0"), 
                        schoolId: ko.observable("@Model.ID")
                    }
                }
            );
            //list_assignd end

            list_Unassignd.search();
            list_assignd.search();
            ko.applyBindings(list_Unassignd, document.getElementById("@formId"));
            ko.applyBindings(list_assignd, document.getElementById("@formId2"));
        });
        //function() end

    </script>
}
