@using System.Web.Optimization
@using Sunnet.Cli.Business.Cpalls.Models
@using Sunnet.Cli.Core.Classes.Enums
@using Sunnet.Cli.MainSite.Models
@using Sunnet.Cli.UIBase.Models
@model Sunnet.Cli.Core.Classes.Entites.ClassEntity
@using Sunnet.Framework.Extensions
@{
    ViewBag.Title = "View Class";
    var formClass = new { @class = "form-control" };
    List<CpallsAssessmentModel> FeatureList = ViewBag.FeatureList;
}

@section BreadPath
{
    @(Html.ActionLink("Class", "Index", "Class"))
    <i class="icon-angle-right"></i>View
}
@section LeftMenu
{
    @Html.Partial("~/Views/Shared/_MasterData_LeftMenu.cshtml", Leftmenu_MainSite.Class)
}
@section Scripts{
    @Scripts.Render("~/scripts/module_class");
    <script type="text/javascript">
        jQuery(function () {
            registerFormCallbacks("frmEdit", {
                onPosted: function (response) {
                    redirectBack("index");
                }
            });
        });
    </script>
}
@using (Ajax.BeginForm("", "", null, PostFormHelper.DefaultAjaxOptions, new
{
    HttpMethod = "Post",
    role = "form",
    id = "frmEdit",
    @class = "form-horizontal"
}))
{
    @Html.AntiForgeryToken()
    <div class="right-content-top">
        <a class="mainbutton mainright-btn nav-btn" href="@(Server.UrlDecode(Request.QueryString["returnurl"]) ?? Url.Action("Index"))" >Back to Class list
        </a>
    </div>
    <div class="main-content">
        <div class="content-title">Basic Information</div>
        <div class="content-body">
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.ID)
            <div class="form-group">
                <label class="col-sm-2 control-label">Community/District</label>
                <div class="col-sm-4">
                    @Html.Display("CommunityName")
                </div>
                @Html.LabelFor(model => model.SchoolId, new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.Display("SchoolName")
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">Classroom Name</label>
                <div class="col-sm-4">
                    @Html.Display("ClassroomName")
                </div>
                @Html.LabelFor(model => model.SchoolYear, new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DisplayFor(model => model.SchoolYear)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DisplayFor(model => model.Name)
                </div>
                @Html.LabelFor(model => model.ClassId, new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DisplayFor(model => model.ClassId)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Status, new { @class = "control-label col-sm-2 required" })
                <div class="col-sm-4">
                    @Html.DisplayFor(model => model.Status)
                </div>
                @Html.LabelFor(model => model.StatusDate, new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                    @Html.DisplayFor(model => model.StatusDate)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DayType, new { @class = "control-label col-sm-2 " })
                <div class="col-sm-4">
                    @Html.DisplayFor(model => model.DayType)
                </div>
                @Html.LabelFor(model => model.ClassType, new { @class = "control-label col-sm-2 " })
                <div class="col-sm-4">
                    @Html.DisplayFor(model => model.ClassType)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Classlevel, new { @class = "control-label col-sm-2" })
                <div class="col-sm-4">
                  @(ViewBag.ClassLevelName)
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-sm-4 ">Language of Instruction</label>
                <div class="col-sm-4">
                    @if (ViewBag.Language != null)
                    {
                        @Html.Display("Language", "List")
                    }
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CurriculumId, new { @class = "control-label col-sm-4 " })
                <div class="col-sm-4">
                    @if (ViewBag.Curriculum != null)
                    {
                        @Html.Display("Curriculum")
                        if (ViewBag.Curriculum == "Other")
                        {
                        @Html.DisplayFor(model => model.CurriculumOther)
                        }
                    }
                    else
                    {
                        <span class="control-label-text col-sm-4"></span>
                    }
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SupplementalCurriculumId, new { @class = "control-label col-sm-4 " })
                <div class="col-sm-4">
                    @if (ViewBag.SupplementalCurriculum != null)
                    {
                        @Html.Display("SupplementalCurriculum")
                        if (ViewBag.SupplementalCurriculum.ToString() == "Other")
                        {
                        @Html.DisplayFor(model => model.SupplementalCurriculumOther)
                        }
                    }
                    else
                    {
                        <span class="control-label-text col-sm-4"></span>
                    }
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.AtRiskPercent, new { @class = "control-label col-sm-4 " })
                <div class="col-sm-4">
                    @Html.DisplayFor(model => model.AtRiskPercent)
                </div>
                <div class="col-sm-4">
                    @Html.CheckBoxFor(model => model.IsSameAsSchool, new { Disabled = "true" })
                    @Html.LabelFor(model => model.IsSameAsSchool)
                </div>
            </div>
         @*   <div class="form-group">
                @Html.LabelFor(model => model.MonitoringToolId, new { @class = "control-label col-sm-4 required" })
                <div class="col-sm-4">
                    @if (ViewBag.MonitoringTool != null)
                    {
                        @Html.Display("MonitoringTool", new { id = "lblMonitoringTool" })
                        if (ViewBag.MonitoringTool == "Other")
                        {
                        @Html.DisplayFor(model => model.MonitoringToolOther)
                        }
                    }
                    else
                    {
                        <span class="control-label-text col-sm-4"></span>
                    }
                </div>
            </div>
            @if (@ViewBag.MonitoringTool == "CPALLS+")
            {
                <div class="form-group" id="divEquipment">
                    @Html.LabelFor(model => model.UsedEquipment, new { @class = "control-label col-sm-4 required" })
                    <div class="col-sm-3">
                        @Html.DisplayFor(model => model.UsedEquipment)
                    </div>
                    @Html.LabelFor(model => model.EquipmentNumber, "Please Specify", new { @class = "control-label col-sm-2 " })
                    <div class="col-sm-2">
                        @Html.DisplayFor(model => model.EquipmentNumber)
                        @Html.ValidationMessage("EquipmentNumber")
                    </div>
                </div>
            }*@

            <div class="form-group" id="divReference">
                <label class="control-label col-sm-3">Partnership Reference Data</label>
                <div class="col-sm-8">
                    @if (ViewBag.TeacherList != null)
                    {
@*<p class="form-control-static"></p>*@
                        <label class="control-label-text">
                            Teacher Employed By @(string.Join(", ", ((List<string>)ViewBag.TeacherList)))
                        </label> 
                    }
                    <div>
                        <label id="txtSchoolType" class="control-label-text">School Type is @ViewBag.schoolType</label>
                    </div>
                </div>
            </div>
            @if (ViewBag.showNotes)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Notes, new { @class = "control-label col-sm-3" })
                    <div class="col-sm-8">
                        @Html.DisplayFor(model => model.Notes)
                        @Html.ValidationMessageFor(model => model.Notes)
                    </div>
                </div> 
            }

        </div>
           <div class="content-title">Assessments</div>
    <div class="content-body">
        @foreach (CpallsAssessmentModel feature in  FeatureList)
        {
            <div class="form-group">
                 <span class="col-sm-12 "> @feature.Name</span>
            </div>
        }
           </div>
        <div class="button-content">
            <button class="mainbutton mainright-btn create-btn" type="button" onclick='redirectBack("index")' data-dismiss="modal" id="btnBack">Back</button>
        </div>
    </div>
}
