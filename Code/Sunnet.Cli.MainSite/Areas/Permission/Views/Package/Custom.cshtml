@using Sunnet.Framework.Extensions
@using Sunnet.Cli.UIBase.Models
@using Sunnet.Cli.MainSite.Models;
@model Sunnet.Cli.Business.Permission.Models.UserRoleModel
@{
    ViewBag.Title = "Package";
}
@section LeftMenu
{
    @Html.Partial("~/Views/Shared/_MasterData_LeftMenu.cshtml", Leftmenu_MainSite.Permission)
}
@section BreadPath
{
    @(Html.ActionLink("Permission Management", "Index", "Package"))&nbsp;<i class="icon-angle-right"></i>&nbsp;Custom Package List
}

@if (ViewBag.accessAdd)
{
    <div class="right-content-top">
        <button type="button"  href='@Url.Action("New", "Package", new { isSystem = 2, listObj = "list_Package" })' 
        class="mainbutton mainright-btn create-btn" data-target="#modalNormal" data-toggle="modal">
            Add Custom Package</button>
    </div>
}

<div class="modal-l-b"></div>
<form class="form-horizontal" role="form" id="formSearch">
    <div class="form-group">
        <label class="control-label col-sm-2" for="Name">Package Name</label>
        <div class="col-sm-3">
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", data_bind = "value: searchCriteria.name", placeholder = "Enter key text to search" })
        </div>
        <label class="control-label col-sm-2" for="UserType">User Role/Type</label>
        <div class="col-sm-3">
            @Html.DropDownListFor(model => model.UserType, ViewBag.UserTypes as IEnumerable<SelectListItem>,
            new { @class = "form-control", data_bind = "value: searchCriteria.usertype" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="Status">Status</label>
        <div class="col-sm-3">
            @Html.EnumDropDownListFor(model => model.Status, ViewTextHelper.DefaultAllText, "", new { @class = "form-control", data_bind = "value: searchCriteria.status" })
        </div>
        <div class="col-sm-2"></div>
        <div class="col-sm-2">
            <button class="mainbutton mainright-btn sreach-btn" type="button" data-bind="event: { click: search }">Search</button>
        </div>
    </div>
</form>

<div class="main-content main-content">
    <div class="content-title">Packages</div>
    <div class="content-body-tab">
        <table class="table table-striped table-hover">
            <thead>
                <tr data-bind="foreach: { data: headers, as: 'header' }">
                    <!-- ko if: (header.order === true)-->
                    <th data-bind="style: { width: width }">
                        <a href="javascript:;" data-bind="text: text, click: $root.changeOrder"></a>
                        <span class="glyphicon"
                            data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'ASC',
    css: { 'glyphicon-arrow-up': $root.orderDirection().toUpperCase() == 'ASC' }"></span>
                        <span class="glyphicon"
                            data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'DESC',
    css: { 'glyphicon-arrow-down': $root.orderDirection().toUpperCase() == 'DESC' }"></span>
                    </th>
                    <!-- /ko-->
                    <!-- ko if: (header.order === false) -->
                    <th data-bind="text: text, style: { width: width }"></th>
                    <!-- /ko-->
                </tr>
            </thead>
            <tbody data-bind="foreach: { data: showRecords, as: 'item' }">
                <tr>
                    <td data-bind="text: item.Name"></td>
                    <td data-bind="text: item.Status.text"></td>
                    <td data-bind="text: item.UserType.text"></td>
                    <td data-bind="text: item.Description"></td>
                    <td>
                        @if (ViewBag.accessEdit)
                        {
                            <a class="table-btn icon-pencil pencil-btn" data-bind="event: { click: $root.updateData }" href="#" title="Edit"></a>
                        }
                        @if (ViewBag.accessPermission)
                        {
                            <a class="table-btn icon-lock permission-btn" data-bind='attr: { href: $root.assignPermission(item) }' href="#" title="Assign Permission"></a>
                        }

                        <!-- ko if: (!item.IsDefault) -->
                        @if (ViewBag.accessDelete)
                        {
                            <a class="table-btn icon-trash trash-btn" data-bind="event: { click: $root.deleteData }" href="#" title="Delete "></a>
                        }
                        @if (ViewBag.accessAssignScope)
                        {
                            <a class="table-btn icon-film feature-btn" data-bind='attr: { href: $root.assignPackage(item) }' href="#" title="Assign Scope"></a>
                        }
                        <!-- /ko-->
                    </td>
                </tr>
            </tbody>@Html.Display("e", "NoData", new { Colspan = 5 })
        </table>
        @Html.Partial("_Partial_Pager")
    </div>
</div>
@section Scripts
{
    <script type="text/javascript">
        var list_Package = {};

        $(function () {

            list_Package = new ViewModel(
                {
                    instanceName: "list_Package",
                    modalId: "modalNormal",
                    getDataUrl: '@Html.Raw(Server.UrlDecode(Url.Action("SearchCustom")))',
                    addDataUrl: '@Html.Raw(Url.Action("New"))',
                    editDataUrl: '@Html.Raw(Url.Action("Edit"))',
                    deleteDataUrl: '@Html.Raw(Url.Action("Delete"))',
                    orderBy: "Name",
                    orderDirection: "ASC",
                    pageSize: 20,
                    headers: [
                        {
                            text: "@Html.DisplayName("Package Name")",
                            field: "@Html.NameFor(model => model.Name)",
                            order: true,
                            width: '20%'
                        },
                        {
                            text: '@Html.DisplayName("Status")',
                            field: "@Html.NameFor(model => model.Status)",
                            order: true,
                            width: '7%'
                        },
                        {
                            text: '@Html.DisplayName("User Role")',
                            field: "@Html.NameFor(model => model.UserType)",
                            order: true,
                            width: '20%'
                        },
                        {
                            text: '@Html.DisplayName("Description")',
                            field: "@Html.NameFor(model => model.Descriptions)",
                            width: '25%'
                        },
                        { text: "Action", width: '21%' }
                    ],
                    searchCriteria: {
                        name: ko.observable(window.queryString("name")),
                        usertype: ko.observable(window.queryString("usertype")),
                        status: ko.observable(window.queryString("status"))
                    }
                },
                {
                    assignPackage: function (data) {
                        var param = { packageId: data.ID, isCustom: true, returnurl: list_Package.getLocation() };
                        return list_Package.appendQueryString('@Html.Raw(Url.Action("Assign", "AssignedPackage"))', param);
                    },
                    assignPermission: function (data) {
                        var param = { packageId: data.ID, isCustom: true, returnurl: list_Package.getLocation() };
                        return list_Package.appendQueryString('@Html.Raw(Url.Action("Assign", "AssignedPermission"))', param);
                    }
                }
            );

            list_Package.search();
            ko.applyBindings(list_Package);
        });
    </script>
}

