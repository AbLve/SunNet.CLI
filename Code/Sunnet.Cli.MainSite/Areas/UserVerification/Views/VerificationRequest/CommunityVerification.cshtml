@model Sunnet.Cli.Core.Users.Entities.ApplicantEntity
@using Sunnet.Cli.UIBase.Models
@using Sunnet.Framework.Extensions
@using Sunnet.Cli.Core.Users.Enums
@using Sunnet.Cli.Business.Permission.Models
@{
    ViewBag.Title = "Request Information";
    var formId = PostFormHelper.GetFormId(Html.ViewContext.View);
    List<GroupPackageModel> listGroupPackage = ViewBag.GroupPackageModels;
}

@section Scripts
{
    <script type="text/javascript">
        var vertificationName = '@ViewBag.CommunityInfo';
        $(function () {
            if ($("#CommunityId").val() == "0") {
                $("#CommunityId").val("");
                $("#CommunityId").rules("add", { required: true, messages: { required: "The community is invalid." } });
            }

            $form = $("#@(formId)");
            registerFormCallbacks("@(formId)", {
                onResponsed: function (response) {
                    if (response.success) {
                        var promise;
                        if (typeof response.data == "string") {
                            if (response.data == "waiting") {
                                promise = window.waitingAlert("warning", response.msg);
                            } else {
                                promise = window.showMessage("success", response.msg);
                            }
                            $.when(promise).done(function () {
                                redirectBack("Index");
                            });
                        } else if (response.data == null) {
                            $.when(window.showMessage("success", response.msg)).done(function () {
                                redirectBack("Index");
                            });
                        } else if (typeof response.data == "object") {
                            if (response.data.type == "confirmAssign") {
                                $.when(window.waitingConfirm(response.msg, "OK", "Cancel")).done(function () {
                                    location.href = response.data.url + "&returnurl=@(Server.UrlDecode(Request.QueryString["returnurl"]))";
                                });
                        } else if (response.data.type == "continue") {
                            $.when(window.waitingConfirm(response.msg, "Continue", "Cancel")).done(function () {
                                $form.find("#confirm").val(true);
                                $form.submit();
                            }).fail(function () {
                                $form.find("#confirm").val(false);
                            });
                        }
                    }
        } else {
            window.showMessage("fail", response.msg);
        }
                }
            });

            $("#chkAll").click(function () {
                $("[name='packageIds']").prop("checked", $("#chkAll").prop("checked"));
            });

            $("#txtCommunity").on("selected.sunnet.datalist", function (event) {
                $("#CommunityId").valid();
                var communityId = $("#CommunityId").val();
                if ($("#CommunityId").val() == 0 || $("#CommunityId").val() == "")
                    communityId = null;
                $.post("/Invitation/Public/GetAssignedPackages?userType=" + @((int)Model.RoleType) + "&communityId=" + communityId, function (result) {
                    if (result) {
                        var strHtml = "";
                        for (i = 0; i < result.length; i++) {
                            strHtml += '<tr>';
                            strHtml += '<td>';
                            strHtml += '<label for="txtPackage' + result[i].PackageId + '" class="hide">' + result[i].PackageName + '</label>';
                            strHtml += '<input type="checkbox" id="txtPackage' + result[i].PackageId + '" name="packageIds" value="' + result[i].PackageId + '"></td>';
                            strHtml += ' <td>' + result[i].PackageName + '</td>';
                            strHtml += '<td>' + result[i].PackageDescription + '</td>';
                            strHtml += '</tr>';
                        }
                    }
                    $("#tbPackage").html(strHtml);
                }, 'json');
                if (event.selected.Address != undefined) {
                    $("#pCommunityInfo").html(event.selected.Address + ", " + event.selected.City + ", " + event.selected.State + " " + event.selected.Zip);
                } else {
                    $("#pCommunityInfo").html("");
                }
            });
        });

        function ReturnCommunity(communityId, communityName, communityInfo) {
            $("#CommunityId").val(communityId);
            $("#txtCommunity").val(communityName);
            $("#pCommunityInfo").html(communityInfo);
            $("#dvAddCommunity").hide();
        }
    </script>
}

@section LeftMenu
{
    @Html.Partial("~/Views/Shared/_MasterData_LeftMenu.cshtml", Sunnet.Cli.MainSite.Models.Leftmenu_MainSite.User)
}

@section BreadPath
{
    <a href="/Invitation/Public/Dashboard">User Management</a>
    <i class="icon-angle-right"></i>
    @(Html.ActionLink("User Verification", "Index", "VerificationRequest")) <i class="icon-angle-right"></i>
    @(Model.FirstName + " " + Model.LastName)
}

@using (Ajax.BeginForm("SaveUserVerification", "VerificationRequest", null, PostFormHelper.DefaultAjaxOptions,
    new
    {
        @class = "form-horizontal",
        id = formId
    }))
{
    @Html.AntiForgeryToken()  
    @Html.HiddenFor(model => model.ID) 
    @Html.Hidden("confirm", false)
    <div class="right-content-top">
        <a class="mainbutton mainright-btn nav-btn" href="@(Server.UrlDecode(Request.QueryString["returnurl"]) ?? Url.Action("Index"))" >Back to User Verification List</a>
    </div>
    <div class="main-content">
        <div class="content-title">Request Information</div>
        <div class="content-body">
            <div class="form-group">
                @Html.LabelFor(model => model.Title, null, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4">
                    <p class="form-control-static">@Model.Title.ToDescription()</p>
                </div>
                @Html.LabelFor(model => model.RoleType, null, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4">
                    <p class="form-control-static">@Model.RoleType.ToDescription()</p>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, null, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4">
                    <p class="form-control-static">@Model.FirstName</p>
                </div>
                @Html.Label("Requested On", null, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4">
                    <p class="form-control-static">@(Model.CreatedOn.ToString("MM/dd/yyyy") == "01/01/1753" ? "" : Model.CreatedOn.ToString("MM/dd/yyyy"))</p>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LastName, null, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4">
                    <p class="form-control-static">@Model.LastName</p>
                </div>
                @Html.LabelFor(model => model.Status, null, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4">
                    <p class="form-control-static">@Model.Status</p>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, null, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4">
                    <p class="form-control-static">@Model.Email</p>
                </div>
            </div>

            @if (ViewBag.ShowType == "disabled")
            {
                <div class="form-group">
                    @Html.Label("Community/District", null, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        <p class="form-control-static">@ViewBag.CommunityName</p>
                        <br />
                        <p class="form-control-static">@ViewBag.CommunityInfo</p>
                    </div>
                    <div class="col-sm-4">
                        @Html.HiddenFor(model => model.CommunityId, new { @class = "form-control validate", placeholder = "selected from autocomplete" })
                        @Html.ValidationMessageFor(model => model.CommunityId)
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    @Html.Label("txtCommunity", "Community/District", new { @class = "col-sm-2 control-label", @for = "txtCommunity" })
                    <div class="col-sm-4">
                        @Html.TextBox("txtCommunity", (string)ViewBag.CommunityName, new
                        {
                            autocomplete = "off",
                            @class = "form-control",
                            data_list = "true",
                            data_for = "#CommunityId",
                            data_remote = "/Community/Community/GetCommunitySelectList",
                            data_text = "Name",
                            data_value = "ID",
                            data_searchfields = "Zip",
                            id = "txtCommunity",
                            name = "txtCommunity",
                            @for = "CommunityId",
                            placeholder = "Enter Community/District name or zipcode to search"
                        })
                        @Html.ValidationMessageFor(model => model.CommunityId)
                        <p class="form-control-static" id="pCommunityInfo">@ViewBag.CommunityInfo</p>
                        @Html.HiddenFor(model => model.CommunityId, new { @class = "form-control logup-right validate" })
                    </div>
                    <div class="col-sm-6" id="dvAddCommunity">
                        Not found? <a target="_blank" class="form-link" href="/Community/Community/New?basicCommunityId=@(ViewBag.BasicCommunityId)&basicCommunityName=@(ViewBag.CommunityName)">Add Here</a>
                    </div>
                </div>
            }

            <div class="form-group">
                @Html.Label("Sponsor", null, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4">
                    <p class="form-control-static">@ViewBag.InviteeUserName</p>
                </div>
                @Html.Label("Invited On", null, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4">
                    <p class="form-control-static">@(Model.InvitedOn.ToString("MM/dd/yyyy") == "01/01/1753" ? "" : Model.InvitedOn.ToString("MM/dd/yyyy"))</p>
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Invitee", null, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4">
                    <p class="form-control-static">@ViewBag.SponsorUserName</p>
                </div>
                @Html.Label("Verified On", null, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-4">
                    <p class="form-control-static">@(Model.VerifiedOn.ToString("MM/dd/yyyy") == "01/01/1753" ? "" : Model.VerifiedOn.ToString("MM/dd/yyyy"))</p>
                </div>
            </div>

            <div class="form-group">
                <span class="col-sm-4 control">Available Additional Packages</span>
            </div>
            <div class="form-group">
                <div class="col-sm-1 ">&nbsp;</div>
                <div class="col-sm-10">
                    <div class="form-group">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>
                                        <input type="checkbox" id="chkAll" />
                                        <label for="chkAll">Select All</label>
                                    </th>
                                    <th>Package Name</th>
                                    <th>Description</th>
                                </tr>
                            </thead>
                            <tbody id="tbPackage">
                                @if (listGroupPackage != null)
                                {
                                    foreach (var item in listGroupPackage)
                                    {
                                    <tr>
                                        <td>
                                            <label for="txtPackage@(item.PackageId)" class="hide">@item.PackageName</label>
                                            <input type="checkbox" id="txtPackage@(item.PackageId)" name="packageIds" value="@item.PackageId">
                                        </td>
                                        <td>@item.PackageName</td>
                                        <td>@item.PackageDescription</td>
                                    </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="button-content">
            <input type="submit" class="mainbutton mainright-btn submit-btn" value="Send Invitation">
            <button class="mainbutton modal-btn cancel-btn" type="button" onclick='redirectBack("index")'>Close</button>
        </div>
    </div>
}

