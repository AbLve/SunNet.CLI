@using System.Web.Optimization
@using System.Web.UI.WebControls
@using Sunnet.Cli.Business.Cpalls.Models.Report
@using Sunnet.Cli.Core.Ade
@using Sunnet.Cli.UIBase.Models
@{
    ViewBag.Title = "Student Summary";
    Layout = "~/Areas/Student/Views/Shared/_Layout_Report.cshtml";
    var sources = ViewData["Datas"] as Dictionary<int, List<ReportRowModel>>;
    var formId = PostFormHelper.GetFormId(Html.ViewContext.View);
    var isFirstPage = true;
    var gray = Request.Form["Gray"];
}



@foreach (var source in sources)
{
    var datas = source.Value;
    <table style="width: 100%" class='header @(isFirstPage ? "" : "newpager")'>
        <thead>
            <tr>
                <td>
                    <table cellpadding="0" cellspacing="0" class="noborder header">
                        <tr>
                            <td></td>
                            <td style="font-size: 14px; font-weight: bold;" colspan="3">@(ReportHelper.GetReportTitle(AssessmentType.Cpalls, ViewBag.AssessmentName))<br />
                                @(ViewBag.Title)</td>
                            <td>
                                <img src="@(DomainHelper.AssessmentDomain)images/cli_logo.png" style="width: 150px; height: 60px; vertical-align: middle;" alt="cli_logo" /></td>
                        </tr>
                        <tr>
                            <td style="text-align: left; width: 180px; vertical-align: top;" colspan="2">Community:&nbsp;@(ViewBag.District)
                            </td>
                            <td style="vertical-align: top;">&nbsp;</td>
                            <td style="text-align: right; width: 180px; vertical-align: top;" colspan="2">Assessment Language:&nbsp;@ViewBag.Language
                            </td>
                        </tr>
                        <tr>
                            <td style="text-align: left; vertical-align: top;" colspan="2">School:&nbsp;@ViewBag.School
                            </td>
                            <td>&nbsp;</td>
                            <td style="text-align: right; vertical-align: top;" colspan="2">Class:&nbsp;@ViewBag.Class</td>
                        </tr>
                        <tr>
                            <td style="text-align: left; vertical-align: top;" colspan="2">School year:&nbsp;@ViewBag.ScoolYear
                            </td>
                            <td>&nbsp;</td>
                            <td style="text-align: right; vertical-align: top;" colspan="2">Teacher:&nbsp;@Html.Raw(ViewBag.Teacher)</td>
                        </tr>
                        <tr>
                            <td style="width: 180px; height: 40px;"></td>
                            <td style="width: 50px;"></td>
                            <td></td>
                            <td style="width: 50px;"></td>
                            <td style="width: 180px;"></td>
                        </tr>
                    </table>
                </td>
            </tr>
        </thead>
    </table>
    <table cellpadding="0" cellspacing="0" class='report-data table_border'>
        <tr style="page-break-inside: avoid">
            <td colspan="@(datas[1].Cells.Count + 1)"><strong>Student: @datas[0].Cells.First().Text</strong></td>
        </tr>
        <tr>
            @for (var j = 0; j < datas[1].Cells.Count; j++)
            {
                <td rowspan="@(datas[1][j].Rowspan)"
                    colspan="@(datas[1][j].Colspan)">
                    <strong>
                        @(datas[1][j].Text.ToString().CutString((datas[1][j].Colspan > 1 ? datas[1][j].Colspan : 4) * 6))
                    </strong>
                </td>
            }
        </tr>
        @for (var i = 2; i < datas.Count; i++)
        {
            <tr style="page-break-inside: avoid">
                @for (var j = 0; j < datas[i].Cells.Count; j++)
                {
                    <td rowspan="@(datas[i][j].Rowspan)"
                        colspan="@(datas[i][j].Colspan)" class="@(datas[i][j].Background)">
                        <span>
                            @(datas[i][j].Text.ToString())
                        </span>
                    </td>
                }
            </tr>
        }
    </table>
    if (gray == "gray")
    {
        <table class="noborder" cellpadding="0" cellspacing="0" style="margin-bottom: 0px; margin-top: 5px;">
            <tr style="page-break-inside: avoid">
                <td class="cpalls_normal"><span>Bold</span></td>
                <td style="text-align: left;" class="cpalls_normal">: (green) Proficient (at or above benchmark)</td>
            </tr>
            <tr style="page-break-inside: avoid">
                <td class="cpalls_three"><span>#</span></td>
                <td style="text-align: left;">: (orange) Younger than 4 years-old, Developing (below benchmark)</td>
            </tr>
            <tr style="page-break-inside: avoid">
                <td class="cpalls_four"><span>#</span></td>
                <td style="text-align: left;">: (red) 4 years-old and older, Emergent (below benchmark)</td>
            </tr>
            <tr style="page-break-inside: avoid">
                <td class="cpalls_three_less"><span>#</span></td>
                <td style="text-align: left;">: (blue)Out of age range, no benchmarks apply</td>
            </tr>
            <tr style="page-break-inside: avoid">
                <td class="light_color"><span>#</span></td>
                <td style="text-align: left;">: (light colors) For instructional planning only</td>
            </tr>
            <tr>
                <td class="cpalls_no_benchmark"><span>#</span></td>
                <td style="text-align: left;">: Measure has no benchmarks</td>
            </tr>
        </table>
    }
    else
    {
        <table class="noborder" cellpadding="0" cellspacing="0" style="margin-bottom: 0px; margin-top: 5px;">
            <tr style="page-break-inside: avoid">
                <td class="cpalls_normal"><span>#</span></td>
                <td class="cpalls_normal_light" id="normal_light">&nbsp;&nbsp;or&nbsp;&nbsp;&nbsp;<span>#</span></td>
                <td style="text-align: left;">: Proficient (at or above benchmark)</td>
            </tr>
            <tr style="page-break-inside: avoid">
                <td class="cpalls_three"><span>#</span></td>
                <td class="cpalls_three_light" id="three_light">&nbsp;&nbsp;or&nbsp;&nbsp;&nbsp;<span>#</span></td>
                <td style="text-align: left;">: Younger than 4 years-old, Developing (below benchmark)</td>
            </tr>
            <tr style="page-break-inside: avoid">
                <td class="cpalls_four"><span>#</span></td>
                <td class="cpalls_four_light" id="four_light">&nbsp;&nbsp;or&nbsp;&nbsp;&nbsp;<span>#</span></td>
                <td style="text-align: left;">: 4 years-old and older, Emergent (below benchmark)</td>
            </tr>
            <tr style="page-break-inside: avoid">
                <td class="cpalls_three_less"><span>#</span></td>
                <td class="cpalls_three_less_light" id="three_less_light">&nbsp;&nbsp;or&nbsp;&nbsp;&nbsp;<span>#</span></td>
                <td style="text-align: left;">: Out of age range, no benchmarks apply</td>
            </tr>
            <tr>
                <td colspan="2" class="cpalls_no_benchmark"><span>#</span></td>
                <td style="text-align: left;">: Measure has no benchmarks</td>
            </tr>
            <tr>
                <td colspan="2"><span>Light colors</span></td>
                <td style="text-align: left;">: For instructional planning only</td>
            </tr>
        </table>
    }
    isFirstPage = false;
}