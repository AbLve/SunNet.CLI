@model Sunnet.Cli.Core.Users.Entities.StateWideEntity
@using Sunnet.Cli.UIBase.Models
@using Sunnet.Framework.Extensions
@using Sunnet.Cli.Business.Permission.Models
@using Sunnet.Cli.MainSite.Models

@{
    ViewBag.Title = "My Profile";
    var formId = PostFormHelper.GetFormId(Html.ViewContext.View);
}

@section Scripts
{
    <script type="text/javascript">
        +(function () {
            if ($("#PrimaryLanguageId :selected").text() == "Other")
                $("#PrimaryLanguageOther").attr("type", "text");
            if ($("#PositionId :selected").text() == "Other")
                $("#PositionOther").attr("type", "text");

            $("#PrimaryLanguageId").change(function () {
                if ($("#PrimaryLanguageId :selected").text() == "Other")
                    $("#PrimaryLanguageOther").attr("type", "text");
                else {
                    $("#PrimaryLanguageOther").val("");
                    $("#PrimaryLanguageOther").attr("type", "hidden");
                }
            })
            $("#PositionId").change(function () {
                if ($("#PositionId :selected").text() == "Other")
                    $("#PositionOther").attr("type", "text");
                else {
                    $("#PositionOther").val("");
                    $("#PositionOther").attr("type", "hidden");
                }
            })
            if ($("#UserInfo_Status").val() == "@((int)Sunnet.Cli.Core.Common.Enums.EntityStatus.Inactive)")
                $("#SaveInvite").hide();
            $("#UserInfo_Status").change(function () {
                if ($("#UserInfo_Status").val() == "@((int)Sunnet.Cli.Core.Common.Enums.EntityStatus.Inactive)")
                    $("#SaveInvite").hide();
                else
                    $("#SaveInvite").show();
            })
            $("#SaveInvite").click(function () {
                $("<input type='hidden' name='isInvite' id='isInvite' value='true' />").appendTo($("#@(formId)"));
            })

            $form = $("#@(formId)");
            registerFormCallbacks("@(formId)", {
                onResponsed: function (response) {
                    if (response.success) {
                        if (typeof response.data == "string") {
                            if (response.data == "waiting") {
                                promise = window.waitingAlert("warning", response.msg);
                            } else {
                                promise = window.showMessage("success", response.msg);
                            }
                        } else if (response.data == null) {
                            $.when(window.showMessage("success", response.msg)).done(function () {
                                if ("@(ViewBag.IsFirst)" == "True") {
                                    redirectBack("/home/Dashboard");
                                }
                            });
                        } else if (typeof response.data == "object") {
                            if (response.data.type == "continue") {
                                $.when(window.waitingConfirm(response.msg, "Continue", "Cancel")).done(function () {
                                    $form.find("#confirm").val(true);
                                    $form.submit();
                                }).fail(function () {
                                    $form.find("#confirm").val(false);
                                });
                            }
                        }
                } else {
                    window.showMessage("fail", response.msg);
                }
        })();
    </script>
}

@section LeftMenu
{
    @Html.Partial("~/Views/Shared/_MasterData_LeftMenu.cshtml", Leftmenu_MainSite.My_Profile)
}

@section BreadPath
{
    @(Model.UserInfo.FirstName + " " + Model.UserInfo.LastName)
}

@using (Ajax.BeginForm("SaveStateWide", "MyProfile", null, PostFormHelper.DefaultAjaxOptions,
    new
    {
        @class = "form-horizontal",
        id = formId
    }))
{
    <div class="main-content">
        @Html.Partial("~/Areas/Invitation/Views/StateWide/Partials/EditPartial.cshtml")
        <div class="button-content">
            <input type="submit" class="mainbutton mainright-btn submit-btn" value="Submit">
        </div>
        @Html.HiddenFor(model=>model.StateWideNotes)
    </div>
}
