
@using Sunnet.Cli.Business.Cot.Cumulative
@model Sunnet.Cli.Business.Cot.Cumulative.CumulativeReportModel
@{
    var model = Model;
}
<thead>
    <tr>
        <td style="width: 90px;"></td>
        <td style="width: 90px;"></td>
        <td style="width: 90px;"></td>
        <td style="width: 90px;"></td>

        <td style="width: 90px;"></td>
        <td style="width: 90px;"></td>
        <td style="width: 90px;"></td>
        <td style="width: 90px;"></td>

        <td style="width: 90px;"></td>
        <td style="width: 90px;"></td>
        <td style="width: 90px;"></td>
        <td style="width: 90px;"></td>
    </tr>
    <tr>
        <td colspan="4">
            &nbsp;
        </td>
        <th class="title" style="vertical-align: middle;" colspan="4">
            @(ReportHelper.GetReportTitle(AssessmentType.Cot, ViewBag.AssessmentName))<br />
            @(model.Type.ToDescription())
        </th>
        <td colspan="4" style="text-align: right;" rowspan="2">
            <img src="@(SFConfig.AssessmentDomain)/Resources/cli_logo.png" alt="CLI logo" style="width: 150px;" />
        </td>
    </tr>
    <tr>
        <td colspan="4">&nbsp;</td>
        <th class="title" colspan="4">
            @(ViewData["measureName"])
            <br />
            @(model.Type.GetDisplayName())
        </th>
    </tr>
    <tr>
        <td colspan="7">
            @Html.DisplayNameFor(x => model.Community):
            &nbsp;@(model.Community)
        </td>
        <td colspan="2"></td>
        <td colspan="3" style="text-align:right;">
            @Html.DisplayNameFor(x => model.Teachers):
            &nbsp;@(model.Teachers)
        </td>
    </tr>
    <tr>
        <td colspan="6">
            @(model.Type == CumulativeReportType.SchoolCumulative || model.Type == CumulativeReportType.AllAssignedSchoolCumulative ? "School" : "Schools")
            :
            &nbsp;@(model.School)
        </td>
        <td></td>
        <td colspan="2"></td>
        <td colspan="3" style="text-align:right;">
            @Html.DisplayNameFor(x => model.Mentor):
            &nbsp;@(model.Mentor)
        </td>
    </tr>
    <tr>
        <td colspan="6">
            @Html.DisplayNameFor(x => model.SchoolYear):
            &nbsp;@(model.FullSchoolYear)
        </td>
        <td></td>
        <td colspan="2"></td>
        <td colspan="3" style="text-align:right;">
            @Html.DisplayNameFor(x => model.BoyDate):
            &nbsp;@(model.BoyDate.FormatDateString())
        </td>
    </tr>
    <tr>
        <td colspan="6">
            @*@Html.DisplayNameFor(x => model.YearsInProject):
                &nbsp;@(string.Join(", ", model.YearsInProject))*@
        </td>
        <td></td>
        <td colspan="2"></td>
        <td colspan="3" style="text-align:right;">
            @Html.DisplayNameFor(x => model.MoyDate):
            &nbsp;@(model.MoyDate.FormatDateString())
        </td>
    </tr>
    <tr>
        <td colspan="6">
            @*@Html.DisplayNameFor(x => model.CoachModels):
                &nbsp;@(string.Join(", ", model.CoachModels.Select(x => x.ToDescription())))*@
        </td>
        <td></td>
        <td colspan="2"></td>
        <td colspan="3" style="text-align:right;">
            @Html.DisplayNameFor(x => model.MetDate):
            &nbsp;@(model.MetDate.FormatDateString())
        </td>
    </tr>
    @*<tr>
            <td colspan="6">
                @Html.DisplayNameFor(x => model.ECircles):
                &nbsp;@(string.Join(", ", model.ECircles.Select(x => x.ToDescription())))
            </td>
            <td></td>
            <td colspan="2"></td>
            <td colspan="3"> </td>
        </tr>*@
</thead>