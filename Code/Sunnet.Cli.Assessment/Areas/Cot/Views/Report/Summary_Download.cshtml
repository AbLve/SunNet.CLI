@using Sunnet.Cli.Business.Cot.Summary
@using Sunnet.Cli.Core.Users.Enums
@{
    ViewBag.Title = "Summary";
    Layout = "~/Areas/Cot/Views/Shared/_Layout_Report_Chart.cshtml";
    var models = ViewBag.Model as List<SummaryReportModel>;
    bool isFirstTeacher = true;
    int index = 0;
    string formId = PostFormHelper.GetFormId(Html.ViewContext.View);
    int itemIndex = 1;
    int itemsCount = 0;
    int pageSize = 10;
    int pageCount = 0;
    string assessmentName = ReportHelper.GetReportTitle(AssessmentType.Cot, ViewBag.AssessmentName);
}
@foreach (SummaryReportModel model in models)
{
    <table class='header @(isFirstTeacher ? "" : "newpager") ' width="100%">
        @Html.Partial("_Partial_SummaryReport_Head", model, new ViewDataDictionary { new KeyValuePair<string, object>("assessmentName", assessmentName) })
    </table>
    <div style="height: 520px; width: @(ReportHelper.GetChartWidth(model.Measures.Count(),80, 100, 1200)+200)px;text-align: center; page-break-inside: avoid; margin: 0 auto;">
        <img src='@(ViewData["Image" + index++])' />
    </div>
    <div class="note" style="color:#000000;">
        @foreach (var measure in model.Measures)
        {
            <b>@measure.ShortName:</b>
            <span>&nbsp;@(measure.Name);&nbsp;</span>
        }
    </div>
    {
        itemsCount = model.Measures.Sum(x => x.Items.Count());
        pageCount = itemsCount % pageSize == 0 ? itemsCount / pageSize : itemsCount / pageSize + 1;
    }
    for (var i = 0; i < pageCount; i++)
    {
        var j = 0;
        <table class="header newpager" width="100%">
            @Html.Partial("_Partial_SummaryReport_Head", model, new ViewDataDictionary { new KeyValuePair<string, object>("assessmentName", assessmentName) })
        </table>
        <table cellpadding="0" cellspacing="0" class="report-data table_border" style="text-align:center; margin-top:20px; margin-bottom:50px;  width:60%;">
            <thead style="page-break-inside: avoid">
                <tr>
                    <th width="5%"></th>
                    <th width="20%">Domain</th>
                    <th width="20%">Item</th>
                    <th width="15%">Level</th>
                    <th width="10%">Status</th>
                    <th width="15%">Date</th>
                    <th width="15%">Resource</th>
                </tr>
            </thead>
            <tbody>
                @foreach (SummaryMeasureModel measure in model.Measures)
                {
                    foreach (var item in measure.Items.ToArray())
                    {
                        j++;
                        if (i * pageSize >= j)
                        {
                            continue;
                        }
                        if (j > (i + 1) * pageSize)
                        {
                            break;
                        }
                        <tr>
                            <td>@(itemIndex++)</td>
                            <td>@measure.Name</td>
                            <td>@item.Description</td>
                            <td>@item.Level.GetValue()</td>
                            <td>@(item.IsMet ? "Met" : item.IsSet ? "Set" : "Not Set")</td>
                            <td>@(item.IsMet ? item.MetDate.ToString("MM/dd/yyyy") : item.IsSet ? item.SetDate.ToString("MM/dd/yyyy") : "")</td>
                            <td>
                                @if (item.Links != null)
                                {
                                    foreach (var link in item.Links)
                                    {
                                        <a href="@(link.Link)" target="_blank">@(link.DisplayText)</a>
                                        <br />
                                    }
                                }
                            </td>
                        </tr>

                    }
                    if (j >= (i + 1) * pageSize)
                    {
                        break;
                    }
                }
            </tbody>
        </table>
    }
    {
        itemIndex = 1;
        isFirstTeacher = false;
    }

}


