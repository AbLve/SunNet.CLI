@model Sunnet.Cli.Core.Cot.Entities.CotWaveEntity
@{
    ViewBag.Title = "Assessment";
    var assessmentId = (int)ViewBag.assessmentId;
    var teacherId = (int)ViewBag.teacherId;
    var teacher = (string)ViewBag.teacher;
    var formId = PostFormHelper.GetFormId(Html.ViewContext.View);
}

@section Styles{
    <style type="text/css">
        .tooltip-inner {
  max-width: 450px;
            text-align: left;
        }
    </style>
}
@section BreadPath
{
    <a href="/">@(ViewBag.AssessmentName)</a>
    <i class="icon-angle-right"></i>
    @Html.ActionLink("Teachers", "All", "Teacher", new { Area = "Cot", id = assessmentId }, new { })
    <i class="icon-angle-right"></i>
    @Html.ActionLink(teacher, "Index", "Teacher", new { Area = "Cot", assessmentId = assessmentId, id = teacherId, year = Request.QueryString["year"] }, new { })
    <i class="icon-angle-right"></i>
    COT Assessment
}
@section Scripts{
    @Scripts.Render("~/scripts/cot")
    <script type="text/javascript">
        var assessmentJson = @Html.Raw(ViewBag.Json);
        var assessmentModel = new CotAssessment(assessmentJson);
        var $form;
        assessmentModel.prapare = function() {
            var items = [];
            for (var i = 0; i < assessmentModel.measures.length; i++) {
                var measure = assessmentModel.measures[i];
                if (measure.items && measure.items.length) {
                    for (var j = 0; j < measure.items.length; j++) {
                        var item = measure.items[j];
                        if (item.observed()) {
                            items.push({
                                ItemId: item.itemId,
                                NeedSupport: item.needSupport()
                            });
                        }
                    }
                }
                if (measure.children && measure.children.length) {
                    for (var k = 0; k < measure.children.length; k++) {
                        var child = measure.children[k];
                        if (child.items && child.items.length) {
                            for (var j = 0; j < child.items.length; j++) {
                                var item = child.items[j];
                                if (item.observed()) {
                                    items.push({
                                        ItemId: item.itemId,
                                        NeedSupport: item.needSupport()
                                    });
                                }
                            }
                        }
                    }
                }
            }
            $("#hidItems").val(JSON.stringify(items));
        };
        assessmentModel.save = function() {
            $("#hidIsFinalize").val(false);
            assessmentModel.prapare();
            $form.submit();
        };
        assessmentModel.finalize = function() {
            $("#hidIsFinalize").val(true);
            assessmentModel.prapare();
            if ($form.valid()) {
                $.when(window.waitingConfirm("Cot_Finalize_Confirm", "Finalize", "No")).done(function() {
                    $form.submit();
                });
            }
        };
        $(function() {
            $form = $("#@(formId)");
            window.registerFormCallbacks("@(formId)", {
                onPosted: function(response) {
                    if (response.data == "gotoTeacher") {
                        location.replace('@Html.Raw(Url.Action("Index", "Teacher", new {id = teacherId, assessmentId, year = Request.QueryString["year"]}))');
                    } else if (response.data == "refresh") {
                        location.replace(location.href);
                    }
                }
            });
            ko.applyBindings(assessmentModel, document.getElementById("@(formId)"));
        });
    </script>
}
@using (Ajax.BeginForm("SaveAssessment", null, null, PostFormHelper.DefaultAjaxOptions, new { id = formId, @class = "form-horizontal" }))
{
    <div class="right-content-top">
        <a class="mainbutton mainright-btn nav-btn"
           href="@Url.Action("Report", "Index", new { Area = "Cot", assessmentid = assessmentId, teacherId = teacherId, year = Request.QueryString["year"] })">
            COT Report
        </a>
        <a class="mainbutton mainright-btn nav-btn"
           href="@Url.Action("Index", "Teacher" , new { area="Cot" , assessmentid=assessmentId, id=teacherId, year=Request.QueryString["year"] })">
            Teacher Folder
        </a>
    </div>
    <div class="modal-l-b"></div>
    <div class="main-content">
        @Html.HiddenFor(x => x.ID)
        @Html.HiddenFor(x => x.Assessment.ID)
        @Html.HiddenFor(x => x.Assessment.AssessmentId)
        @Html.HiddenFor(x => x.Assessment.TeacherId)
        @Html.HiddenFor(x => x.Assessment.SchoolYear)
        <div class="content-body">
            <div class="form-group">
                @Html.LabelFor(x => x.Assessment.TeacherId, new { @class = "control-label col-sm-2" })
                <div class="col-sm-2">
                    @Html.Display("teacher")
                </div>
                @Html.LabelFor(x => x.Assessment.SchoolYear, new { @class = "control-label col-sm-2" })
                <div class="col-sm-2">
                    @Html.DisplayFor(x => x.Assessment.SchoolYear)
                </div>
                @Html.LabelFor(x => x.Wave, new { @class = "control-label col-sm-2 required" })
                <div class="col-sm-2">
                    @Html.DropDownListFor(x => x.Wave, (IEnumerable<SelectListItem>)ViewBag.WaveOptions, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Wave)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.VisitDate, new { @class = "control-label col-sm-2 required" })
                <div class="col-sm-2">
                    @Html.TextBoxFor(x => x.VisitDate, new { @class = "form-control date", Value = Model.VisitDate.FormatDateString() })
                    @Html.ValidationMessageFor(model => model.VisitDate)
                </div>
                @Html.LabelFor(x => x.SpentTime, new { @class = "control-label col-sm-2 required" })
                <div class="col-sm-2">
                    @Html.DropDownListFor(x => x.SpentTime, (IEnumerable<SelectListItem>)ViewBag.SpentTimeOptions, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SpentTime)
                </div>
                <div class="col-sm-2"></div>
                    <div class="col-sm-2">
                        <button type="button" class="mainbutton mainright-btn create-btn" data-bind="text:$root.showFullTargetText()?'Show Short Text':'Show Full Text' , click:toggleFullTargetText"></button>
                    </div>
                </div>
        </div>
        <br />
        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="false" data-bind="foreach:{data:measures,as:'measure'}">
            <!-- ko if:measure.visible -->
            <div class="panel panel-default">
                <div class="panel-heading" role="tab" data-bind="attr:{id:'head'+$index()}">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" data-parent="#accordion" aria-expanded="true" data-bind="attr:{'aria-controls':'content'+$index(),href:'#content'+$index()},html:name">
                        </a>
                    </h4>
                </div>
                <div class="panel-collapse collapse" role="tabpanel" data-bind="attr:{'aria-labelledby':'head'+$index(),id:'content'+$index()},css:{in:$index() == 0}">
                    <div class="panel-body">
                        <div class="content-body-tab">
                            <table class="table table-hover table-striped table-condensed">
                                <thead>
                                    <tr>
                                        <th style="width: 50px;">Obs</th>
                                        <th style="width: 50px;">NS</th>
                                        <th>Item</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <!-- ko if:items-->
                                    <!-- ko template:{name:'_tmp_item',foreach:items,as:'item'}-->
                                    <!-- /ko-->
                                    <!-- /ko-->
                                    <!-- ko if:children && children.length-->
                                    <!-- ko foreach:{data:children,as:'childMeasure'}-->
                                    <!-- ko if: childMeasure.visible-->
                                    <!-- ko template:{name:'_tmp_measure',data:childMeasure}-->
                                    <!-- /ko-->
                                    <!-- ko template:{name:'_tmp_item',foreach:childMeasure.items,as:'childItem'}-->
                                    <!-- /ko-->
                                    <!-- /ko-->
                                    <!-- /ko-->
                                    <!-- /ko-->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /ko-->
        </div>
        <div class="button-content">
            <input type="hidden" id="hidItems" name="items" />
            <input type="hidden" id="hidIsFinalize" name="isFinalize" value="false" />
            <input type="button" class="mainbutton mainright-btn submit-btn" data-bind="click:save" value="Save">
            <input type="button" class="mainbutton mainright-btn submit-btn" data-bind="click:finalize" value="Finalize">
        </div>

    </div>
}
<script type="text/html" id="_tmp_item">
    <tr>
        <td>
            <label><span style="display: none">1</span>
            <input type="checkbox" data-bind="checked:observed,id:item.itemId" /></label>
        </td>
        <td>  <label><span style="display: none">1</span>
            <input type="checkbox" data-bind="checked:needSupport,enable:observed()" /></label>
        </td>
        <td style="text-align: left;">
            <span data-html="true" id="short" data-bind="html:shortTargetText,visible:$root.showFullTargetText()==false,tooltip:fullTargetText"></span>
            <div data-bind="html:fullTargetText,visible:$root.showFullTargetText()"></div>
        </td>
    </tr>
</script>
<script type="text/html" id="_tmp_measure">
    <tr class="info">
        <td colspan="3" style="text-align: left;">
            <b data-bind="text:name"></b>
        </td>
    </tr>
</script>
