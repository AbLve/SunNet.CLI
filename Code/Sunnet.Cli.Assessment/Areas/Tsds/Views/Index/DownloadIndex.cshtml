@model Sunnet.Cli.Business.Tsds.Models.DownloadListModel
@using System.Web.Optimization

@{
    ViewBag.Title = "TSDS";
}

@section Styles
{
    @Styles.Render("~/css/multiselect")
    <style type="text/css">
        .form-horizontal .radio, .form-horizontal .checkbox, .form-horizontal .radio-inline, .form-horizontal .checkbox-inline {
            float: none;
        }

        .multiselect-container {
            max-height: 300px;
            overflow-y: scroll;
        }
    </style>
}

<div class="right-content-top">
    TSDS File Download
</div>
<div class="modal-l-b"></div>
<form class="form-horizontal" role="form" id="formSearchLayout">
    <div class="form-group">
        @Html.Label("Assessment", "Assessment", new { @class = "control-label col-sm-2" })
        <div class="col-sm-3">
            @Html.DropDownList("Measures", (IEnumerable<SelectListItem>)ViewBag.Measures,
                     new { @class = "form-control", data_bind = "value: searchCriteria.measures", multiple = "multiple" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Community", "Community", new { @class = "control-label col-sm-2" })
        <div class="col-sm-3">
            @Html.DropDownList("Communities", (IEnumerable<SelectListItem>)ViewBag.Communities,
                     new { @class = "form-control", data_bind = "value: searchCriteria.communities", multiple = "multiple" })
        </div>
        @Html.Label("School", "School", new { @class = "control-label col-sm-2" })
        <div class="col-sm-3">
            @Html.DropDownList("Schools", (IEnumerable<SelectListItem>)ViewBag.Schools,
                              new { @class = "form-control", data_bind = "value: searchCriteria.schools", multiple = "multiple" })
        </div>
        <div class="col-sm-2">
            <button class="mainbutton mainright-btn sreach-btn" type="button" data-bind="event: { click: search }">Request TSDS Download</button>
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="txtFile">File Name</label>
        <div class="col-sm-3">
            @Html.TextBox("txtFile", "", new
            {
                autocomplete = "off",
                @class = "form-control",
                data_list = "true",
                data_for = "#FileId",
                data_remote = Url.Action("GetFileList", "Index"),
                data_text = "Text",
                placeholder = "Enter key text to search",
                data_value = "Value",
                id = "txtFile",
                name = "txtFile",
                @for = "FileId",
                data_required = "false",
                data_bind = "value: searchCriteria.fileName"
            })
            @Html.Hidden("FileId",
                new
                {
                    data_bind = "value: searchCriteria.fileId"
                })
        </div>
        <label class="control-label col-sm-2" for="txtCommunity">Community</label>
        <div class="col-sm-3">
            @Html.TextBox("txtCommunity", "", new
            {
                autocomplete = "off",
                @class = "form-control",
                data_list = "true",
                data_for = "#CommunityId",
                data_remote = Url.Action("GetCommunitySelectListForSearch"),
                data_text = "Name",
                placeholder = "Enter key text to search",
                data_value = "ID",
                id = "txtCommunity",
                name = "txtCommunity",
                @for = "CommunityId",
                data_required = "false",
                data_bind = "value: searchCriteria.communityName"
            })
            @Html.Hidden("CommunityId",
                new
                {
                    data_bind = "value: searchCriteria.communityId"
                })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="txtSchool">School</label>
        <div class="col-sm-3">
            @Html.TextBox("txtSchool", "", new
       {
           autocomplete = "off",
           @class = "form-control",
           data_list = "true",
           data_remote = Url.Action("GetSchoolSelectList"),
           data_template = "<strong><% this[i].Name %></strong><br /><i style='color:gray'><% this[i].City %>, <% this[i].State %> <% this[i].Zip %></i>",
           @for = "SchoolId",
           data_for = "#SchoolId",
           data_text = "Name",
           data_value = "ID",
           placeholder = "Enter key text to search",
           id = "SchoolName",
           data_bind = "value: searchCriteria.schoolName",
           data_extraParams = "{\"communityId\":\"#CommunityId\"}",
           data_required = "false"
       })
            @Html.Hidden("SchoolId",
                new
                {
                    data_bind = "value: searchCriteria.schoolId"
                })
        </div>
        <label class="control-label col-sm-2" for="txtUser">By</label>
        <div class="col-sm-3">
            @Html.TextBox("txtUser", "", new
       {
           autocomplete = "off",
           @class = "form-control",
           data_list = "true",
           data_remote = Url.Action("GetDowndedUserList", "Index"),
           @for = "UserId",
           data_for = "#UserId",
           data_text = "Text",
           data_value = "Value",
           placeholder = "Enter key text to search",
           id = "UserName",
           data_bind = "value: searchCriteria.userName",
           data_required = "false"
       })
            @Html.Hidden("UserId",
                new
                {
                    data_bind = "value: searchCriteria.userId"
                })
        </div>
        <div class="col-sm-2">
            <button class="mainbutton mainright-btn sreach-btn" type="button" data-bind="event: { click: search }">Search</button>
        </div>
    </div>
</form>
<div class="main-content main-content">
    <div class="content-title">Files</div>
    <div class="content-body-tab">
        <table class="table table-striped table-hover">
            <thead>
                <tr data-bind="foreach: { data: headers, as: 'header' }">
                    <!-- ko if: (header.order === true)-->
                    <th data-bind="style: { width: width }">
                        <a href="javascript:;" data-bind="text: text, click: $root.changeOrder"></a>
                        <span class="glyphicon"
                              data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'ASC',
    css: { 'glyphicon-arrow-up': $root.orderDirection().toUpperCase() == 'ASC' }"></span>
                        <span class="glyphicon"
                              data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'DESC',
    css: { 'glyphicon-arrow-down': $root.orderDirection().toUpperCase() == 'DESC' }"></span>
                    </th>
                    <!-- /ko-->
                    <!-- ko if: (header.order === false) -->
                    <th data-bind="text: text, style: { width: width }"></th>
                    <!-- /ko-->
                </tr>
            </thead>
            <tbody data-bind="foreach: { data: showRecords, as: 'item' }">
                <tr>
                    <td data-bind="text: item.FileName"></td>
                    <td data-bind="text: item.CommunityName"></td>
                    <td data-bind="text: item.SchoolName"></td>
                    <td data-bind="text: item.DownloadedBy"></td>
                    <td data-bind="datetime: item.DownloadedOn"></td>
                    <td data-bind="text: item.Status"></td>
                    <td>
                        <a class="table-btn icon-download-alt download-btn" data-bind="attr: { href: $root.ViewNotes(item) }" title="Download"></a>
                    </td>
                </tr>
            </tbody>
            @Html.Display("e", "NoData", new { Colspan = 7 })
        </table>
        @Html.Partial("_Partial_Pager")
    </div>
</div>



@section Scripts
{
    @Scripts.Render("~/scripts/MultiSelect")
    <script type="text/javascript">
        var list_Download = {};
        $(function () {
            $('#Measures').multiselect();
            $('#Communities').multiselect();
            $('#Schools').multiselect();

            list_Download = new ViewModel(
                {
                    instanceName: "list_Download",
                    modalId: "modalNormal",
                    getDataUrl: '@Html.Raw(Server.UrlDecode(Url.Action("Search")))',
                    addDataUrl: '@Html.Raw(Url.Action("New"))',
                    editDataUrl: '@Html.Raw(Url.Action("Edit"))',
                    viewDataUrl: '@Html.Raw(Url.Action("View"))',
                    orderBy: "ID",
                    orderDirection: "DESC",
                    pageSize: 10,
                    headers: [

                        {
                            text: "@Html.DisplayName("File Name")",
                            field: "@Html.NameFor(model => model.FileName)",
                            order: true,
                            width: '*'
                        },
                        {
                            text: "@Html.DisplayName("Community")",
                            field: "@Html.NameFor(model => model.CommunityName)",
                            order: true,
                            width: '10%'
                        },
                        {
                            text: "@Html.DisplayName("School")",
                            field: "@Html.NameFor(model => model.SchoolName)",
                            order: true,
                            width: '10%'
                        },
                        {
                            text: "@Html.DisplayName("Downloaded By")",
                            field: "@Html.NameFor(model => model.DownloadedBy)",
                            order: true,
                            width: '15%'
                        },
                            {
                                text: "@Html.DisplayName("Downloaded On")",
                                field: "@Html.NameFor(model => model.DownloadedOn)",
                                order: true,
                                width: '15%'
                            },
                            {
                                text: "@Html.DisplayName("Status")",
                                field: "@Html.NameFor(model => model.Status)",
                                order: true,
                                width: '10%'
                            },
                            { text: "Action", width: '15%' }
                    ],
                    searchCriteria: {
                        fileId: ko.observable(window.queryString("fileId", "")),
                        fileName: ko.observable(window.queryString("fileName", "")),
                        communityId: ko.observable(window.queryString("communityId", "")),
                        communityName: ko.observable(window.queryString("communityName", "")),
                        schoolId: ko.observable(window.queryString("schoolId", "")),
                        schoolName: ko.observable(window.queryString("schoolName", "")),
                        userId: ko.observable(window.queryString("userId", "")),
                        userName: ko.observable(window.queryString("userName", ""))
                    }
                },
        {
            featureData: function (data) {
                var param = { communityId: data.ID };
                var queryString = '@Html.Raw(Url.Action(ViewBag.FeatureQueryString))';
                return list_Community.appendQueryString(queryString, param);
            },
            AssignSchools: function (data) {
                return '@Url.Action("AssignSchools")' + "?comId=" + data.ID + "&returnurl=" + list_Community.getLocation();
            },
            EditNotes: function (data) {
                return '@Url.Action("EditNotes")' + "?comId=" + data.ID + "&returnurl=" + list_Community.getLocation();
            },
            ViewNotes: function (data) {
                return '@Url.Action("ViewNotes")' + "?comId=" + data.ID + "&returnurl=" + list_Community.getLocation();
            }
        }
            );
            list_Download.search();
            ko.applyBindings(list_Download);
        })
    </script>
}
