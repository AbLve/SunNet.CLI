@model TxkeaExpressiveItemModel
@{
    Layout = "~/Views/Shared/_Layout_KeaItem.cshtml";
    if (Model.ID < 1)
    {
        ViewBag.Title = "New " + Model.Type.ToDescription();
    }
    else
    {
        ViewBag.Title = Model.Label;
    }
    var formId = PostFormHelper.GetFormId(Html.ViewContext.View);
    var baseClassObj = new { @class = "form-control" };
    var backUrl = Server.UrlDecode(Request.QueryString["returnurl"]) ??
                  Url.Action("Detail", "Measure", new { id = Model.MeasureId });
}

@section LeftMenu
{
    @Html.Partial("~/Views/Shared/_Partial_Left_Ade.cshtml")
}
@section BreadPath
{
    @Html.Partial("NEV_Item_BreadPath", Model)
}
@section Scripts
{
    @Scripts.Render("~/scripts/ade")
    @Scripts.Render("~/scripts/upload")
    @Scripts.Render("~/scripts/ckeditor")

    <script type="text/javascript">
        
        function getTxkeaExpressiveItemModel(defaultValues, controls) {
            var self = getItemModel(defaultValues, controls);
            self.ImageList = ko.observableArray([]);

            self.formPrepared = function (viewModel, event) {
                updateCkeditor();
                var $sender = $(event.target);
                var $form = $sender.closest("form");
                var uploaders = [];
                var uploader = null;
                var waitingCount = 0;
                if ((uploader = viewModel.uploader("InstructionAudioUploader"))) {
                    waitingCount += uploader.getStats().queueNum;

                    uploaders.push(viewModel.uploader("InstructionAudioUploader"));
                }

                viewModel.answerCount = viewModel.Answers().length;
                var answers = viewModel.Answers(), answer;
                for (var i = 0; i < viewModel.answerCount; i++) {
                    answer = answers[i];
                    var picKey = "Answer" + i + "PictureUploader";
                    if ((uploader = answer.uploader(picKey))) {
                        waitingCount += uploader.getStats().queueNum;

                        uploaders.push(answer.uploader(picKey));
                    }
                    var audioKey = "Answer" + i + "AudioUploader";
                    if ((uploader = answer.uploader(audioKey))) {
                        waitingCount += uploader.getStats().queueNum;

                        uploaders.push(answer.uploader(audioKey));
                    }
                }


                var waiting = $sender.data("waiting") || 0;
                waiting += waitingCount;
                $sender.data("waiting", waiting);

                var uploaded = $sender.data("uploaded") || 0;
                $sender.data("clicked", true);
                if (uploaders.length) {
                    for (var i = 0; i < uploaders.length; i++) {
                        if (uploaders[i].getStats().queueNum > 0) {
                            if (uploaders[i].state == "ready") {
                                uploaders[i].upload();
                            }
                        }
                    }
                }
                return waiting == uploaded;
            }

            return self;
        }

        function getUploaderPrefix() {
            return "@(ViewBag.EncryptUserID)_";
        }

        function getToFolder() {
            return "assessment";
        }

        CKEDITOR.replace('InstructionText',
        {
            toolbar: 'Cli'
        });
        var itemModel;

        jQuery(function() {
            registerFormCallbacks("@(formId)", {
                onPosted: function(response) {
                    redirectBack("@Html.Raw(backUrl)");
                }
            });

            var jsonModel = @Html.Raw(ViewBag.ModelJson);
            var formEle = document.getElementById("@formId");
            itemModel = getTxkeaExpressiveItemModel(jsonModel, { ImageList: "#ImageList" });

          
            ko.applyBindings(itemModel, formEle);

        });
    </script>
}
<div class="right-content-top">
    <a class="mainbutton mainright-btn nav-btn" href="@(Html.Raw(backUrl))">Back</a>
    @if (Model.ID > 0)
    {
        <a class="mainbutton mainright-btn nav-btn" target="_blank" href='@(Url.Action("Preview", "Execute", new { Area = "Cpalls", itemId = Model.ID, measureId = Model.MeasureId }))'>Preview</a>
    }
</div>
@using (Ajax.BeginForm("SaveTxkeaExpressive", "Item", null, PostFormHelper.DefaultAjaxOptions,
    new
    {
        @class = "form-horizontal",
        id = formId
    }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" name="ID" value="@Model.ID" />
    <input type="hidden" name="ImageList" id="ImageList" />

    <div class="main-content">
        <div class="content-body">
      
            <table class="table table-hover table-striped">
    <thead>
        <tr>
            <th width="3%"></th>
            <th width="20%">Target Image</th>
            <th width="15%">Image Time delay (ms)</th>
            <th width="*"></th>
            <th width="20%">Target Audio</th>
            <th width="15%">Audio Time delay (ms)</th>
            <th width="15%">Same as Image Delay</th>
        </tr>
    </thead>
    <tbody data-bind="foreach:{data:ImageList,as:'anser'}">
        <tr>
            <td data-bind="text:$index()+1"></td>
            <td>
                <div data-bind="attr:{id:'btnPickAnswer'+$index()+'Picture'}">Browse</div>
                <div class="webuploader-preview" data-bind="visible:ID > 0">
                    <a class="table-btn icon-zoom-in preview-btn"
                       data-bind="attr:{href:$root.BasePath + Picture}"
                       target="_blank"><span style="display:none;">1</span></a>
                </div>
                <div class="clearfix"></div>
                <div data-bind="attr:{id:'Answer'+$index()+'PictureFilelist'}" class="uploader-list"></div>
                <input type="hidden" class="validate"
                       data-submitbutton="#btnSubmit"
                       data-accept='{"title":"Image","extensions":"gif,jpg,jpeg,bmp,png",
                                "mimeTypes":"image/gif,image/jpeg,image/bmp,image/png"}'
                       data-bind="attr:{
    id:'Answer'+$index()+'Picture',name:'Answer'+$index()+'Picture',
    'data-pick':'#btnPickAnswer'+$index()+'Picture',
    'data-container':'#Answer'+$index()+'PictureFilelist',
    'data-targetfield':'#Answer'+$index()+'Picture'
},
    upload:true,
    value:Picture,required:true" />
                <div class="field-validation-valid" data-valmsg-replace="true"
                     data-bind="attr:{'data-valmsg-for':'Answer'+$index()+'Picture'}">
                </div>
            </td>
            <td>
                <label class="hide" data-bind="attr:{for:'PictureTime'+$index()}">Picture Timeout</label>
                <input type="text" class="form-control input-sm  uint timeout" maxlength="5" data-bind="
    value:PictureTime,
    number:true,
    attr:{name:'PictureTime'+$index(),id:'PictureTime'+$index()}"
                       style="width: 50px; display: inline-block;">
                <div class="field-validation-valid" data-valmsg-replace="true"
                     data-bind="attr:{'data-valmsg-for':'PictureTime'+$index()}">
                </div>
            </td>
            <td width="*"></td>
            <td>
                <div data-bind="attr:{id:'btnPickAnswer'+$index()+'Audio'}">Browse</div>
                <div class="webuploader-preview" data-bind="visible:Audio.length>0">
                    <a class="table-btn icon-zoom-in preview-btn"
                       data-bind="attr:{href:$root.BasePath + Audio}"
                       target="_blank"><span style="display:none;">1</span></a>
                </div>
                <div class="clearfix"></div>
                <div data-bind="attr:{id:'Answer'+$index()+'AudioFilelist'}" class="uploader-list"></div>
                <input type="hidden" class="validate"
                       data-submitbutton="#btnSubmit"
                       data-accept='{"title":"Audio","extensions":"mp3","mimeTypes":"audio/mpeg"}'
                       data-bind="attr:{
    id:'Answer'+$index()+'Audio',name:'Answer'+$index()+'Audio',
    'data-pick':'#btnPickAnswer'+$index()+'Audio',
    'data-container':'#Answer'+$index()+'AudioFilelist',
    'data-targetfield':'#Answer'+$index()+'Audio'
},upload:true,value:Audio" />
                <div class="field-validation-valid" data-valmsg-replace="true"
                     data-bind="attr:{'data-valmsg-for':'Answer'+$index()+'Audio'}">
                </div>
            </td>
            <td>
                <label class="hide" data-bind="attr:{for:'AudioTime'+$index()}">Audio Timeout</label>
                <input type="text" class="form-control input-sm  uint timeout" maxlength="5" data-bind="
    value:AudioTime,
    number:true,
    attr:{name:'AudioTime'+$index(),id:'AudioTime'+$index()}"
                       style="width: 50px; display: inline-block;">
                <div class="field-validation-valid" data-valmsg-replace="true"
                     data-bind="attr:{'data-valmsg-for':'AudioTime'+$index()}">
                </div>
            </td>
            <td>
                <label class="hide" data-bind="attr:{for:'SameasImageDelay'+$index()}">Is Correct</label>
                <input type="checkbox" data-bind="checked:SameasImageDelay,attr:{id:'SameasImageDelay'+$index()}" />
            </td>
        </tr>
    </tbody>
</table>



        </div>
    </div>
    <div class="button-content">
        <button class="mainbutton mainright-btn submit-btn submit" id="btnSubmit" type="button" data-bind="event:{click:submit}">Submit</button>
        <a class="mainbutton mainright-btn cancel-btn" href="@(Html.Raw(backUrl))">Cancel</a>
    </div>
}