@model MeasureModel
@{
    ViewBag.Title = "Parent Activities - " + Model.Label;
    Layout = "~/Views/Shared/_Modal_Layout.cshtml";
    var formId = PostFormHelper.GetFormId(Html.ViewContext.View);
}
@section Scripts{
    <script type="text/javascript">
        +(function () {
            console.log(1);
            var defaultLinks = @Html.Raw(ViewBag.ParentActivities);

            function Link() {
                this.DisplayText = "";
                this.Link = "";
                this.Status = 1;
                this.hasError = ko.observable(false);
                this.MeasureWave1 = false;
                this.MeasureWave2 = false;
                this.MeasureWave3 = false;
                this.StudentWave1 = false;
                this.StudentWave2 = false;
                this.StudentWave3 = false;
            }
            var ListModel = function (datas, formId, constructor) {
                var self = this;
                this.dataset = ko.observableArray([]);
                $.each(datas, function (i, data) {
                    var t = new constructor();
                    $.extend(t, data);
                    self.dataset.push(t);
                });

                this.newData = function () {
                    self.dataset.push(new constructor());
                }
                this.delete = function (data) {
                    self.dataset.remove(data);
                    if (self.dataset().length < 1)
                        self.dataset.push(new constructor());
                }
                this.submit = function () {
                    var links = "";
                    for (var i = 0 ; i < $("input[name='links']").length; i++) {
                        if ($("#Link" + i).val() != "") {
                            links += $("#Link" + i).val() + "|" + $("#DisplayText" + i).val();
                            links += "|" + $("#MeasureWave1" + i).prop('checked');
                            links += "|" + $("#MeasureWave2" + i).prop('checked');
                            links += "|" + $("#MeasureWave3" + i).prop('checked');
                            links += "|" + $("#StudentWave1" + i).prop('checked');
                            links += "|" + $("#StudentWave2" + i).prop('checked');
                            links += "|" + $("#StudentWave3" + i).prop('checked');
                            links += ";";
                        }
                    }
                    $("#activities").val(links);
                    $("#" + formId).submit();
                }

                if (this.dataset().length == 0) {
                    this.newData();
                }
            }
            var linksModel = new ListModel(defaultLinks, "@formId", Link);
            ko.applyBindings(linksModel, document.getElementById("@(formId)"));
        })();
    </script>
}
@using (Ajax.BeginForm("ParentActivities", "Measure", null, PostFormHelper.DefaultAjaxOptions, new
    {
        @class = "form-horizontal",
        id = formId
    }))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("id", Model.ID)
    <input type="hidden" name="activities" id="activities" />
    <div class="form-group">
        <div class="modal-body-tab">
            @Html.Editor("e", "HomeActivities")
        </div>
    </div>

    <div class="modal-footer">
        <button class="mainbutton modal-btn submit-btn" type="button" data-bind="event:{click:submit}">Submit</button>
        <button class="mainbutton modal-btn cancel-btn" type="button" data-dismiss="modal">Cancel</button>
    </div>
}