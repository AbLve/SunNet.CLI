@using System.Web.UI.WebControls
@using Sunnet.Cli.Business.Cpalls
@using Sunnet.Cli.Core.Ade
@using Sunnet.Cli.UIBase.Models
@{
    Layout = "~/Views/Shared/_Modal_Layout.cshtml";
    var formId = PostFormHelper.GetFormId(Html.ViewContext.View);
    var language = (int)ViewBag.language;
    var theOtherLanguage = (int)ViewBag.TheOtherLanguage;
}
@section Scripts
{
    <script type="text/javascript">
        var models = {};
        +(function() {
            var $form = $("#@(formId)");
            var tmpWave = 1;
            var groups = @(Html.Raw(ViewBag.MeasureJson));
            var waveMeasure = new WaveMeasures(groups, false);

            var groups2 = @(Html.Raw(ViewBag.MeasureJson2));
            var vaveMeasure2;
            if (groups2) {
                vaveMeasure2 = new WaveMeasures(groups2, false);
            }

            models.languages = {};
            models.languages[@(language)] = waveMeasure;
            if (vaveMeasure2) {
                models.languages[@(theOtherLanguage)] = vaveMeasure2;
            } else {
                models.languages[@(theOtherLanguage)] = false;
            }
            models.selectedLanguage = ko.observable(@(language));
            models.assessment = ko.computed(function() {
                return models.languages[models.selectedLanguage()];
            }, models);
            models.type = ko.observable("");
            models.submit = function() {
                if($("#StartDate").val() != "" && $("#EndDate").val() != "") {
                    if(DateCompare($("#StartDate").val(),$("#EndDate").val()) ==1){
                        window.showMessage("hint", "endDateCompareStartDate");
                        return false;
                    }
                }

                var waves = [];
                for (var i = 0; i < models.languages[1].wavesArr.length; i++) {
                    var wave = models.languages[tmpWave].wavesArr[i];
                    if (wave.selected()) {
                        waves.push(wave.id);
                    }
                }
                if (waves.length == 0) {
                    window.showMessage("hint", "Export_Select_Wave");
                    return false;
                }
                $form.find("#waves").val(JSON.stringify(waves));

                var measures = models.assessment().waves[1].selectedMeasures().slice(0);
                if (measures.length == 0) {
                    window.showMessage("hint", "Export_Select_Measure");
                    return false;
                }
                $.each(models.assessment().groups, function(index, group) {
                    if (group.parent && group.allSelected[tmpWave]()) {
                        measures.push(group.parent.id);
                    }
                });
                $form.find("#measures").val(JSON.stringify(measures));

                var type = models.type();
                if (!type) {
                    window.showMessage("hint", "Growth_Report_Type");
                    return false;
                }
                $form.find("#type").val(type);

                $form.submit();
                setTimeout(function() { $form.cliForm("loaded"); }, 3000);
            };
            ko.applyBindings(models, document.getElementById("@(formId)"));
            $("#languages").find("label.active").find("input").prop("checked", true);
        })();
    </script>
}
<form class="form-horizontal" role="form" method="POST" id="@(formId)"
      action='@Url.Action("Growth_Pdf", null, new { Area = "Report" })' target="_blank">
    <div class="form-group">
        <div class="btn-group term-chose-l" data-toggle="buttons" id="languages">
            <label class="btn  nav-btn" data-bind="css:{active:selectedLanguage()=='1','submit-btn':selectedLanguage()=='1'},attr:{disabled:languages[1]==false},click:function(){$root.selectedLanguage(1);}" for="language1">
                <input autocomplete="off" id="language1" name="language" type="radio" value="1">
                English Only
            </label>
            <label class="btn  nav-btn" data-bind="css:{active:selectedLanguage()=='2','submit-btn':selectedLanguage()=='2'},attr:{disabled:languages[2]==false},click:function(){$root.selectedLanguage(2);}" for="language2">
                <input autocomplete="off" id="language2" name="language" type="radio" value="2">
                Spanish Only
            </label>
        </div>
        <div class="btn-group term-chose-l" data-toggle="buttons" data-bind="foreach:{data:models.languages[1].wavesArr,as:'wave'}">
            <label class="btn nav-btn" data-bind="css:{'submit-btn':selected},click:function(){wave.selected(!wave.selected());}">
                <input type="checkbox" autocomplete="off">
                <span data-bind="text:text"></span>
            </label>
        </div>
        <div class="btn-group term-chose-l" data-toggle="buttons">
            <label class="btn nav-btn" data-bind="css:{'submit-btn':type() == '@(GrowthReportType.Average)'},click:function(){$root.type('@(GrowthReportType.Average)');}">
                <input type="radio" autocomplete="off" name="chooseType">Average Scores
            </label>
            <label class="btn nav-btn" data-bind="css:{'submit-btn':type() == '@(GrowthReportType.MeetingBenchmark)'},click:function(){$root.type('@(GrowthReportType.MeetingBenchmark)');}">
                <input type="radio" autocomplete="off" name="chooseType">% Meeting Benchmarks
            </label>
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-2 control-label" for="startdate">Time period</label>
        <div class="col-sm-2">
            <label for="StartDate" class="hide">Start Date</label>
            <input type="text" class="date form-control" id="StartDate" name="StartDate" placeholder="Start date" maxdate="@(DateTime.Now.FormatDateString())" />
        </div>
        <div class="col-sm-2">
            <label for="EndDate" class="hide">End Date</label>
            <input type="text" class="date form-control" id="EndDate" name="EndDate" placeholder="End date" data-mindate="#F{$dp.$D(\'StartDate\',{d:0});}" maxdate="@(DateTime.Now.FormatDateString())"/>
        </div>
        <label class="control-label col-sm-2">DOB Range </label>
        <div class="col-sm-2">
            <label for="StartDate" class="hide">Start Date</label>
            <input type="text" class="date form-control" id="dobStartDate" name="dobStartDate" placeholder="Start date" maxdate="@(DateTime.Now.FormatDateString())">
        </div>
        <div class="col-sm-2">
            <label for="EndDate" class="hide">End Date</label>
            <input type="text" class="date form-control" id="dobEndDate" name="dobEndDate" placeholder="End date" data-mindate="#F{$dp.$D(\'StartDate\',{d:0});}" maxdate="@(DateTime.Now.FormatDateString())">
        </div>
    </div>
    <div class="clearfix"></div>
    @Html.Partial("_Partial_Select_Measure")
    @Html.Hidden("assessmentId")
    @Html.Hidden("language")
    @Html.Hidden("year")
    @Html.Hidden("districtId")
    @Html.Hidden("type")
    @Html.Hidden("waves")
    @Html.Hidden("measures")
    @Html.Hidden("export", true)
    <div class="modal-footer">
        <button type="button" class="mainbutton mainright-btn submit-btn"
                data-bind="click:submit">
            @(ViewBag.Title)
        </button>
        <button class="mainbutton modal-btn cancel-btn" type="button" data-dismiss="modal">Close</button>
    </div>
</form>