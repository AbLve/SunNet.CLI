@using Sunnet.Cli.Assessment.Areas.Report.Controllers
@using Sunnet.Cli.Business.Ade.Models
@using Sunnet.Cli.Business.Cpalls.Models
@using Sunnet.Cli.Core.Ade.Entities
@using Sunnet.Cli.UIBase.Models
@using Sunnet.Framework.Extensions
@{
    Layout = "~/Areas/Report/Views/Shared/_Layout_Report.cshtml";
    List<CustomScoreReportModel> customScoreReports = ViewBag.CustomScoreReports;
    List<ScoreInitModel> customScoreInits = ViewBag.CustomScoreInits;
    var gray = Request.Form["Gray"];
    AssessmentLegendEntity assessmentLegend = ViewBag.AssessmentLegend;
}
<style>
    body {
        font-family: arial;
        font-size: 15px;
        color: #333;
    }

    .container {
        width: 100% !important;
        margin: 0;
        padding: 0;
    }

    .top-img {
        position: absolute;
        top: 0;
        right: 1%;
    }

    .top-title {
        display: inline-block;
        font-size: 18px;
        font-weight: 700;
        margin: 0 auto;
    }

    .top-left p {
        text-align: left;
        margin-bottom: 3px;
    }

    .top-right p {
        text-align: right;
        margin-bottom: 3px;
    }

    .top-logo {
        text-align: center;
    }
</style>
<script>
    function myFunction() { }
</script>
@{
    int customScoreNum = 0;
}

@foreach (var customScoreReport in customScoreReports)
{
    customScoreNum++;
    <table style="width: 100%" class="@(customScoreNum > 1 ? "newpager" : "")">
        <thead>
            <tr>
                <td>
                    <table cellpadding="0" cellspacing="0" class="noborder header">
                        <tr>
                            <td colspan="2" class="top-logo">
                                <div class="top-title">
                                    @(ViewBag.AssessmentName)<br />
                                    Custom Score Report
                                </div>
                                <div class="" style="float: right;">
                                    <img src="@(DomainHelper.AssessmentDomain)images/cli_logo.png" style="width: 150px; height: 60px; vertical-align: middle;" alt="cli_logo" />
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td class="top-left">
                                <p>Community:&nbsp;@(customScoreReport.Community)</p>
                                <p>School:&nbsp;@customScoreReport.School</p>
                                <p>School year:&nbsp;@customScoreReport.SchoolYear<br />Wave @customScoreReport.Wave.ToDescription()</p>
                            </td>
                            <td class="top-right">
                                <p>Assessment Language:&nbsp;@customScoreReport.Language</p>
                                <p>Class:&nbsp;@customScoreReport.Class</p>
                                <p>Teacher:&nbsp;@Html.Raw(customScoreReport.Teacher)</p>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    <table cellpadding="0" cellspacing="0" class='report-data table_border'>
                        <thead style="page-break-inside: avoid">
                            <tr class='fixed-columns-rotate' style="page-break-inside: avoid">
                                <th rowspan="1" colspan="2" class="border-l border-b">
                                    <div style="width: 200px;">
                                        <span>
                                            Student
                                        </span>
                                    </div>
                                </th>
                                @foreach (var customScoreInit in customScoreInits)
                                {
                                    <th class='fixed-columns-rotate'>
                                        <div>
                                            <span>@(customScoreInit.ScoreDomain)</span>
                                        </div>
                                    </th>
                                }
                                <th class="noborder "></th>
                                <th class="noborder "></th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                var studentNames = customScoreReport.ScoreReports.GroupBy(e => e.StudentName).ToList();
                            }
                            @for (var i = 0; i < studentNames.Count(); i++)
                            {
                                var studentName = studentNames[i].Key;
                                <tr style="page-break-inside: avoid">
                                    <td><b>@(i + 1)</b></td>
                                    <td><b>@(studentName)</b></td>
                                    @foreach (var customScoreInit in customScoreInits)
                                    {
                                        var scoreDomain = customScoreInit.ScoreDomain;
                                        var currentScore = customScoreReport.ScoreReports.FirstOrDefault(e => e.StudentName == studentName && e.ScoreDomain == scoreDomain);
                                        <td>
                                            @if (gray == "gray")
                                            {
                                                <span @(!string.IsNullOrEmpty(currentScore.Color) ? "style=background:" + currentScore.Color + ";" + " class=spancolorcustomscore" : "")>
                                                    @((currentScore == null || currentScore.FinalScore == null) ? "*" : currentScore.FinalScore.Value.ToString("f" + customScoreInit.TargetRound))
                                                </span>
                                            }
                                            else
                                            {
                                                <span @(!string.IsNullOrEmpty(currentScore.BlackWhite) ? "class=" + currentScore.BlackWhite : "")>
                                                    @((currentScore == null || currentScore.FinalScore == null) ? "*" : currentScore.FinalScore.Value.ToString("f" + customScoreInit.TargetRound))
                                                </span>
                                            }
                                        </td>
                                    }
                                    <td class="noborder border-l"></td>
                                    <td class="noborder"></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </td>
            </tr>
        </tbody>
    </table>
    <table class="noborder" cellpadding="0" cellspacing="0" style="margin-bottom: 0px; margin-top: 5px;">
        <tr style="page-break-inside: avoid">
            <td align="left"><span>*   Score cannot be calculated due to insufficient data.</span></td>
        </tr>
        @foreach (var customScoreInit in customScoreInits)
        {
            <tr style="page-break-inside: avoid">
                <td align="left">
                    <span>
                        @(customScoreInit.ScoreDomain) requires the following measures:
                    </span>
                    <span>@(string.Join("; ", customScoreInit.ScoreMeasures.Select(e => e.MeasureName).ToList()))</span>
                </td>
            </tr>
        }
    </table>
                                }

@if (gray == "gray")
{
    <table class="noborder" cellpadding="0" cellspacing="0" style="margin-bottom: 0px; margin-top: 5px;">
        <tr style="page-break-inside:avoid">
            <td colspan="2" style="text-align:left">
                @if (assessmentLegend != null)
                {
                    if (assessmentLegend.TextPosition.ToLower() == "bottom")
                    {
                        <img style="max-width: 100%;display:block;" src="@(Sunnet.Framework.SFConfig.StaticDomain + "upload/" + assessmentLegend.BlackWhiteFilePath)" />
                        @assessmentLegend.Text
                    }
                    else if (assessmentLegend.TextPosition.ToLower() == "top")
                    {
                        @assessmentLegend.Text
                        <img style="max-width: 100%;display:block;" src="@(Sunnet.Framework.SFConfig.StaticDomain + "upload/" + assessmentLegend.BlackWhiteFilePath)" />
                    }
                }
            </td>
        </tr>
    </table>
}
else
{
    <table class="noborder" cellpadding="0" cellspacing="0" style="margin-bottom: 0px; margin-top: 5px;">
        <tr style="page-break-inside:avoid">
            <td colspan="2" style="text-align:left">
                @if (assessmentLegend != null)
                {
                    if (assessmentLegend.TextPosition.ToLower() == "bottom")
                    {
                        <img style="max-width: 100%;display:block;" src="@(Sunnet.Framework.SFConfig.StaticDomain + "upload/" + assessmentLegend.ColorFilePath)" />
                        @assessmentLegend.Text
                    }
                    else if (assessmentLegend.TextPosition.ToLower() == "top")
                    {
                        @assessmentLegend.Text
                        <img style="max-width: 100%;display:block;" src="@(Sunnet.Framework.SFConfig.StaticDomain + "upload/" + assessmentLegend.ColorFilePath)" />
                    }
                }
            </td>
        </tr>
    </table>
}
