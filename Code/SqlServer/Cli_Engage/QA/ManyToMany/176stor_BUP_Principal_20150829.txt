ALTER PROCEDURE [dbo].[BUP_Principal]
	@BUPPrincipalUserID int,
	@CreatedBy int,
	@InvitationEmail bit
AS
BEGIN
	  SET XACT_ABORT ON;

	  DECLARE @Action tinyint
	  DECLARE @Role tinyint
      DECLARE @CommunityName varchar(200)
      DECLARE @CommunityEngageID varchar(50)
      DECLARE @SchoolName varchar(200)
      DECLARE @SchoolEngageID varchar(50)
      DECLARE @FirstName varchar(140)
      DECLARE @MiddleName varchar(140)
      DECLARE @LastName varchar(140)
      DECLARE @EngageId varchar(50)
      DECLARE @InternalID varchar(50)
      DECLARE @PrimaryPhoneNumber varchar(50)
      DECLARE @PrimaryNumberType tinyint
      DECLARE @PrimaryEmailAddress varchar(50)
      DECLARE @SecondaryEmailAddress varchar(50)
	
	  DECLARE @CommunityId INT
	  DECLARE @SchoolId INT
	  DECLARE @UserId INT --users 表Id

	BEGIN TRY
	  BEGIN TRANSACTION;

		 SELECT  @Action=[Action],@Role=[Role],@CommunityName=[CommunityName],@CommunityEngageID=[CommunityEngageID],@SchoolName=[SchoolName],@SchoolEngageID=[SchoolEngageID]
		  ,@FirstName=[FirstName],@MiddleName=[MiddleName],@LastName=[LastName],@EngageId=[EngageID],@InternalID=[InternalId]
		  ,@PrimaryPhoneNumber=[PrimaryPhoneNumber],@PrimaryNumberType=[PrimaryNumberType],@PrimaryEmailAddress=[PrimaryEmailAddress]
		  ,@SecondaryEmailAddress=[SecondaryEmailAddress]
		 FROM [dbo].BUP_Principals WHERE ID = @BUPPrincipalUserID

		 SELECT @CommunityId =ID FROM Communities  WHERE CommunityId=@CommunityEngageID

		 SELECT @SchoolId=s.Id FROM Schools s INNER JOIN CommunitySchoolRelations r ON r.SchoolId=s.id
				WHERE s.SchoolId = @SchoolEngageID AND r.CommunityId = @CommunityId	

		 IF(@EngageId != '')		
			SELECT @UserId =UserId FROM Principals WHERE PrincipalId=@EngageId	 

		--INSERT
		IF(@Action = 1) BEGIN
			IF(@CommunityId IS NULL)
				UPDATE BUP_Principals SET Status=5 , Remark ='Community Engage ID is not in Communities' WHERE ID = @BUPPrincipalUserID
			ELSE BEGIN						
				IF(@SchoolId IS NULL) 
					UPDATE BUP_Principals SET Status=5 , Remark ='School Engage ID is not in schools' WHERE ID = @BUPPrincipalUserID
				ELSE BEGIN
				  IF(EXISTS (SELECT * FROM Users WHERE FirstName=@FirstName AND LastName=@LastName 
					AND PrimaryEmailAddress= @PrimaryEmailAddress AND Status=1 AND Role!=@Role))
						UPDATE 	BUP_Principals SET Status=5 ,Remark ='One user has been existed with different role ' WHERE ID = @BUPPrincipalUserID	
				  ELSE
					BEGIN
						SELECT @UserId = ID FROM Users WHERE FirstName=@FirstName AND LastName=@LastName 
						AND PrimaryEmailAddress= @PrimaryEmailAddress AND Status=1 AND Role=@Role
						IF(@UserId IS NULL)		
						BEGIN
							INSERT INTO [dbo].[Users]
							([Role]
							,[GoogleId]
							,[FirstName]
							,[MiddleName]
							,[LastName]
							,[PreviousLastName]
							,[Status]
							,[StatusDate]
							,[PrimaryEmailAddress]
							,[SecondaryEmailAddress]
							,[PrimaryPhoneNumber]
							,[PrimaryNumberType]
							,[SecondaryPhoneNumber]
							,[SecondaryNumberType]
							,[FaxNumber]
							,[CreatedOn]
							,[UpdatedOn]
							,[IsDeleted]
							,[Sponsor]
							,[InvitationEmail]
							,[EmailExpireTime]
							,[Notes]
							,[gmail]
							,[IsSyncLms]
							,[InternalID])
							VALUES
							( @Role --<Role, tinyint,>
							,''-- <GoogleId, varchar(50),>
							,@FirstName --, varchar(140),>
							,@MiddleName --, varchar(140),>
							,@LastName --, varchar(140),>
							,''--<PreviousLastName, varchar(140),>
							,1--<Status, tinyint,>
							,GETDATE() --<StatusDate, datetime,>
							,@PrimaryEmailAddress --, varchar(50),>
							,@SecondaryEmailAddress --, varchar(50),>
							,@PrimaryPhoneNumber --, varchar(50),>
							,@PrimaryNumberType --, tinyint,>
							,'' --, varchar(50),>
							,0--<SecondaryNumberType, tinyint,>
							,''--<FaxNumber, varchar(50),>
							,GETDATE()--<CreatedOn, datetime,>
							,GETDATE()--<UpdatedOn, datetime,>
							,0--<IsDeleted, bit,>
							,1--<Sponsor, int,>
							,(case when @InvitationEmail=1 then 2 else 1 end)--<InvitationEmail, tinyint,>
							,'1753/1/1' --<EmailExpireTime, datetime,>
							,'BUP' --<Notes, varchar(100),>
							,'' --<gmail, varchar(200),>
							,0 --<IsSyncLms, bit,>
							,@InternalID
							)

							SELECT @UserId = SCOPE_IDENTITY()

							INSERT INTO [dbo].[Principals]
									   ([UserId]
									   ,[PrincipalId]
									   ,[SchoolYear]
									   ,[BirthDate]
									   ,[Gender]
									   ,[PositionId]
									   ,[PositionOther]
									   ,[IsSameAddress]
									   ,[Address]
									   ,[Address2]
									   ,[City]
									   ,[CountyId]
									   ,[StateId]
									   ,[Zip]
									   ,[Ethnicity]
									   ,[EthnicityOther]
									   ,[PrimaryLanguageId]
									   ,[PrimaryLanguageOther]
									   ,[TotalYearCurrentRole]
									   ,[TotalYearSchoolWorking]
									   ,[EducationLevel]
									   ,[PDOther]
									   ,[PrincipalNotes]
									   ,[ParentId]
									   ,[SchoolLevelRequest])
								 VALUES
									   (@UserId --, int,>
									   ,@EngageId --<PrincipalId, varchar(50),>
									   ,dbo.GetSchoolYear() --<SchoolYear, varchar(5),>
									   ,'1753-1-1'--<BirthDate, datetime,>
									   ,1--<Gender, tinyint,>
									   ,0--<PositionId, int,>
									   ,''--<PositionOther, varchar(100),>
									   ,0--<IsSameAddress, int,>
									   ,''--<Address, varchar(200),>
									   ,''--<Address2, varchar(200),>
									   ,''--<City, varchar(200),>
									   ,0--<CountyId, int,>
									   ,0--<StateId, int,>
									   ,''--<Zip, varchar(5),>
									   ,0--<Ethnicity, tinyint,>
									   ,''--<EthnicityOther, varchar(100),>
									   ,0--<PrimaryLanguageId, int,>
									   ,''--<PrimaryLanguageOther, varchar(100),>
									   ,0--<TotalYearCurrentRole, int,>
									   ,0--<TotalYearSchoolWorking, int,>
									   ,0--<EducationLevel, tinyint,>
									   ,''--<PDOther, varchar(100),>
									   ,''--<PrincipalNotes, varchar(600),>
									   ,0--<ParentId, int,>
									   ,0--<SchoolLevelRequest, bit,>
									   )	
						END
						IF(NOT EXISTS (SELECT * FROM UserComSchRelations WHERE UserId=@UserId AND SchoolId=@SchoolId))
							INSERT INTO [dbo].[UserComSchRelations]
									([UserId]
									,[CommunityId]
									,[SchoolId]
									,[Status]
									,[CreatedBy]
									,[CreatedOn]
									,[UpdatedBy]
									,[UpdatedOn])
								VALUES
									(@UserId  
									,0--<CommunityId, int,>
									,@SchoolId 
									,1--<Status, tinyint,>
									,@CreatedBy--<CreatedBy, int,>
									,GETDATE() 
									,@CreatedBy--<UpdatedBy, int,>
									,GETDATE() --<UpdatedOn, datetime,>
									)
				   END
				END	--END INSERT 
			END	
		END  --END ACTION=1

		--UPDATE
		IF(@Action = 2) BEGIN	
			IF(@SchoolId IS NULL)
				UPDATE BUP_Principals SET Status=5 , Remark ='School Engage ID is not in schools' WHERE ID = @BUPPrincipalUserID
			ELSE BEGIN 	    
				IF(@UserId IS NULL)BEGIN
					UPDATE BUP_Principals SET Status=5 , Remark ='Principal User Engage ID is not in Principals' WHERE ID = @BUPPrincipalUserID
				END
				ELSE BEGIN	
					UPDATE [dbo].[Users] SET 
					 [FirstName] =  CASE WHEN @FirstName != '' THEN @FirstName ELSE [FirstName] END
					,[MiddleName] =  CASE WHEN @MiddleName='*CLEAR*' THEN '' WHEN @MiddleName != '' THEN @MiddleName ELSE MiddleName END
					,[LastName] =  CASE WHEN @LastName != '' THEN @LastName ELSE LastName END
					,[InternalID] = CASE WHEN @InternalID='*CLEAR*' THEN '' WHEN @InternalID != '' THEN @InternalID ELSE InternalID END
					,[PrimaryEmailAddress] =  CASE WHEN @PrimaryEmailAddress != '' THEN @PrimaryEmailAddress ELSE PrimaryEmailAddress END
					,[SecondaryEmailAddress] = CASE WHEN @SecondaryEmailAddress='*CLEAR*' THEN '' WHEN @SecondaryEmailAddress != '' THEN @SecondaryEmailAddress ELSE SecondaryEmailAddress END
					,[PrimaryPhoneNumber] =  CASE WHEN @PrimaryPhoneNumber != '' THEN @PrimaryPhoneNumber ELSE PrimaryPhoneNumber END
					,[PrimaryNumberType] = CASE WHEN @PrimaryNumberType = 127 THEN 0 WHEN @PrimaryNumberType>0 THEN @PrimaryNumberType ELSE PrimaryNumberType END 
					,[UpdatedOn] = getdate()
					WHERE ID =@UserId
				END
			END
		END

		--DELETE
		IF(@Action = 3)BEGIN
			IF(@SchoolId IS NULL)
				UPDATE BUP_Principals SET Status=5 , Remark ='School Engage ID is not in schools' WHERE ID = @BUPPrincipalUserID
			ELSE BEGIN 
				IF(@UserId IS NULL)
					UPDATE BUP_Principals SET Status=5 , Remark ='Principal User Engage ID is not in Principals' WHERE ID = @BUPPrincipalUserID
				ELSE BEGIN	
					DELETE UserComSchRelations WHERE UserId=@UserId AND SchoolId=@SchoolId
					IF(NOT EXISTS(SELECT * FROM UserComSchRelations WHERE UserId=@UserId))
						UPDATE Users SET [Status]=2 , StatusDate=getdate() WHERE id=@UserId
				END
			END			
		END 

		UPDATE BUP_Principals SET Status = 3 WHERE ID = @BUPPrincipalUserID AND Status = 1;
		COMMIT TRANSACTION ;
	END TRY

	BEGIN CATCH
		IF (XACT_STATE()) = -1
		BEGIN			
			ROLLBACK TRANSACTION;
			UPDATE BUP_Principals SET Remark = ERROR_MESSAGE() ,Status = 4 WHERE ID = @BUPPrincipalUserID
		END;

		IF (XACT_STATE()) = 1
		BEGIN
			COMMIT TRANSACTION;   
		END;
	END CATCH 
END
