CREATE PROCEDURE [dbo].[BUP_Class]
	@BUPClassID int,
	@CreatedBy int
AS
BEGIN
	
	  DECLARE @Action tinyint
	  DECLARE @CommunityName varchar(200)
      DECLARE @CommunityEngageID varchar(50)
      DECLARE @SchoolName varchar(200)
      DECLARE @SchoolEngageID varchar(50)
      DECLARE @Name varchar(50)
      DECLARE @ClassEngageID varchar(32)
	  DECLARE @ClassInternalID VARCHAR(32)
	  DECLARE @DayType TINYINT
	  DECLARE @ClassroomName VARCHAR(50)
	  DECLARE @ClassroomEngageID VARCHAR(32)

	  DECLARE @SchoolId INT
	  DECLARE @CommunityId INT
	  DECLARE @ClassId INT --classes 表Id
	  DECLARE @ClassroomId INT --classrooms 表Id

	  BEGIN TRY
		BEGIN TRANSACTION;
		  SELECT @Action= [Action]  ,@CommunityName=[CommunityName] , @CommunityEngageID=[CommunityEngageID]
		  ,@SchoolName=[SchoolName] ,@SchoolEngageID=[SchoolEngageID],@Name=[Name],@ClassEngageID=ClassEngageID
		  ,@ClassInternalID=ClassInternalID,@DayType=DayType,@ClassroomName=ClassroomName,@ClassroomEngageID=ClassroomEngageID
	      FROM [dbo].BUP_Classes WHERE ID=@BUPClassID

		--INSERT
		IF(@Action = 1) BEGIN
			SELECT @SchoolId = ID FROM Schools WHERE SchoolId =@SchoolEngageID
			IF(@SchoolId IS NULL) BEGIN
				UPDATE BUP_Classes SET Status=5 , Remark ='School Engage ID not in Schools' WHERE ID = @BUPClassID
				END
			 ELSE BEGIN
				SELECT @CommunityId =c.ID FROM Communities c
				INNER JOIN CommunitySchoolRelations r ON c.ID =r.CommunityId
				INNER JOIN Schools s ON s.ID = r.SchoolId
				WHERE s.ID=@SchoolId AND c.CommunityId=@CommunityEngageID
				IF(@CommunityId IS NULL)BEGIN
					UPDATE BUP_Classes SET Status=5 , Remark ='Community Engage ID not in Communities' WHERE ID = @BUPClassID
				END
				ELSE BEGIN
					INSERT INTO [dbo].[Classes]
					([SchoolId]
					,[ClassId]
					,[Name]
					,[Status]
					,[StatusDate]
					,[SchoolYear]
					,[IsSameAsSchool]
					,[AtRiskPercent]
					,[DayType]
					,[CurriculumId]
					,[CurriculumOther]
					,[SupplementalCurriculumId]
					,[SupplementalCurriculumOther]
					,[MonitoringToolId]
					,[MonitoringToolOther]
					,[UsedEquipment]
					,[EquipmentNumber]
					,[ClassType]
					,[Notes]
					,[CreatedOn]
					,[UpdatedOn]
					,[Previous_Teacher_TEA_ID]
					,[Classlevel]
					,[LeadTeacherId]
					,[playgroundId]
					,[TypeOfClass]
					,[TrsAssessorId]
					,[TrsMentorId]
					,ClassInternalID)
					VALUES
					( @SchoolId --<SchoolId, int,>
					,''--<ClassId, varchar(32),>
					,@Name --, varchar(150),>
					,1--<Status, tinyint,>
					,GETDATE()--<StatusDate, datetime,>
					,  dbo.GetSchoolYear()--<SchoolYear, varchar(5),>
					, 0--<IsSameAsSchool, bit,>
					, 0--<AtRiskPercent, int,>
					, @DayType --, tinyint,>
					,0--<CurriculumId, int,>
					,''--<CurriculumOther, varchar(150),>
					,0--<SupplementalCurriculumId, int,>
					,''--<SupplementalCurriculumOther, varchar(150),>
					,0--<MonitoringToolId, int,>
					,''--<MonitoringToolOther, varchar(150),>
					,0--<UsedEquipment, tinyint,>
					,''--<EquipmentNumber, varchar(150),>
					,0--<ClassType, tinyint,>
					,''--<Notes, varchar(600),>
					,GETDATE()--<CreatedOn, datetime,>
					,GETDATE()--<UpdatedOn, datetime,>
					, ''--<Previous_Teacher_TEA_ID, varchar(50),>
					,0--<Classlevel, tinyint,>
					,0--<LeadTeacherId, int,>
					,0--<playgroundId, int,>
					,0--<TypeOfClass, tinyint,>
					,0--<TrsAssessorId, int,>
					,0--<TrsMentorId, int,>
					,@ClassInternalID
					)

					IF(@Name = '' OR @ClassInternalID ='') 
						UPDATE [Classes] SET 
							Name= CASE WHEN @Name = '' THEN ClassId ELSE @Name END 
						,ClassInternalID= CASE WHEN @ClassInternalID = ''THEN ClassId ELSE @ClassInternalID END
						WHERE ID = SCOPE_IDENTITY()

					IF(@ClassroomEngageID != '')
						BEGIN
							SELECT @ClassroomId = ID FROM Classrooms WHERE ClassroomId=@ClassroomEngageID
							IF (@ClassroomId IS NULL)
								UPDATE BUP_Classes SET Status=5 ,
								Remark='Can not find classroom with the Classroom_Engage_ID: '+ @ClassroomEngageID WHERE ID = @BUPClassID
							ELSE
								INSERT INTO ClassroomClassRelations(ClassroomId,ClassId,Status,CreatedBy,CreatedOn,UpdatedBy,UpdatedOn)
								VALUES(@ClassroomId,SCOPE_IDENTITY(),1,@CreatedBy,GETDATE(),@CreatedBy,GETDATE())
						END

				END	--END INSERT 	
			END 
		END  --END ACTION=1

		--UPDATE
		IF(@Action = 2) BEGIN
			SELECT @ClassId=ID FROM Classes WHERE ClassId = @ClassEngageID
			IF(@ClassId IS NULL)BEGIN
				UPDATE 	BUP_Classes SET Status=5 , Remark ='Class not in Classes' WHERE ID = @BUPClassID
			END
			ELSE BEGIN
				UPDATE [dbo].[Classes]
				SET [Name] = CASE WHEN @Name != '' THEN @Name ELSE [Name] END
				,ClassInternalID= CASE @ClassInternalID WHEN '*CLEAR*'THEN '' WHEN '' THEN ClassInternalID ELSE @ClassInternalID END 
				,DayType =CASE WHEN @DayType = 127 THEN 0 WHEN @DayType>0 THEN @DayType ELSE DayType END 
				,[UpdatedOn] = GETDATE()
				WHERE ClassId=@ClassEngageID

				IF(@ClassroomEngageID != '')BEGIN
					SELECT @ClassroomId=ID FROM Classrooms WHERE ClassroomId=@ClassroomEngageID
					IF(@ClassroomId IS NULL) BEGIN
						UPDATE 	BUP_Classes SET Status=5 , 
						Remark='Can not find classroom with the Classroom_Engage_ID: '+ @ClassroomEngageID WHERE ID = @BUPClassID
					END
					ELSE BEGIN
							IF NOT EXISTS(SELECT * FROM [ClassroomClassRelations] 
							WHERE ClassroomId=@ClassroomId AND ClassId=@ClassId)BEGIN
							INSERT INTO [dbo].[ClassroomClassRelations]
							([ClassroomId]
							,[ClassId]
							,[Status]
							,[CreatedBy]
							,[CreatedOn]
							,[UpdatedOn]
							,[UpdatedBy])
							VALUES
							( @ClassroomId
							, @ClassId
							, 1
							,@CreatedBy
							,GETDATE()
							,GETDATE()
							,@CreatedBy)
							END
					END
				END
			END
		END

		--DELETE
		IF(@Action = 3)BEGIN	
		     SELECT @ClassId=ID FROM Classes WHERE ClassId = @ClassEngageID			
				IF (@ClassId IS NOT NULL) BEGIN
					IF (@ClassroomEngageID != '')
					BEGIN
						SELECT @ClassroomId=ID FROM Classrooms WHERE ClassroomId=@ClassroomEngageID
						IF(@ClassroomId IS NULL) BEGIN
							UPDATE 	BUP_Classes SET Status=5 , 
							Remark='Can not find classroom with the Classroom_Engage_ID: '+ @ClassroomEngageID WHERE ID = @BUPClassID
						END
						ELSE BEGIN
						   DELETE  ClassroomClassRelations WHERE ClassroomId=@ClassroomId AND ClassId=@ClassId
						END
					END
					IF NOT EXISTS (SELECT * FROM ClassroomClassRelations WHERE ClassId=@ClassId)
						UPDATE [dbo].[Classes]
						SET Status = 2
						,StatusDate =GETDATE()
						,[UpdatedOn] = GETDATE()
						WHERE ClassId=@ClassEngageID
			    END 
				ELSE BEGIN
						UPDATE 	BUP_Classes SET Status=5 , Remark ='Class Engage ID not in Classes' WHERE ID = @BUPClassID
				END
		END

		UPDATE BUP_Classes SET Status = 3 WHERE ID = @BUPClassID AND Status = 1;
	  COMMIT TRANSACTION ;
	END TRY

	BEGIN CATCH
		IF (XACT_STATE()) = -1
		BEGIN			
			ROLLBACK TRANSACTION;
			UPDATE BUP_Classes SET Remark = ERROR_MESSAGE() ,Status = 4 WHERE ID = @BUPClassID
		END;

		IF (XACT_STATE()) = 1
		BEGIN
			COMMIT TRANSACTION;   
		END;
	END CATCH 

END

GO