ALTER PROCEDURE [dbo].[DataProcessClass] 
@CommunityId INT,
@SchoolId INT,
@TeacherId INT,
@TeacherUserId INT,
@TeacherFirstName VARCHAR(150),
@TeacherLastName VARCHAR(150),
@ClassDayType TINYINT,
@ClassLevel TINYINT,
@StudentId INT,
@Action TINYINT,
@CreatedBy INT,
@CreatedClasses INT OUTPUT --return createdclasses' id
AS
BEGIN
		DECLARE @ClassName VARCHAR(200)
		DECLARE @ClassId INT
		SET @CreatedClasses=0;
		IF(EXISTS(SELECT * FROM Users U INNER JOIN UserComSchRelations UC
		ON U.ID=UC.UserId AND UC.SchoolId=@SchoolId AND U.LastName=@TeacherLastName
		AND U.ID != @TeacherUserId))
			BEGIN
				IF(EXISTS(SELECT * FROM Users U INNER JOIN UserComSchRelations UC
				ON U.ID=UC.UserId AND UC.SchoolId=@SchoolId AND U.LastName=@TeacherLastName 
				AND SUBSTRING(U.FirstName,1,1)=SUBSTRING(@TeacherFirstName,1,1) 
				AND U.ID != @TeacherUserId))
					SET @ClassName=@TeacherFirstName+' '+@TeacherLastName+'''s';
				ELSE
					SET @ClassName=SUBSTRING(@TeacherFirstName,1,1)+' '+@TeacherLastName+'''s';
			END
		ELSE
			SET @ClassName = @TeacherLastName+'''s';

		SET @ClassName=@ClassName+CASE @ClassDayType WHEN 1 THEN ' AM' WHEN 2 THEN ' PM' ELSE '' END;
		SET @ClassName=@ClassName+CASE @ClassLevel WHEN 2 THEN ' K' ELSE '' END;
		SET @ClassName=@ClassName+' Class';

		SELECT @ClassId=NULL  --initial classid value

		SELECT @ClassId=ID FROM Classes WHERE SchoolId=@SchoolId AND Name=@ClassName

		IF(@ClassId IS NULL)
		BEGIN
			INSERT INTO dbo.Classes
				( SchoolId ,
					ClassId ,
					Name ,
					Status ,
					StatusDate ,
					SchoolYear ,
					IsSameAsSchool ,
					AtRiskPercent ,
					DayType ,
					CurriculumId ,
					CurriculumOther ,
					SupplementalCurriculumId ,
					SupplementalCurriculumOther ,
					MonitoringToolId ,
					MonitoringToolOther ,
					UsedEquipment ,
					EquipmentNumber ,
					ClassType ,
					Notes ,
					CreatedOn ,
					UpdatedOn ,
					Previous_Teacher_TEA_ID ,
					Classlevel ,
					LeadTeacherId ,  
					ClassInternalID,
					IsDeleted 
				)
			VALUES  ( @SchoolId , -- SchoolId - int
					'' , -- ClassId - varchar(32)
					@ClassName , -- Name - varchar(150)
					1 , -- Status - tinyint
					GETDATE() , -- StatusDate - datetime
					DBO.GetSchoolYear() , -- SchoolYear - varchar(5)
					0 , -- IsSameAsSchool - bit
					0 , -- AtRiskPercent - int
					@ClassDayType , -- DayType - tinyint
					0 , -- CurriculumId - int
					'' , -- CurriculumOther - varchar(150)
					0 , -- SupplementalCurriculumId - int
					'' , -- SupplementalCurriculumOther - varchar(150)
					0 , -- MonitoringToolId - int
					'' , -- MonitoringToolOther - varchar(150)
					0 , -- UsedEquipment - tinyint
					'' , -- EquipmentNumber - varchar(150)
					0 , -- ClassType - tinyint
					'' , -- Notes - varchar(600)
					GETDATE() , -- CreatedOn - datetime
					GETDATE() , -- UpdatedOn - datetime
					'' , -- Previous_Teacher_TEA_ID - varchar(50)
					@ClassLevel , -- Classlevel - tinyint
					@TeacherId , -- LeadTeacherId - int 
					'',  -- ClassInternalID - varchar(32)
					0
				)
				
			SELECT @ClassId=SCOPE_IDENTITY()
		END

		IF(@Action=2)
		BEGIN
			DELETE StudentClassRelations from StudentClassRelations SC where SC.StudentId=@StudentId AND 
			EXISTS (select CL.ID from Classes CL where SC.ClassId=CL.ID AND EXISTS 
			(select CS.SchoolId from CommunitySchoolRelations CS where CommunityId=@CommunityId and CS.SchoolId=CL.SchoolId))
			DELETE SchoolStudentRelations from SchoolStudentRelations SS where StudentId=@StudentId AND EXISTS 
			(select CS.SchoolId from CommunitySchoolRelations CS where CommunityId=@CommunityId and CS.SchoolId=SS.SchoolId)
		END

		IF(@Action=1 or @Action=2)
		BEGIN
			SET @CreatedClasses = @ClassId;-- return teacher's class

			IF(NOT EXISTS(SELECT * FROM TeacherClassRelations WHERE TeacherId=@TeacherId AND ClassId =@ClassId ))
			INSERT INTO TeacherClassRelations(TeacherId,ClassId) 
			VALUES(@TeacherId,@ClassId)

			--create relationship(student-class)
			IF(@StudentId > 0)  -- existed student do not create relationship with class
			BEGIN
				IF NOT EXISTS (SELECT * FROM SchoolStudentRelations WHERE SchoolId=@SchoolId AND StudentId=@StudentId)
				BEGIN
					INSERT INTO SchoolStudentRelations([SchoolId],[StudentId],[Status],
						[CreatedBy],[CreatedOn],[UpdatedOn],[UpdatedBy])
					VALUES(@SchoolId,@StudentId,1,@CreatedBy,GETDATE(),GETDATE(),@CreatedBy)
				END
				IF(NOT EXISTS(SELECT * FROM StudentClassRelations WHERE StudentId=@StudentId AND ClassId=@ClassId))
					INSERT INTO StudentClassRelations([StudentId],[ClassId])
					VALUES(@StudentId,@ClassId)
			END
		END
END