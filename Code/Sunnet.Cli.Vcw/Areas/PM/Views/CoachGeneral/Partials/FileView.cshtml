@model Sunnet.Cli.Business.Vcw.Models.CoachFileModel
@using Sunnet.Cli.UIBase.Models
@using Sunnet.Cli.UIBase;
@using Sunnet.Framework.Extensions
@{
    List<CoachListModel> SelectedCoaches = ViewBag.SelectedCoaches as List<CoachListModel>;
    List<SelectItemModel> PMs = ViewBag.PM as List<SelectItemModel>;
    List<int> SelectedPMs = ViewBag.SelectedPMs as List<int>;
}

<div class="form-group">
    <div class="col-sm-6">
        <span class="col-sm-5 control-label">File Name</span>
        <div class="col-sm-7">
            <span class="control-label-text">
                @Model.IdentifyFileName
            </span>
        </div>

        <span class="col-sm-5 control-label">Date Uploaded</span>
        <div class="col-sm-7">
            <span class="control-label-text">
                @Model.UploadDate.FormatDateString()
            </span>
        </div>

        <span class="col-sm-5 control-label">Date Recorded</span>
        <div class="col-sm-7">
            <span class="control-label-text">
                @Model.DateRecorded.Value.FormatDateString()
            </span>
        </div>

        <span class="col-sm-5 control-label">Coaching Strategies</span>
        <div class="col-sm-7">
            <span class="control-label-text">
                @Model.Strategy
            </span>
        </div>

        <span class="col-sm-5 control-label">File Type</span>
        <div class="col-sm-7">
            <span class="control-label-text">
                @(Model.FileExtension)
                <a href="@(Model.DownLoadFilePath)" class="form-link4">Download</a>
            </span>
        </div>

        <div class="form-group">
            <div class="col-sm-12">
                <div class="content-con">
                    <div class="content-title3">
                        <span class="control-label">Coaching Objectives</span>
                    </div>
                    <div class="textarea-con">
                        @Model.Objectives
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-12">
                <div class="content-con">
                    <div class="content-title3">
                        <span class="control-label">Coaching Effectiveness</span>
                    </div>
                    <div class="textarea-con">
                        @Model.Effectiveness
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-12">
                <div class="content-con">
                    <div class="content-title3">
                        <div class="control-label">
                            FeedbackText
                    <span class="control-label-text-r">@ViewTextHelper.Vcw_DescriptionLimit</span>
                        </div>
                        @Html.LabelFor(model => model.FeedbackText, null, new { @class = "hide" })
                    </div>
                    <div class="textarea-con">
                        @Html.TextAreaFor(model => model.FeedbackText, new { @class = "form-control", @rows = "2" })
                        @Html.ValidationMessageFor(model => model.FeedbackText)
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-12">
                <div class="content-con">
                    <div class="content-title3">
                        <div class="control-label">
                            PM Feedback
                        (<span class="redtext">@ViewTextHelper.Vcw_UploadTitle</span>)
                        <span class="control-label-text-r">@ViewTextHelper.Vcw_UploadLimit</span>
                        </div>
                    </div>
                    <div class="upload-btn">
                        <div id="picker_feedback">1) Select File</div>
                    </div>
                    <div class="uploader-list" id="filelists_feedback"></div>
                    <div class="upload-btn">
                        <a id="ctlBtn_feedback">2) Start Upload</a>
                    </div>
                    <input type="hidden" id="filetarget_feedback" name="filetarget_feedback" />
                </div>
            </div>
        </div>
    </div>

    <div class="col-sm-6">
        <video controls="controls" class="videoplay">
            <source src="@(FileHelper.GetPreviewPathofUploadFile(Model.FilePath).Replace("\\", "/"))" />
        </video>
        <div class="content-con" style="min-height: 138px">
            <div class="content-title3">
                <div class="control-label">Uploaded Feedback File</div>
            </div>
            <div class="uploader-list" id="uploader-list_feedback">
                @if (!string.IsNullOrEmpty(Model.FeedbackFileName))
                {
                    <div class="item">
                        <i class="icon-paper-clip"></i>
                        <a class="form-link4" href="@(DownLoadFile.GetDownFilePath(Model.FeedbackFilePath, Model.FeedbackFileName))">@(Model.FeedbackFileName)</a>
                        <span class="delete" title="Remove this file">
                            <a href="javascript:;" onclick="RemoveFile_feedback(this)">×</a>
                        </span>
                    </div>
                }
            </div>
        </div>
        <div class="content-con">
            <div class="content-title3">
                <div class="control-label">Send Upload to PM</div>
            </div>
            <div class="checkbox-con-multi">
                @foreach (SelectItemModel item in PMs)
                {
                    <label class="checkbox-inline">
                        <input type="checkbox" name="pm" disabled="disabled" value="@(item.ID)" 
                                                @(SelectedPMs.Contains(item.ID) ? "checked" : "")>@(item.Name)
                    </label>
                }
            </div>
            <div class="content-title3">
                <div class="control-label">Send Upload to Coach</div>
            </div>
            <div style="max-height: 162px; overflow-y: scroll" id="divCoachSelect">
                @if (SelectedCoaches != null)
                {
                    foreach (CoachListModel item in SelectedCoaches)
                    {
                    <a class="del-btn t-del-btn">
                        <button type="button" class="close" data-dismiss="alert"></button>
                        <input type="hidden" name="coach" value="@(item.UserId)" 
                                                firstname="@(item.FirstName)" lastname="@(item.LastName)" />@(item.FirstName) @(item.LastName)
                    </a>
                    }
                }
            </div>
        </div>
    </div>
</div>


