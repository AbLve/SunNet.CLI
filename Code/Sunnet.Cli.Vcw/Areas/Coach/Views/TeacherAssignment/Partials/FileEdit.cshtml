@model Sunnet.Cli.Business.Vcw.Models.TeacherAssignmentFileModel
@using Sunnet.Cli.UIBase.Models;
@using Sunnet.Cli.Core.Vcw.Enums;
@using Sunnet.Framework.Extensions;
@using Sunnet.Cli.UIBase;
@using Sunnet.Framework

@{
    List<SelectItemModel> Languages = ViewBag.Languages as List<SelectItemModel>;
    List<SelectItemModel> Contexts = ViewBag.Contexts as List<SelectItemModel>;
    List<SelectItemModel> SelectionLists = ViewBag.SelectionList as List<SelectItemModel>;
}

<div class="form-group">
    <div class="col-sm-6">
        <div class="form-group">
            <div class="col-sm-6">
                <div class="content-con">
                    <div class="content-title3">
                        @Html.LabelFor(m => m.IdentifyFileName, new { @class = "control-label required" })
                    </div>
                    <div class="inputtext-con">
                        @Html.TextBoxFor(m => m.IdentifyFileName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.IdentifyFileName)
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="content-con">
                    <div class="content-title3">
                        <label class="control-label" for="DateRecorded">Date Video Recorded</label>
                    </div>
                    <div class="inputtext-con">
                        @Html.TextBoxFor(m => m.DateRecorded, new { @class = "form-control date", @Value = Model.DateRecorded.Value.FormatDateString() })
                        @Html.ValidationMessageFor(m => m.DateRecorded)
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-6">
                <div class="content-con">
                    <div class="content-title3">
                        <span class="control-label">Video language</span>
                    </div>
                    @if (Languages != null)
                    {
                        foreach (SelectItemModel item in Languages)
                        {
                        <div class="checkbox-con">
                            <label class="checkbox-inline">
                                <input type="checkbox" name="language" value="@item.ID"
                                                @(Model.LanguageId == item.ID ? "checked" : "")>@item.Name
                            </label>
                        </div>
                        }
                    }
                </div>
            </div>
            <div class="col-sm-6">
                <div class="content-con">
                    <div class="content-title3">
                        <div class="control-label">Video Context</div>
                    </div>
                    @if (Contexts != null)
                    {
                        foreach (SelectItemModel item in Contexts)
                        {
                            bool isChecked = Model.ContextId == item.ID;
                            if (item.Name.Trim().ToLower() == SFConfig.ContextOther)
                            {
                        <div class="checkbox-con">
                            <label class="checkbox-inline checkbox-other">
                                <input type="checkbox" name="Context" value="@(item.ID)"  @(isChecked ? "checked" : "") isOther="true"/>@item.Name
                            </label>
                            <label class="textbox-other">
                                @if (isChecked)
                                {
                                    @Html.TextBoxFor(m => m.ContextOther, new { @class = "form-control" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.ContextOther, new { @class = "form-control", disabled = "disabled" })  
                                }
                            </label>
                            @Html.ValidationMessageFor(model => model.ContextOther)
                        </div>
                            }
                            else
                            {
                        <div class="checkbox-con">
                            <label class="checkbox-inline">
                                <input type="checkbox" name="Context" value="@(item.ID)" @(isChecked ? "checked" : "")/>@item.Name
                            </label>
                        </div>
                            }

                        }
                    }
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-12">
                <div class="content-con">
                    <div class="content-title3">
                        <div class="control-label">
                            Description
                            <span class="control-label-text-r">@ViewTextHelper.Vcw_DescriptionLimit</span>
                        </div>
                        <label for="Description" class="hide">&nbsp;</label>
                    </div>
                    <div class="textarea-con">
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = "2" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="coachreview-con">
                <div class="coachreview-con-t">Coach Review</div>
                <div class="col-sm-6">
                    <div class="content-con">
                        <div class="content-title3">
                            <div class="control-label">Screening</div>
                        </div>
                        <div class="checkbox-con">
                            <label class="checkbox-inline">
                                <input type="checkbox" name="screening" value="1" 
                                     @(Model.Status == FileStatus.Completed ? "checked" : "")/>Accept
                            </label>
                        </div>
                        <div class="checkbox-con">
                            <label class="checkbox-inline">
                                <input type="checkbox" name="screening" value="2" 
                                    @(Model.Status == FileStatus.Rejected ? "checked" : "")/>Reject
                            </label>
                        </div>
                    </div>
                </div>

                <div class="col-sm-6">
                    <div class="content-con">
                        <div class="content-title3">
                            <div class="control-label">Selection List</div>
                        </div>
                        @if (SelectionLists != null)
                        {
                            foreach (SelectItemModel item in SelectionLists)
                            {
                            <div class="checkbox-con">
                                <label class="checkbox-inline">
                                    <input type="checkbox" name="selectionlist" value="@item.ID"
                                        @(Model.SelectionIds.Contains(item.ID) ? "checked" : "")>@item.Name
                                </label>
                            </div>
                            }
                        }
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="content-con">
                        <div class="content-title3">
                            <div class="control-label">Link Video</div>
                        </div>
                        <div class="upload-btn">
                            <a  href='@Url.Action("LinkToAssignment", "TeacherAssignment"
                            , new { fileId = Model.ID, redirect = Request.QueryString["redirect"], teacherId = Model.OwnerId })'                               
                                class="mainbutton mainright-btn search-btn">Browse for VIP</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-sm-6">
        <video controls="controls" class="videoplay">
            <source src="@(FileHelper.GetPreviewPathofUploadFile(Model.FilePath).Replace("\\", "/"))" />
        </video>
        @Html.Partial("/Areas/Coach/Views/Partials/UploadedFile2.cshtml")
    </div>
</div>
