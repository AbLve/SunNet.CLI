@model Sunnet.Cli.Business.Vcw.Models.TeacherVIPFileModel
@using Sunnet.Cli.UIBase.Models
@using Sunnet.Cli.Core.Vcw.Enums
@using Sunnet.Framework.Extensions
@using Sunnet.Cli.UIBase
@{
    List<SelectItemModel> Languages = ViewBag.Languages as List<SelectItemModel>;
    List<SelectItemModel> SelectionLists = ViewBag.SelectionList as List<SelectItemModel>;
}

<div class="form-group">
    <div class="col-sm-6">
        <div class="form-group">
            @Html.LabelFor(m => m.IdentifyFileName, new { @class = "control-label col-sm-3 required" })
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.IdentifyFileName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.IdentifyFileName)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-6">
                <div class="content-con">
                    <div class="content-title3">
                        <label class="control-label" for="DateRecorded">Date Recorded</label>
                    </div>
                    <div class="inputtext-con">
                        @Html.TextBoxFor(m => m.DateRecorded, new { @class = "form-control date", @Value = Model.DateRecorded.Value.FormatDateString() })
                        @Html.ValidationMessageFor(m => m.DateRecorded)
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="content-con">
                    <div class="content-title3">
                        <div class="control-label">Video language</div>
                    </div>
                    @if (Languages != null)
                    {
                        foreach (SelectItemModel item in Languages)
                        {
                        <div class="checkbox-con">
                            <label class="checkbox-inline">
                                <input type="checkbox" name="language" value="@item.ID"
                                                @(Model.LanguageId == item.ID ? "checked" : "")>@item.Name
                            </label>
                        </div>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-12">
                <div class="content-con">
                    <div class="content-title3">
                        <div class="control-label">
                            Teacher Comments
                            <span class="control-label-text-r">@ViewTextHelper.Vcw_DescriptionLimit</span>
                        </div>
                        <label class="hide" for="Description">&nbsp;</label>
                    </div>
                    <div class="textarea-con">
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", row = "2" })
                        @Html.ValidationMessageFor(m => m.Description)
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="coachreview-con">
                <div class="coachreview-con-t">VIP Review</div>
                <div class="col-sm-6">
                    <div class="content-con">
                        <div class="content-title3">
                            <div class="control-label">Screening</div>
                        </div>
                        <div class="checkbox-con">
                            <label class="checkbox-inline">
                                <input type="checkbox" name="screening" value="1" 
                                     @(Model.Status == FileStatus.Completed ? "checked" : "")/>Accept
                            </label>
                        </div>
                        <div class="checkbox-con">
                            <label class="checkbox-inline">
                                <input type="checkbox" name="screening" value="2" 
                                    @(Model.Status == FileStatus.Rejected ? "checked" : "")/>Reject
                            </label>
                        </div>
                    </div>
                </div>

                <div class="col-sm-6">
                    <div class="content-con">
                        <div class="content-title3">
                            <div class="control-label">@Html.LabelFor(model => model.TBRSDate)</div>
                        </div>
                        <div class="inputtext-con">
                            @Html.TextBoxFor(model => model.TBRSDate, new
                           {
                               @class = "form-control date",
                               @Value = Model.TBRSDate.Value.FormatDateString()
                           })
                            @Html.ValidationMessageFor(model => model.TBRSDate)
                        </div>
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="content-con">
                        <div class="content-title3">
                            <div class="control-label">Selection List</div>
                        </div>
                        @if (SelectionLists != null)
                        {
                            foreach (SelectItemModel item in SelectionLists)
                            {
                            <div class="checkbox-con checkbox-con-double">
                                <label class="checkbox-inline">
                                    <input type="checkbox" name="selectionlist" value="@item.ID"
                                        @(Model.SelectionIds.Contains(item.ID) ? "checked" : "")>@item.Name
                                </label>
                            </div>
                            }
                        }
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="content-con">
                        <div class="content-title3">
                            <div class="control-label">Link to Assignment</div>
                        </div>
                        <div class="upload-btn">
                            <a  href='@Url.Action("LinkToAssignment", "TeacherVIP", new
                                 {
                                     fileId = Model.ID,
                                     redirect = Request.QueryString["redirect"],
                                     teacherId = Model.OwnerId
                                 })'                               
                                class="mainbutton mainright-btn search-btn">Browse for Assignment</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-6">
        <video controls="controls" class="videoplay">
            <source src="@(FileHelper.GetPreviewPathofUploadFile(Model.FilePath).Replace("\\", "/"))" />
        </video>
        @Html.Partial("/Areas/Coach/Views/Partials/UploadedFile2.cshtml")
    </div>
</div>
