@model Sunnet.Cli.Business.Vcw.Models.CoachFileModel
@using Sunnet.Cli.UIBase.Models
@using Sunnet.Cli.UIBase;
@{
    List<CoachListModel> Coaches = ViewBag.Coaches as List<CoachListModel>;
    bool isAll = false;
    if (Coaches != null && Model.FileShareds != null)
    {
        if (Model.FileShareds.Count >= Coaches.Count)
        {
            isAll = true;
        }
    }
    List<int> SharedIds = new List<int>();
    if (SharedIds != null)
    {
        SharedIds = Model.FileShareds.Select(a => a.UserId).ToList();
    }
}

<div class="form-group">
    <div class="col-sm-6">
        <span class="col-sm-5 control-label">File Name</span>
        <div class="col-sm-7">
            <span class="control-label-text">
                @Model.IdentifyFileName
            </span>
        </div>

        <span class="col-sm-5 control-label">Date Uploaded</span>
        <div class="col-sm-7">
            <span class="control-label-text">
                @Model.UploadDate.FormatDateString()
            </span>
        </div>

        <span class="col-sm-5 control-label">Date Recorded</span>
        <div class="col-sm-7">
            <span class="control-label-text">
                @Model.DateRecorded.Value.FormatDateString()
            </span>
        </div>

        <span class="col-sm-5 control-label">Coaching Strategies</span>
        <div class="col-sm-7">
            <span class="control-label-text">
                @Model.Strategy
            </span>
        </div>

        <span class="col-sm-5 control-label">File Type</span>
        <div class="col-sm-7">
            <span class="control-label-text">
                @(Model.FileExtension)
                <a href="@(Model.DownLoadFilePath)" class="form-link4">Download</a>
            </span>
        </div>

        <div class="form-group">
            <div class="col-sm-12">
                <div class="content-con">
                    <div class="content-title3">
                        <span class="control-label">Coaching Objectives</span>
                    </div>
                    <div class="textarea-con">
                        @Model.Objectives
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-12">
                <div class="content-con">
                    <div class="content-title3">
                        <span class="control-label">Coaching Effectiveness</span>
                    </div>
                    <div class="textarea-con">
                        @Model.Effectiveness
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-12">
                <div class="content-con">
                    <div class="content-title3">
                        <div class="control-label">
                            FeedbackText
                    <span class="control-label-text-r">@ViewTextHelper.Vcw_DescriptionLimit</span>
                        </div>
                        @Html.LabelFor(model => model.FeedbackText, null, new { @class = "hide" })
                    </div>
                    <div class="textarea-con">
                        @Html.TextAreaFor(model => model.FeedbackText, new { @class = "form-control", @rows = "2" })
                        @Html.ValidationMessageFor(model => model.FeedbackText)
                    </div>
                </div>
            </div>
        </div>
        <div class="form-goup">
            <div class="content-con" style="min-height: 138px">
                <div class="content-title3">
                    <div class="control-label">Uploaded Feedback File</div>
                </div>
                <div class="uploader-list" id="uploader-list_feedback">
                    @if (!string.IsNullOrEmpty(Model.FeedbackFileName))
                    {
                        <div class="item">
                            <i class="icon-paper-clip"></i>
                            <a class="form-link4" href="@(DownLoadFile.GetDownFilePath(Model.FeedbackFilePath, Model.FeedbackFileName))">@(Model.FeedbackFileName)</a>
                            <span class="delete" title="Remove this file">
                                <a href="javascript:;" onclick="RemoveFile_feedback(this)">×</a>
                            </span>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="form-goup">
            <div class="content-con">
                <div class="content-title3">
                    <div class="control-label">
                        PM Feedback
                        (<span class="redtext">@ViewTextHelper.Vcw_UploadTitle</span>)
                        <span class="control-label-text-r">@ViewTextHelper.Vcw_UploadLimit</span>
                    </div>
                </div>
                <div class="upload-btn">
                    <div id="picker_feedback">1) Select File to Upload</div>
                </div>
                <div class="uploader-list" id="filelists_feedback"></div>
                <div class="upload-btn">
                    <a id="ctlBtn_feedback">2) Start Upload</a>
                </div>
                <input type="hidden" id="filetarget_feedback" name="filetarget_feedback" />
            </div>
        </div>
    </div>

    <div class="col-sm-6">
        <div class="content-con">
            <div id='div_sunnet'>
                <div style='width:100%;height:450px; text-align:center; background:#333333 url(@(Sunnet.Framework.SFConfig.AssessmentDomain)/images/not-played.jpg) no-repeat center center; line-height:450px;'>
                </div>
            </div>
        </div>
        <div class="content-con">
            <div class="content-title3">
                <div class="control-label">Send Upload To PM</div>
            </div>
            <div class="checkbox-con">
                <label class="checkbox-inline">
                    <input type="checkbox" @(ViewBag.isSendPM ? "checked" : "") name="pm">Project Manager
                </label>
            </div>
            <div class="content-title3">
                <div class="control-label">Send Upload To Coach</div>
            </div>
            <div style="max-height: 283px; overflow-y: scroll">
                @if (ViewBag.Coaches != null)
                {
                    <div class="checkbox-con">
                        <label class="checkbox-inline">
                            <input type="checkbox" id="coach_all" @(isAll ? "checked" : "")>All
                        </label>
                    </div>
                    foreach (CoachListModel item in Coaches)
                    {
                        bool isChedked = SharedIds.Contains(item.UserId);
                    <div class="checkbox-con">
                        <label class="checkbox-inline">
                            <input type="checkbox"   name="Coach" value="@(item.UserId)" 
                                        @(isChedked ? "checked" : "") onclick="CancelAll(this)">@item.Name
                        </label>
                    </div>                              
                    }
                }
            </div>
        </div>
    </div>
</div>


