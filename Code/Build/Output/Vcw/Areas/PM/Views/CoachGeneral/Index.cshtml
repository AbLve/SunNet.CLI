@model Sunnet.Cli.Business.Vcw.Models.FileListModel
@using Sunnet.Cli.UIBase.Models;
@using Sunnet.Cli.Business.Vcw.Models;
@using Sunnet.Framework.Extensions;
@{
    ViewBag.Title = "PM Coach General";
    var formId = PostFormHelper.GetFormId(Html.ViewContext.View);
}

@section LeftMenu
{
    @Html.Partial("~/views/Shared/_Partial_Left.cshtml", LeftmenuModel.PM_Coaches)
}

@section BreadPath
{
    @(Html.ActionLink("PM Coaches", "Index", "CoachGeneral"))&nbsp;
    <i class="icon-angle-right"></i>&nbsp;
    Coach General
}
<form class="form-horizontal" role="form">
    @Html.AntiForgeryToken()
    @Html.Partial("~/Areas/PM/Views/Partials/Tab.cshtml", new PageSelected { PageId = 1 })
    <div class="nav-container-main">
        <div class="form-group"></div>
        <div class="form-group">
            <label class="control-label col-sm-2" for="CommunityName">Community Name</label>
            <div class="col-sm-3">
                @Html.DropDownListFor(model => model.CommunityName, ViewBag.Communities as IEnumerable<SelectListItem>, new { @class = "form-control", data_bind = "value: searchCriteria.community" })
            </div>
            <label class="control-label col-sm-2" for="CoachName">Coach Name</label>
            <div class="col-sm-3">
                @Html.DropDownListFor(model => model.CoachName, ViewBag.Coaches as IEnumerable<SelectListItem>, new { @class = "form-control", data_bind = "value: searchCriteria.coach" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-2" for="Status">Status</label>
            <div class="col-sm-3">
                @Html.EnumDropDownListFor(model => model.Status, ViewTextHelper.DefaultAllText, "-1", new { @class = "form-control", data_bind = "value: searchCriteria.status" })
            </div>
            <label class="control-label col-sm-2" for="Number">ID</label>
            <div class="col-sm-3">
                @Html.TextBoxFor(model => model.Number, new { @class = "form-control", data_bind = "value: searchCriteria.number" })
            </div>
            <div class="col-sm-2">
                <button class="mainbutton mainright-btn sreach-btn" type="button" data-bind="event: { click: search }">Search</button>
            </div>
        </div>
        <div class="right-content-top">
            <button type="button" class="mainbutton mainright-btn submit-btn" data-bind="click: $root.addData">Upload file</button>
            <input type="button" class="mainbutton mainright-btn pencil-btn" value="Delete selected files" onclick="return deletedata()">
        </div>
        <div class="main-content main-content">
            <div class="content-title">Coach General</div>
            <div class="content-body-tab">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr data-bind="foreach: { data: headers, as: 'header' }">
                            <!-- ko if: (header.order === true)-->
                            <th data-bind="style: { width: width }">
                                <a href="javascript:;" data-bind="text: text, click: $root.changeOrder"></a>
                                <span class="glyphicon"
                                    data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'ASC',
    css: { 'glyphicon-arrow-up': $root.orderDirection().toUpperCase() == 'ASC' }"></span>
                                <span class="glyphicon"
                                    data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'DESC',
    css: { 'glyphicon-arrow-down': $root.orderDirection().toUpperCase() == 'DESC' }"></span>
                            </th>
                            <!-- /ko-->
                            <!-- ko if: (header.order === false) -->
                            <th data-bind="text: text, style: { width: width }"></th>
                            <!-- /ko-->
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: { data: showRecords, as: 'item' }">
                        <tr>
                            <td>
                                <label>
                                    <input name="video_select" type="checkbox" data-bind="value: item.ID" />
                                </label>
                            </td>
                            <td data-bind="text: item.CoachName"></td>
                            <td data-bind="text: item.IdentifyFileName"></td>
                            <td data-bind="text: item.Number"></td>
                            <td data-bind="text: item.UploadDate"></td>
                            <td data-bind="text: item.DateRecorded == minDate ? '' : item.DateRecorded"></td>
                            <td data-bind="text: item.Strategy"></td>
                            <td data-bind="text: item.FileExtension"></td>
                            <td>
                                <a class="table-btn icon-folder-open view-btn" data-bind="event: { click: $root.viewData }" href="#" title="View"></a>
                                <a class="table-btn icon-download-alt download-btn" data-bind="attr: { href: item.DownLoadFilePath }" title="Download"></a>
                                <a class="table-btn icon-comment comment-btn" data-bind='attr: { href: $root.feedBack(item) }' data-toggle="modal" data-target="#modalNormal" href="#" title="Feedback"></a>
                            </td>
                        </tr>
                    </tbody>@Html.Display("e", "NoData", new { Colspan = 5 })
                </table>
                @Html.Partial("_Partial_Pager")
            </div>
        </div>
    </div>
</form>

@section Scripts
{
    <script type="text/javascript">
        var list_Video = {};

        $(function () {
            registerFormCallbacks("@(formId)", {
                onPosted: function (response) {
                    list_Video.search();
                }
            })

            list_Video = new ViewModel(
                {
                    instanceName: "list_Video",
                    modalId: "modalNormal",
                    getDataUrl: '@Html.Raw(Server.UrlDecode(Url.Action("Search")))',
                    addDataUrl: '@Html.Raw(Url.Action("Upload"))',
                    addType: 'Redirect',
                    viewDataUrl: '@Html.Raw(Url.Action("ViewShared"))',
                    viewType: 'Redirect',
                    orderBy: "ID",
                    orderDirection: "DESC",
                    pageSize: 10,
                    headers: [
                        {
                            text: "@Html.DisplayName("Select")",
                            field: "@Html.NameFor(model => model.ID)",
                            width: '5%'
                        },
                        {
                            text: "@Html.DisplayName("Coach")",
                            field: "@Html.NameFor(model => model.CoachName)",
                            order: true,
                            width: '15%'
                        },
                        {
                            text: '@Html.DisplayName("File Name")',
                            field: "@Html.NameFor(model => model.IdentifyFileName)",
                            order: true,
                            width: "13%"
                        },
                        {
                            text: "@Html.DisplayName("ID")",
                            field: "@Html.NameFor(model => model.ID)",
                            order: true,
                            width: '8%'
                        },
                        {
                            text: '@Html.DisplayName("Upload Date")',
                            field: "@Html.NameFor(model => model.UploadDate)",
                            order: true,
                            width: '12%'
                        },
                        {
                            text: '@Html.DisplayName("Date Recorded")',
                            field: "@Html.NameFor(model => model.DateRecorded)",
                            order: true,
                            width: '13%'
                        },
                        {
                            text: '@Html.DisplayName("Strategies")',
                            field: "@Html.NameFor(model => model.StrategyId)",
                            order: true,
                            width: '13%'
                        },
                        {
                            text: '@Html.DisplayName("File Type")',
                            field: "@Html.NameFor(model => model.FileExtension)",
                            width: '8%'
                        },
                        { text: "Action", width: '*' }
                    ],
                    searchCriteria: {
                        community: ko.observable(window.queryString("community", -1)),
                        coach: ko.observable(window.queryString("coach", -1)),
                        status: ko.observable(window.queryString("status", -1)),
                        number: ko.observable(window.queryString("number"))
                    }
                }
                ,
                {
                    feedBack: function (data) {
                        return "@Html.Raw(Url.Action("Feedback", "Feedback"))" + "/" + data.ID;
                    }
                }
            );

            list_Video.search();
            ko.applyBindings(list_Video);
        });

                function deletedata() {
                    var video_select = [];
                    $("input[name=video_select]:checked").each(function () {
                        video_select.push(this.value);
                    });
                    if (video_select.length == 0) {
                        showMessage("hint", "Vcw_Videos_Noselect")
                        return false;
                    }
                    else {
                        var message = window.getErrorMessage("confirmToDelete");
                        message = message.replace("[{0}]", "the selected videos");
                        $.when(waitingConfirm(message, "Delete", "Cancel")).done(function () {
                            $.post("CoachGeneral/Delete", { "video_select": video_select }, function () { list_Video.search(); });
                        })
                    }
                    return false;
                }
    </script>
}



