@model FileListModel
@using Sunnet.Cli.UIBase.Models
@using Sunnet.Cli.UIBase
@using Sunnet.Framework.Extensions
@using Sunnet.Cli.Core.Vcw.Entities
@using System.Web.Optimization
@using Sunnet.Cli.Business.Vcw.Models
@{
    ViewBag.Title = "View AssignmentFiles";
    var formId = PostFormHelper.GetFormId(Html.ViewContext.View);
}
@section LeftMenu
{
    @Html.Partial("~/views/Shared/_Partial_Left.cshtml", LeftmenuModel.PM_Coaches)
}

@section BreadPath
{
    @(Html.ActionLink("PM Coaches", "Index", "CoachGeneral"))
    &nbsp;<i class="icon-angle-right"></i>&nbsp;
    @(Html.ActionLink("Coach Assignments", "Index", "CoachAssignment"))&nbsp;
    <i class="icon-angle-right"></i>&nbsp;
    Assignment Files
}

@using (Ajax.BeginForm("Delete", "CoachAssignment", null, PostFormHelper.DefaultAjaxOptions, new
    {
        @class = "form-horizontal",
        id = formId
    }))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("AssignmentId", (int)ViewBag.AssignmentId)
    <div class="right-content-top">
        <a class="mainbutton mainright-btn nav-btn" 
        href="@(Server.UrlDecode(Request.QueryString["returnurl"]) ?? Url.Action("Index", "CoachAssignment", new { id = ViewBag.AssignmentId }))" >Back to Assignment List</a>
    </div>
    <div class="form-group"></div>
    <div class="form-group">
        <div class="nav-tab">
            <ul id="myTab" class="nav-container" role="tablist">
                <li class="active"><a href="@(Url.Action("ViewAssignmentFiles", "CoachAssignment", new { id = ViewBag.AssignmentId, returnurl = Request.QueryString["returnurl"] }))">Submitted Assignment Files</a></li>
                <li><a href="@(Url.Action("View", "CoachAssignment", new { id = ViewBag.AssignmentId, returnurl = Request.QueryString["returnurl"] }))">Assignment Information</a></li>
            </ul>
        </div>
    </div>
    <div class="nav-container-main">
        <div class="right-content-top">
            <input type="button" class="mainbutton mainright-btn submit-btn" value="Upload file" data-bind="click: $root.addData">
            <input type="button" class="mainbutton mainright-btn pencil-btn" value="Delete selected files" onclick="return deletedata()">
        </div>
        <div class="main-content">
            <div class="content-title">File</div>
            <div class="content-body-tab">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr data-bind="foreach: { data: headers, as: 'header' }">
                            <!-- ko if: (header.order === true)-->
                            <th data-bind="style: { width: width }">
                                <a href="javascript:;" data-bind="text: text, click: $root.changeOrder"></a>
                                <span class="glyphicon"
                                    data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'ASC',
    css: { 'glyphicon-arrow-up': $root.orderDirection().toUpperCase() == 'ASC' }"></span>
                                <span class="glyphicon"
                                    data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'DESC',
    css: { 'glyphicon-arrow-down': $root.orderDirection().toUpperCase() == 'DESC' }"></span>
                            </th>
                            <!-- /ko-->
                            <!-- ko if: (header.order === false) -->
                            <th data-bind="text: text, style: { width: width }"></th>
                            <!-- /ko-->
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: { data: showRecords, as: 'item' }">
                        <tr>
                            <td>
                                <label>
                                    <input name="video_select" type="checkbox" data-bind="value: item.ID" />
                                </label>
                            </td>
                            <td data-bind="text: item.IdentifyFileName"></td>
                            <td data-bind="text: item.Number"></td>
                            <td data-bind="text: item.Status.text"></td>
                            <td data-bind="text: item.UploadDate"></td>
                            <td data-bind="text: item.DateRecorded == minDate ? '' : item.DateRecorded"></td>
                            <td data-bind="text: item.Content"></td>
                            <td data-bind="text: item.Context"></td>
                            <td data-bind="text: item.Strategy"></td>
                            <td data-bind="text: item.FileExtension"></td>
                            <td>
                                <a class="table-btn icon-folder-open view-btn" data-bind="event: { click: $root.viewData }" href="#" title="View"></a>
                                <a class="table-btn icon-download-alt download-btn" data-bind="attr: { href: item.DownLoadFilePath }" title="Download"></a>
                            </td>
                        </tr>
                    </tbody>@Html.Display("e", "NoData", new { Colspan = 5 })
                </table>
                @Html.Partial("_Partial_Pager")
            </div>
        </div>
    </div>
}

@section Scripts
{
    <script type="text/javascript">
        var list_Video = {};

        $(function () {

            registerFormCallbacks("@(formId)", {
                onPosted: function (response) {
                    list_Video.search();
                }
            })

            list_Video = new ViewModel(
                {
                    instanceName: "list_Video",
                    modalId: "modalNormal",
                    getDataUrl: '@Html.Raw(Server.UrlDecode(Url.Action("SearchAssignmentFiles")))',
                    viewDataUrl: '@Html.Raw(Url.Action("ViewFile"))',
                    viewType: "Redirect",
                    addDataUrl: '@Html.Raw(Url.Action("UploadVideo", new { AssignmentID = ViewBag.AssignmentId }))',
                    addType: 'Redirect',
                    orderBy: "ID",
                    orderDirection: "DESC",
                    pageSize: 10,
                    headers: [
                       {
                           text: "@Html.DisplayName("Select")",
                           width: "5%"
                       },
                        {
                            text: "@Html.DisplayName("File Name")",
                            field: "@Html.NameFor(model => model.IdentifyFileName)",
                            order: true,
                            width: '13%'
                        },
                        {
                            text: "@Html.DisplayName("ID")",
                            field: "@Html.NameFor(model => model.ID)",
                            order: true,
                            width: '8%'
                        },
                        {
                            text: "@Html.DisplayName("Status")",
                            field: "@Html.NameFor(model => model.Status)",
                            order: true,
                            width: "7%"
                        },
                        {
                            text: "@Html.DisplayName("Upload Date")",
                            field: "@Html.NameFor(model => model.UploadDate)",
                            order: true,
                            width: "12%"
                        },
                        {
                            text: '@Html.DisplayName("Date Recorded")',
                            field: "@Html.NameFor(model => model.DateRecorded)",
                            order: true,
                            width: "14%"
                        },
                        {
                            text: '@Html.DisplayName("Content")',
                            field: "@Html.NameFor(model => model.Content)",
                            width: "10%"
                        },
                        {
                            text: '@Html.DisplayName("Context")',
                            field: "@Html.NameFor(model => model.ContextId)",
                            order: true,
                            width: "10%"
                        },
                        {
                            text: '@Html.DisplayName("Strategy")',
                            field: "@Html.NameFor(model => model.StrategyId)",
                            order: true,
                            width: "10%"
                        },
                        {
                            text: '@Html.DisplayName("Type")',
                            field: "@Html.NameFor(model => model.FileExtension)",
                            width: "3%"
                        },
                        {
                            text: "Action",
                            width: "8%"
                        }
                    ],
                    searchCriteria: {
                        assignmentId: ko.observable(window.queryString("assignmentId", "@ViewBag.AssignmentId")),
                    }
                }
            );

            list_Video.search();
            ko.applyBindings(list_Video);
        });

            function deletedata() {
                var video_select = $("input[name=video_select]:checked");
                if (video_select.length == 0) {
                    showMessage("hint", "Vcw_Videos_Noselect")
                    return false;
                }
                else {
                    var message = window.getErrorMessage("confirmToDelete");
                    message = message.replace("[{0}]", "the selected videos");
                    $.when(waitingConfirm(message, "Delete", "Cancel")).done(function () {
                        $("#@(formId)").submit();
                    })
                }
                return false;
            }
    </script>
}


