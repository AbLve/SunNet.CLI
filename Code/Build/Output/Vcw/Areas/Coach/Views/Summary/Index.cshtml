@model Sunnet.Cli.Business.Vcw.Models.FileListModel
@using Sunnet.Framework.Extensions;
@using Sunnet.Cli.Core.Vcw.Enums;
@using Sunnet.Cli.UIBase.Models

@{
    ViewBag.Title = "Coach Files";
}

@section LeftMenu
{
    @Html.Partial("~/views/Shared/_Partial_Left.cshtml", LeftmenuModel.Coach_Summary)
}

@section BreadPath
{
    @(Html.ActionLink("Coach Summary", "Index", "Summary"))&nbsp;
     <i class="icon-angle-right"></i>&nbsp;
     Coach Files
}

<form class="form-horizontal">
    <div class="form-group"></div>

    <div class="form-group">
        <div class="nav-tab">
            <ul id="myTab" class="nav-container" role="tablist">
                <li class="active"><a href="@(Url.Action("Index", "Summary", new { returnurl = Request.QueryString["returnurl"] }))">Coach Files</a></li>
                <li><a href="@(Url.Action("TeacherFiles", "Summary", new { returnurl = Request.QueryString["returnurl"] }))">Teacher Files</a></li>
            </ul>
        </div>
    </div>
    <div class="nav-container-main">
        <div class="main-content top-form">
            <span class="control-label" style="font-weight: bold">Project Manager</span>
            <span class="control-label-text" style="font-weight: bold">
                @ViewBag.PM
            </span>
        </div>

        <div class="modal-l-b"></div>
        <div class="form-group">
            <label class="control-label col-sm-2" for="UploadBy">Uploaded By</label>
            <div class="col-sm-2">
                @Html.DropDownList("UploadBy", (IEnumerable<SelectListItem>)ViewBag.Uploadby, new { @class = "form-control", data_bind = "value: searchCriteria.uploadby" })
            </div>
            <label class="control-label col-sm-2" for="VideoType">Video Type</label>
            <div class="col-sm-2">
                @Html.DropDownList("VideoType", (IEnumerable<SelectListItem>)ViewBag.VideoType, new { @class = "form-control", data_bind = "value: searchCriteria.videotype" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-2" for="Number">ID</label>
            <div class="col-sm-2">
                @Html.TextBoxFor(model => model.Number, new { @class = "form-control", data_bind = "value: searchCriteria.number" })
            </div>
            <div class="col-sm-2"></div>
            <div class="col-sm-4">
                <button class="mainbutton mainright-btn sreach-btn" type="button" id="btn_search" data-bind="event: { click: search }">Search</button>
            </div>
            <div class="col-sm-2">
                <label for="selectExportTo" class="hide">&nbsp;</label>
                <select class="form-control" id="selectExportTo" onchange="exportTo(this);">
                    <option selected="selected" value="-1">Export to</option>
                    <option value="1">Excel</option>
                    <option value="2">PDF</option>
                </select>
            </div>
        </div>

        <div class="main-content main-content">
            <div class="content-title">Coach File</div>
            <div class="content-body-tab">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr data-bind="foreach: { data: headers, as: 'header' }">
                            <!-- ko if: (header.order === true)-->
                            <th data-bind="style: { width: width }">
                                <a href="javascript:;" data-bind="text: text, click: $root.changeOrder"></a>
                                <span class="glyphicon"
                                    data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'ASC',
    css: { 'glyphicon-arrow-up': $root.orderDirection().toUpperCase() == 'ASC' }"></span>
                                <span class="glyphicon"
                                    data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'DESC',
    css: { 'glyphicon-arrow-down': $root.orderDirection().toUpperCase() == 'DESC' }"></span>
                            </th>
                            <!-- /ko-->
                            <!-- ko if: (header.order === false) -->
                            <th data-bind="text: text, style: { width: width }"></th>
                            <!-- /ko-->
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: { data: showRecords, as: 'item' }">
                        <tr>
                            <td data-bind="text: item.IdentifyFileName"></td>
                            <td data-bind="text: item.Number"></td>
                            <td data-bind="text: item.VideoType.text"></td>
                            <td data-bind="text: item.UploadDate"></td>
                            <td data-bind="text: item.DateRecorded == minDate ? '' : item.DateRecorded"></td>
                            <td data-bind="text: item.Strategy"></td>
                            <td data-bind="text: item.Context"></td>
                            <td data-bind="text: item.Content"></td>
                            <td data-bind="text: item.FileExtension"></td>
                            <td data-bind="text: item.Status.text"></td>
                            <td>
                                <!-- ko if: (item.VideoType.value == 4) -->
                                <a class="table-btn icon-folder-open view-btn" data-bind="event: { click: $root.viewDataGeneral }" href="#" title="View"></a>
                                <!-- /ko-->
                                <!-- ko if: (item.VideoType.value == 5) -->
                                <a class="table-btn icon-folder-open view-btn" data-bind="event: { click: $root.viewDataAssignment }" href="#" title="View"></a>
                                <!-- /ko-->
                                <a class="table-btn icon-comment comment-btn" data-bind='attr: { href: $root.feedBack(item) }' data-toggle="modal" data-target="#modalNormal" href="#" title="Feedback"></a>
                            </td>
                        </tr>
                    </tbody>@Html.Display("e", "NoData", new { Colspan = 5 })
                </table>
                @Html.Partial("_Partial_Pager")
            </div>
        </div>
    </div>
</form>

@section Scripts
{
    <script type="text/javascript">
        var list_Video = {};

        $(function () {
            $("#btn_search").click(function () {
                $("#UploadBy").data("LastValue", $("#UploadBy").val());
                $("#VideoType").data("LastValue", $("#VideoType").val());
                $("#Number").data("LastValue", $("#Number").val());
            })

            list_Video = new ViewModel(
                {
                    instanceName: "list_Video",
                    modalId: "modalNormal",
                    getDataUrl: '@Html.Raw(Server.UrlDecode(Url.Action("SearchCoachFiles")))',
                    orderBy: "ID",
                    orderDirection: "DESC",
                    pageSize: 10,
                    headers: [
                        {
                            text: "@Html.DisplayName("File Name")",
                            field: "@Html.NameFor(model => model.IdentifyFileName)",
                            order: true,
                            width: '12%'
                        },
                        {
                            text: "@Html.DisplayName("ID")",
                            field: "@Html.NameFor(model => model.ID)",
                            order: true,
                            width: '8%'
                        },
                        {
                            text: '@Html.DisplayName("Video Type")',
                            field: "@Html.NameFor(model => model.VideoType)",
                            order: true,
                            width: '11%'
                        },
                        {
                            text: '@Html.DisplayName("Uploaded")',
                            field: "@Html.NameFor(model => model.UploadDate)",
                            order: true,
                            width: '10%'
                        },
                        {
                            text: '@Html.DisplayName("Recordeded")',
                            field: "@Html.NameFor(model => model.DateRecorded)",
                            order: true,
                            width: '11%'
                        },
                        {
                            text: '@Html.DisplayName("Strategies")',
                            field: "@Html.NameFor(model => model.StrategyId)",
                            order: true,
                            width: '10%'
                        },
                        {
                            text: '@Html.DisplayName("Context")',
                            field: "@Html.NameFor(model => model.ContextId)",
                            order: true,
                            width: '9%'
                        },
                        {
                            text: '@Html.DisplayName("Content")',
                            field: "@Html.NameFor(model => model.Content)",
                            width: '9%'
                        },
                        {
                            text: '@Html.DisplayName("Type")',
                            field: "@Html.NameFor(model => model.FileExtension)",
                            width: '3%'
                        },
                         {
                             text: '@Html.DisplayName("Status")',
                             field: "@Html.NameFor(model => model.Status)",
                             order: true,
                             width: '8%'
                         },
                        { text: "Action", width: '15%' }
                    ],
                    searchCriteria: {
                        uploadby: ko.observable(window.queryString("uploadby", -1)),
                        videotype: ko.observable(window.queryString("videotype", -1)),
                        number: ko.observable(window.queryString("number"))
                    }
                }
                ,
            {
                viewDataGeneral: function (data) {
                    location.href = "@Html.Raw(Url.Action("Edit", "General"))" + "?id=" + data.ID + "&redirect=Summary&returnurl=" + list_Video.getLocation();
                },
                viewDataAssignment: function (data) {
                    location.href = "@Html.Raw(Url.Action("EditFile", "CoachAssignment"))" + "?id=" + data.ID + "&redirect=Summary&returnurl=" + list_Video.getLocation();
                },
                feedBack: function (data) {
                    return "@Html.Raw(Url.Action("Feedback", "Feedback"))" + "/" + data.ID;
                }
            }
            );

            list_Video.search();
            ko.applyBindings(list_Video);
        });

            function exportTo(o) {
                o = $(o);
                if (o.val() > 0) {
                    var message_excel = window.getErrorMessage("VCW_ExportToExcelConfirm");
                    var message_pdf = window.getErrorMessage("VCW_ExportToPdfConfirm");
                    if (o.val() == "1") {
                        jQuery.when(waitingConfirm("<p style='text-align:center'> " + message_excel + " </p>", " Yes ", " No ")).done(function () {
                            Export("/Coach/Summary/ExportExcel_CoachFiles");
                        }).fail(function () {

                        });
                    }
                    if (o.val() == "2") {
                        jQuery.when(waitingConfirm("<p style='text-align:center'> " + message_pdf + " </p>", " Yes ", " No ")).done(function () {
                            Export("/Coach/Summary/ExportPdf_CoachFiles");
                        }).fail(function () {

                        });
                    }
                }
            }


            function Export(method) {
                var form = $("<form>");
                form.attr("style", "display:none");
                form.attr("target", "");
                form.attr("method", "post");
                form.attr("action", method);

                var input_uploadby = $("<input>");
                input_uploadby.attr("type", "hidden");
                input_uploadby.attr("name", "uploadby");
                if ($("#UploadBy").data("LastValue") == undefined) {
                    input_uploadby.attr("value", $("#UploadBy").children("option:first").val());
                }
                else {
                    input_uploadby.attr("value", $("#UploadBy").data("LastValue"));
                }
                form.append(input_uploadby);

                var input_videotype = $("<input>");
                input_videotype.attr("type", "hidden");
                input_videotype.attr("name", "videotype");
                if ($("#VideoType").data("LastValue") == undefined) {
                    input_videotype.attr("value", $("#VideoType").children("option:first").val());
                }
                else {
                    input_videotype.attr("value", $("#VideoType").data("LastValue"));
                }
                form.append(input_videotype);

                var input_number = $("<input>");
                input_number.attr("type", "hidden");
                input_number.attr("name", "number");
                if ($("#Number").data("LastValue") == undefined) {
                    input_number.attr("value", "");
                }
                else {
                    input_number.attr("value", $("#Number").data("LastValue"));
                }
                form.append(input_number);

                $("body").append(form);
                form.submit().remove();
                setTimeout(function () { window.loading(false) }, 2000);
            }
    </script>
}
