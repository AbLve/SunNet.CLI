@using Sunnet.Cli.Core.Vcw.Entities;
@using Sunnet.Cli.UIBase.Models;
@using Sunnet.Cli.Business.Vcw.Models;
@using Sunnet.Cli.UIBase;
@using System.Web.Optimization;
@using Sunnet.Cli.Vcw.Models;

@{
    ViewBag.Title = "Coach - Teacher - VIP - VIP Documents";
    var formId = PostFormHelper.GetFormId(Html.ViewContext.View);
}

@section LeftMenu
{
    @Html.Partial("~/views/Shared/_Partial_Left.cshtml", LeftmenuModel.Admin_Teachers)
}

@section BreadPath
{
    @(Html.ActionLink("Admin Teachers", "Index", "TeacherVIP"))&nbsp;<i class="icon-angle-right"></i>&nbsp;VIP Documents
}


@using (Ajax.BeginForm("UplaodVipDocument", "TeacherVIP", null, PostFormHelper.DefaultAjaxOptions, new
    {
        @class = "form-horizontal",
        id = formId
    }))
{   
    @Html.AntiForgeryToken()
    @Html.Partial("~/Areas/Admin/Views/Partials/Tab_Teacher.cshtml", new PageSelected { PageId = 1 })
    <div class="nav-container-main">
        <div class="form-group"></div>
        <div class="nav-tab">
            <ul id="myTab" class="nav-container nav-container-little" role="tablist">
                <li><a href="@(Url.Action("Index", "TeacherVIP", new { returnurl = Request.QueryString["returnurl"] }))">VIP Assignment List</a></li>
                <li class="active"><a href="@(Url.Action("VIPDocuments", "TeacherVIP", new { returnurl = Request.QueryString["returnurl"] }))">VIP Documents</a></li>
            </ul>
        </div>
        <div class="form-group"></div>
        <div class="nav-container-main">
            <div class="form-group">
                <div class="col-sm-6">
                    <div class="content-con">
                        <div class="content-title3">
                            <div class="control-label">Uploaded VIP Documents</div>
                        </div>
                        <div class="uploader-list" id="div_uploadedfiles">
                            @if (ViewBag.VIPDocuments != null)
                            {
                                List<VIPDocumentEntity> documents = ViewBag.VIPDocuments as List<VIPDocumentEntity>;
                                foreach (VIPDocumentEntity item in documents)
                                {
                                <div class="item" id="@(item.FilePath)">
                                    <i class="icon-paper-clip"></i>
                                    <a href="@(DownLoadFile.GetDownFilePath(item.FilePath, item.FileName))" 
                                        class="form-link4">@(item.FileName)</a> :
                        <span class="delete" title="Remove this file">
                            <a href="javascript:;" onclick="$(this).closest('div').remove()">×</a>
                        </span>
                                </div>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="content-con">
                        <div class="content-title3">
                            <div class="control-label">
                                VIP Documents
                                (<span class="redtext">@ViewTextHelper.Vcw_UploadTitle</span>)
                                <span class="control-label-text-r">@ViewTextHelper.Vcw_UploadLimit</span>
                            </div>
                        </div>
                        <div class="upload-btn">
                            <div id="picker">1) Select File to Upload</div>
                        </div>
                        <div id="filelists" class="uploader-list"></div>
                        <div class="upload-btn">
                            <a id="ctlBtn">2) Start Upload</a>
                        </div>
                        <input type="hidden" id="filetarget" />
                    </div>
                </div>
            </div>
            <input type="hidden" name="uploadfiles" id="uploadfiles" />
            <input type="hidden" name="checkuploadedfiles" id="checkuploadedfiles" />
            <div class="button-content">
                <input type="submit" class="mainbutton mainright-btn submit-btn" value="Submit" id="btnSubmit" onclick="return beforeSubmit('Vcw_VIPDocument_Inqueue');">
                <input type="button" class="mainbutton modal-btn cancel-btn" value="Cancel"
                    onclick="redirectBack('VIPDocuments')">
            </div>
        </div>
    </div>
}

@section Scripts
{
    @Scripts.Render("~/scripts/upload")
    @Scripts.Render("~/scripts/vcw_upload_file")
    <script type="text/javascript">

        $(function () {
            registerFormCallbacks("@(formId)", {
                onPosted: function (response) {
                    redirectBack("VIPDocuments");
                }
            })
        });

        function getUploaderPrefix() {
            return "@(ViewBag.EncryptUserID)_";
        }
    </script>
}