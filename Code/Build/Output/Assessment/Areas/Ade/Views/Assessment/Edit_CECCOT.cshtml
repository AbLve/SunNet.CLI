@using Sunnet.Cli.Core.Cpalls
@model Sunnet.Cli.Business.Ade.Models.AssessmentModel

@{
    ViewBag.Title = "Edit Assessment - " + Model.Label + " (" + Model.Type.ToDescription() + ")";
    Layout = "~/Views/Shared/_Modal_Layout.cshtml";
    var formId = PostFormHelper.GetFormId(Html.ViewContext.View);
    var baseClassObj = new { @class = "form-control" };
}
@section Scripts
{
    <script type="text/javascript">
        +(function() {
            registerFormCallbacks("@(formId)", {
                onPosted: function (response) {
                    response.data.Status = ko.observable(response.data.Status);
                    var parentListObj = @Request.QueryString["listObj"];
                    parentListObj.onDataUpdated(response);
                }
            });
            var scoreModel = getAdeScoreModel(@Html.Raw(ViewBag.Scores),'@formId','scores','deleted');
            scoreModel.wave1(true);
            scoreModel.wave2(true);
            scoreModel.wave3(true);
            ko.applyBindings(scoreModel, document.getElementById("@(formId)"));
        })();
    </script>
}
@using (Ajax.BeginForm("Save", "Assessment", null, PostFormHelper.DefaultAjaxOptions,
    new
    {
        @class = "form-horizontal",
        id = formId
    }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)
    @Html.Hidden("scores")
    @Html.HiddenFor(x => x.Type)
    <div class="form-group">
        @Html.LabelFor(model => model.Label, new { @class = "control-label col-sm-3 required" })
        <div class="col-sm-3">
            @Html.TextBoxFor(model => model.Label, baseClassObj)
            @Html.ValidationMessageFor(model => model.Label)
        </div>@Html.LabelFor(model => model.Name, new { @class = "control-label col-sm-3 required" })
        <div class="col-sm-3">
            @Html.TextBoxFor(model => model.Name, baseClassObj)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
    </div>
    <div class="form-group">
        @Html.HiddenFor(model => model.Language)
        @Html.LabelFor(model => model.Status, new { @class = "control-label col-sm-3 required" })
        <div class="col-sm-3">
            @Html.EnumDropDownListFor(model => model.Status, ViewTextHelper.DefaultPleaseSelectText, "", baseClassObj)
            @Html.ValidationMessageFor(model => model.Status)
        </div>
    </div>
    <div class="modal-footer">
        <button class="mainbutton modal-btn submit-btn" type="button" data-bind="event:{click:submit}">Submit</button>
        <button class="mainbutton modal-btn cancel-btn" type="button" data-dismiss="modal">Cancel</button>
    </div>
}
