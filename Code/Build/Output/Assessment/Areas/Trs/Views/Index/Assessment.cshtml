@using System.Web.Optimization
@using Sunnet.Cli.Business.Common
@using Sunnet.Cli.Core.Trs
@model Sunnet.Cli.Business.Trs.Models.TrsAssessmentModel
@{
    ViewBag.Title = "Assessment";
    string formId = PostFormHelper.GetFormId(Html.ViewContext.View);
    var limitDate = CommonAgent.TrsMinDate;
    bool isSpecialist = ViewBag.IsSpecialist == null ? false : (bool)ViewBag.IsSpecialist;
    bool ifCanSave = ViewBag.IfCanSave == null ? false : (bool)ViewBag.IfCanSave;
}
@section BreadPath
{
    <a href="@(SFConfig.MainSiteDomain)Home/Dashboard">
        <img src="/images/icon_trs.png" alt="Logo" />
    </a>
    <i class="icon-angle-right"></i>@Html.ActionLink("Facilities", "Index")
    <i class="icon-angle-right"></i>@Html.ActionLink(Model.School.Name, "School", new { id = Model.SchoolId })
    <i class="icon-angle-right"></i><b>TRS Process assessment</b>
}
@section Styles
{
    <style type="text/css">
        .tooltip-inner {
            max-width: 600px;
        }

        table.trs-items caption {
            font-size: 14px;
            font-weight: bold;
            text-align: left;
        }

        table.trs-items th.scores {
            text-align: left;
            width: 110px;
        }

        table.trs-items th.scores-na {
            width: 80px;
        }

        table.trs-items td.scores {
            text-align: left;
        }

            table.trs-items td.scores input {
                float: left;
            }

            table.trs-items td.scores label {
                display: inline-block;
                float: left;
                width: 70px;
            }

        table.trs-items td.scores-na label {
            width: 50px;
        }

        table.trs-items td.scores label {
            border: solid 1px rgba(255, 255, 255, 0);
            padding: 2px;
        }

            table.trs-items td.scores label:hover {
                border: solid 1px #ddd;
            }

        .panel-heading {
            padding: 0;
        }

        .panel-title a {
            display: inline-block;
            padding: 10px 15px;
            width: 100%;
        }

        .scrollUp {
            position: fixed;
            right: 20px;
            top: 75%;
            width: 140px;
            z-index: 2147483647;
        }

            .scrollUp a {
                background-color: #333333;
                border: none;
                border-bottom: 1px #000 solid;
                color: #eee;
                display: inline-block;
                height: 40px;
                line-height: 40px;
                opacity: .8;
                text-align: left;
                text-decoration: none;
                width: 130px;
            }

                .scrollUp a i {
                    background-color: #42b357;
                    border: solid 1px #333333;
                    display: inline-block;
                    height: 100%;
                    text-align: center;
                    vertical-align: top;
                    width: 40px;
                }

                .scrollUp a:hover {
                    background-color: #444444;
                }

        .item-desc {
            -moz-transition: all 300ms ease-in-out;
            -ms-transition: all 300ms ease-in-out;
            -o-transition: all 300ms ease-in-out;
            max-height: 37px;
            max-width: 450px;
            overflow: hidden;
            position: absolute;
            text-overflow: ellipsis;
            transition: all 300ms ease-in-out;
        }

        tr:hover .item-desc {
            background-color: #eeeeee;
            border: solid 1px #000000;
            max-height: 500px;
            padding: 10px;
            z-index: 100;
        }

        .table > thead > tr > th.thcomment {
            width: 40px;
            text-align: right;
        }

        .table > tbody > tr > td.tdcomment {
            vertical-align: bottom;
        }

        tbody > tr.comment > td {
            border-top: 0;
        }
    </style>
}
<div class="main-content top-form">
    <form class="form-horizontal" role="form">
        @Html.LabelFor(x => x.School.Name, new { @class = "control-label" })
        @Html.DisplayFor(x => x.School.Name)
    </form>
</div>
@using (Ajax.BeginForm("SaveAssessment", null, PostFormHelper.DefaultAjaxOptions, new
{
    @class = "form-horizontal",
    id = formId
}))
{
    <div class="right-content-top">
        <div class="form-group">
            @Html.LabelFor(x => x.VisitDate, new { @class = "control-label col-sm-1 " })
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.VisitDate, new
           {
               @class = "form-control date",
               @Value = Model.VisitDate.FormatDateString(),
               data_bind = "required:isFinalizing(),enable:" + isSpecialist.ToString().ToLower() + ""
           })

                @Html.ValidationMessageFor(x => x.VisitDate)
            </div>
            @Html.LabelFor(x => x.DiscussDate, new { @class = "control-label col-sm-1 " })
            <div class="col-sm-3">
                @Html.TextBoxFor(x => x.DiscussDate, new
           {
               @class = "form-control date",
               @Value = Model.DiscussDate.FormatDateString(),
               data_bind = "required:isFinalizing(),enable:" + isSpecialist.ToString().ToLower() + ""
           })
                @Html.ValidationMessageFor(x => x.DiscussDate)
            </div>
            @Html.LabelFor(x => x.ApproveDate, new { @class = "control-label col-sm-3 " })
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.ApproveDate, new
           {
               @class = "form-control date",
               @Value = Model.ApproveDate.FormatDateString(),
               data_bind = "required:isFinalizing(),enable:" + isSpecialist.ToString().ToLower() + ""
           })
                @Html.ValidationMessageFor(x => x.ApproveDate)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Type, new { @class = "control-label col-sm-1 required" })
            <div class="col-sm-2">
                @if (isSpecialist)
                {
                    @Html.EnumDropDownListFor(x => x.Type, ViewTextHelper.DefaultPleaseSelectText, "",
                new
                {
                    @class = "form-control",
                    data_bind = "value:type"
                })
                    @Html.ValidationMessageFor(x => x.Type)
                }
                else
                {
                    @Html.HiddenFor(x => x.Type)
                    <span class="form-control" style="background-color: #eee">@((int)Model.Type > 0 ? Model.Type.ToDescription() : "")</span>
                }
            </div>
            @Html.LabelFor(x => x.TaStatuses, new { @class = "control-label col-sm-1" })
            <div class="col-sm-4">
                <div class="checkbox">
                    <input type="hidden" name="TaStatuses" />
                    <label>
                        <input type="checkbox" name="TaStatuses"  value="@((int)TrsTaStatus.TaPlan)" onclick="@(!isSpecialist ? "return false;" : "")"
                               data-bind='checked:taStatuses.indexOf(@((int)TrsTaStatus.TaPlan))>= 0'/>&nbsp;@(TrsTaStatus.TaPlan.ToDescription())
                    </label>@ViewTextHelper.HtmlEmptySeparator
                    <label>
                        <input type="checkbox" name="TaStatuses" value="@((int)TrsTaStatus.Sia)"  onclick="@(!isSpecialist ? "return false;" : "")"
                                   data-bind='checked:taStatuses.indexOf(@((int)TrsTaStatus.Sia))>= 0' />&nbsp;@(TrsTaStatus.Sia.ToDescription())
                    </label>@ViewTextHelper.HtmlEmptySeparator
                    <label>
                        <input type="checkbox" name="TaStatuses" value="@((int)TrsTaStatus.TrsProbation)" onclick="@(!isSpecialist ? "return false;" : "")"
                                       data-bind='checked:taStatuses.indexOf(@((int)TrsTaStatus.TrsProbation))>= 0'  />&nbsp;@(TrsTaStatus.TrsProbation.ToDescription())
                    </label>@ViewTextHelper.HtmlEmptySeparator
                    <label>
                        <input type="checkbox" name="TaStatuses" value="@((int)TrsTaStatus.None)" onclick="@(!isSpecialist ? "return false;" : "")"
                                           data-bind='checked:taStatuses.indexOf(@((int)TrsTaStatus.None))>= 0'  />&nbsp;@(TrsTaStatus.None.ToDescription())
                    </label>
                    <br />
                    @Html.ValidationMessageFor(x => x.TaStatuses)
                </div>
            </div>
            @Html.LabelFor(x => x.RecertificatedBy, new { @class = "control-label col-sm-2 " })
            <div class="col-sm-2">
                @Html.TextBoxFor(x => x.RecertificatedBy, new
           {
               @class = "form-control date",
               @Value = Model.RecertificatedBy.FormatDateString(),
               data_bind = "required:isFinalizing(),enable:" + isSpecialist.ToString().ToLower() + ""
           })
                @Html.ValidationMessageFor(x => x.RecertificatedBy)
            </div>
        </div>
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.Status)
        @Html.Hidden("items")
        @Html.Hidden("observations")
        @Html.HiddenFor(x => x.SchoolId)
    </div>
    <div class="modal-l-b"></div>
    <div class="main-content">
        <!-- School categories begin-->
        <div>
            <label class="trs-name">@(Model.School.Assessor.FullName)</label>
        </div>
        <!-- ko template:{name:'tmp_school',data:school,as:'host'}-->
        <!--/ko-->
        <!-- School categories end-->
        <div class="modal-l-b"></div>
        <!-- Classes categories begin-->
        <ul class="nav-container" role="tablist" data-bind="foreach:{data:classes,as:'host'}">
            <li role="presentation" data-bind="css:{active:$root.activeClassId() == host.id,'trs-partial':allFilled()==false,'trs-completed':allFilled()},attr:{'href':'#class' + $index(),id:'tab_class_'+$index()},click:$root.switchClass">
                <a role="tab" data-toggle="tab" data-bind="attr:{href:'#class' + $index()},text:name"></a>
            </li>
        </ul>
        <div class="tab-content" data-bind="foreach:{data:classes,as:'host'}">
            <div role="tabpanel" class="tab-pane " data-bind="attr:{id:'class' + $index()},css:{active:$root.activeClassId() == host.id}">
                <!--ko if:window._DEBUG-->
                <div data-bind="visible:window._DEBUG,text:host.name"></div>
                <!--/ko-->
                <div class="form-group">
                    <label class="col-sm-2 control-lable">Length of Observation</label>
                    <div class="col-sm-2">
                        <input type="text" name="classobs" class="form-control"
                            data-bind="value:host.observationLength,enable:host.ifCanAccessObservation" />
                    </div>
                </div>
                <div class="panel-group" role="tablist" aria-multiselectable="false"
                    data-bind="attr:{id:'class'+id+'Categories'},foreach:{data:categories,as:'category'}">

                    <div class="panel panel-default">
                        <div class="panel-heading" role="tab" data-bind="attr:{id:'class'+host.id+'Heading'+$index()},css:{'trs-partial':allFilled()==false,'trs-completed':allFilled()}">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" aria-expanded="true"
                                    data-bind="attr:{href:'#class'+host.id+'Category'+$index(),'aria-controls':'class'+host.id+'Category'+$index(),'data-parent':'#class'+host.id+'Categories'},html:text"></a>
                            </h4>
                        </div>
                        <div class="panel-collapse collapse"
                            data-bind="attr:{id:'class'+host.id+'Category'+$index(),'aria-labelledby':'class'+host.id+'Heading'+$index()}">
                            <div class="panel-body" data-bind="template:{name:$root.getCategroyTemplate,foreach:subs,as:'sub'}">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Classes categories end-->
    </div>
    <div id="buttonsContainer" class="button-content hide">
        @if (ifCanSave)
        {
            <button class="mainbutton mainright-btn submit-btn" type="button" data-bind="event:{click:save}">Save</button>
            <button class="mainbutton mainright-btn submit-btn" id="btnPreview" type="button" data-bind="event:{click:preview}">Preview</button>
            if (isSpecialist)
            {
            <button class="mainbutton mainright-btn submit-btn" type="button" data-bind="event:{click:finalize}">Finalize</button>
            }
            @Html.ActionLink("Cancel", "School", new { id = Model.SchoolId }, new { @class = "mainbutton mainright-btn cancel-btn" })
        }
        else
        {
            @Html.ActionLink("Back", "School", new { id = Model.SchoolId }, new { @class = "mainbutton mainright-btn cancel-btn" })
        }
    </div>
    <div class="scrollUp">
        <a href="#" title="Back to Top">
            <i class="icon-angle-up icon-2x"></i>&nbsp;Back to Top
        </a>
        <div class="clearfix"></div>
        <a href="#" title="Collapse" data-bind="click:collapseAll">
            <i class="icon-folder-close-alt icon-2x"></i>&nbsp;Collapse All
        </a>
    </div>
}
<iframe style="display: none; height: 0; visibility: hidden; width: 0;" id="downloadpdf"></iframe>
@section Scripts{
    <script type="text/html" id="tmp_school">
        <div class="panel-group" id="schoolCategories" role="tablist" aria-multiselectable="true"
            data-bind="foreach:{data:$root.categories,as:'category'}">
            <div class="panel panel-default">
                <div class="panel-heading" role="tab"
                    data-bind="attr:{id:'schoolHeading'+$index()},css:{'trs-partial':allFilled()==false,'trs-completed':allFilled()}">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" data-parent="#schoolCategories" aria-expanded="true"
                            data-bind="attr:{href:'#schoolCategory'+$index(),'aria-controls':'schoolCategory'+$index()},html:text"></a>
                    </h4>
                </div>
                <div class="panel-collapse collapse" role="tabpanel"
                    data-bind="attr:{id:'schoolCategory'+$index(),'aria-labelledby':'schoolHeading'+$index()}">
                    <div class="panel-body" data-bind="template:{name:$root.getCategroyTemplate,foreach:subs,as:'sub'}">
                    </div>
                </div>
            </div>
        </div>
    </script>
    <script type="text/html" id="tmp_subCategory_Process">
        <table class="table table-striped table-hover trs-items">
            <caption data-bind="html:text + ' (' + note + ')'" style="text-align: left;">
            </caption>
            <thead>
                <tr>
                    <th style="width: 120px;">Measure #
                    </th>
                    <th width="*">Measure
                    </th>
                    <th class="scores">Score0
                    </th>
                    <th class="scores">Score1
                    </th>
                    <th class="scores">Score2
                    </th>
                    <th class="scores">Score3
                    </th>
                    <th class="scores scores-na">Exclude
                    </th>
                    <th class="thcomment"></th>
                </tr>
            </thead>
            <tbody data-bind="template:{name:'tmp_Item',foreach:items,as:'item'}"></tbody>
        </table>
        <br />
    </script>
    <script type="text/html" id="tmp_Item">
        <tr data-bind="css:{'danger':$root.isSubmitting() && filled() === false}">
            <td data-bind="html:itemNo"></td>
            <td style="text-align: left;">
                <div data-bind="html:description">
                </div>
                <!--ko if:keyBehavior && keyBehavior.length>0 -->
                <a class="form-link2" data-toggle="tooltip" data-container="body" data-placement="right" data-html="true" data-bind="tooltip:keyBehavior">Mouse over for Key behaviors</a>
                <!--/ko-->
            </td>
            <td data-bind="template:{name:'tmp_Answer',foreach:answers.Score0,as:'answer'}" class="scores"></td>
            <td data-bind="template:{name:'tmp_Answer',foreach:answers.Score1,as:'answer'}" class="scores"></td>
            <td data-bind="template:{name:'tmp_Answer',foreach:answers.Score2,as:'answer'}" class="scores"></td>
            <td data-bind="template:{name:'tmp_Answer',foreach:answers.Score3,as:'answer'}" class="scores"></td>
            <td data-bind="template:{name:'tmp_Answer',foreach:answers.Score_1,as:'answer'}" class="scores scores-na"></td>
            <td>
                <a class="table-btn icon-pencil pencil-btn"
                    data-bind="click:function(){isView(false);},visible:(isView() && ifCanAccess)" href="#" title="Add comment"></a>
            </td>
        </tr>
        <tr class="hidden">
            <td colspan="8"></td>
        </tr>
        <tr class="comment" data-bind="template:{name:'tmp_Comments',foreach:item}">
        </tr>
    </script>
    <script type="text/html" id="tmp_subCategory_Structural">
        <table class="table table-striped table-hover trs-items">
            <caption data-bind="html:text + ' (' + note + ')'" style="text-align: left;">
            </caption>
            <thead>
                <tr>
                    <th style="width: 120px;">Measure #
                    </th>
                    <th width="*">Measure
                    </th>
                    <th class="scores"></th>
                    <th class="scores"></th>
                    <th class="scores scores-na">Exclude
                    </th>
                    <th class="thcomment"></th>
                </tr>
            </thead>
            <tbody data-bind="template:{name:'tmp_Item_Structural',foreach:items,as:'item'}"></tbody>
        </table>
        <br />
    </script>
    <script type="text/html" id="tmp_Item_Structural">
        <tr data-bind="css:{'danger':$root.isSubmitting() && filled() === false}">
            <td data-bind="html:itemNo"></td>
            <td style="text-align: left;">
                <div data-bind="html:description">
                </div>
                <!--ko if:keyBehavior && keyBehavior.length>0 -->
                <a class="form-link2" data-toggle="tooltip" data-container="body" data-placement="right" data-html="true" data-bind="tooltip:keyBehavior">Mouse over for Key behaviors
                </a>
                <!--/ko-->
            </td>
            <td data-bind="template:{name:'tmp_Answer',foreach:answers.Score0,as:'answer'}" class="scores"></td>
            <td data-bind="template:{name:'tmp_Answer',foreach:answers.Score1,as:'answer'}" class="scores"></td>
            <td data-bind="template:{name:'tmp_Answer',foreach:answers.Score_1,as:'answer'}" class="scores scores-na"></td>
            <td>
                <a class="table-btn icon-pencil pencil-btn"
                    data-bind="click:function(){isView(false)},visible:(isView() && ifCanAccess)" href="#" title="Add comment"></a>
            </td>
        </tr>
        <tr class="hidden">
            <td colspan="6"></td>
        </tr>
        <tr class="comment" data-bind="template:{name:'tmp_Comments',foreach:item}">
        </tr>

    </script>
    <script type="text/html" id="tmp_Answer">
        <input type="radio" data-bind="enable:item.ifCanAccess,attr:{name:'host'+host && host.id + 'item'+$parent.itemId,id:'host' + host && host.id + 'item'+$parent.itemId+'answer'+id},value:id,checked:item.answer.newAnswer,click:function(clickedAnswer,event){return $root.choosed(host,$parent,event);}" />
        <label data-bind="attr:{for:'host' + host && host.id + 'item'+$parent.itemId+'answer'+id},html:'&nbsp;'+text">
        </label>
        <div class="clearfix"></div>
    </script>
    <script type="text/html" id="tmp_Comments">
        <td colspan="8">
            <!--ko ifnot:isView() -->
            <div style="text-align: right">
                <textarea style="width: 800px; height: 70px; border: solid gray 1px; word-break: normal" maxlength="300"
                    data-bind="hasFocus:!isView(),text:comments,value:comments,enable:ifCanAccess,event:{blur:$root.onItemCommentBlur}"></textarea>
            </div>
            <!--/ko-->
        </td>
    </script>

    @Scripts.Render("~/scripts/trs")
    <script type="text/javascript">
        var assessment = @Html.Raw(ViewBag.Json);
        var model = new TrsAssessmentModel(assessment);
        var $form;

        var TrsAssessmentStatus = {
            Initialized: +"@((int)TRSStatusEnum.Initialized)",
            Saved: +"@((int)TRSStatusEnum.Saved)",
            Completed: +"@((int)TRSStatusEnum.Completed)"
        };
        var downloadQueue = [];
        var goingToSchool = false;
        var downloading = 0;

        function goToSchool() {
            goingToSchool = true;
            if (downloading > 0) {
                window.loading();
            } else {
                location.href = '@Url.Action("School", "Index", new { Id = Model.SchoolId })';
            }
        }

        function startDownload() {
            var iframeHtml = '<iframe style="width:0px;height:0px; display: none;visibility: hidden;"></iframe>';
            var reports = downloadQueue.length;
            for (var i = 0; i < reports; i++) {
                var url = downloadQueue.pop();
                $(iframeHtml).load(function() {
                    downloading--;
                    goingToSchool && goToSchool();
                }).attr("src", url).appendTo("body");
                downloading++;
            }
        }

        function prepareReportUrl() {
            var resultUrl = '@Html.Raw(Url.Action("AssessmentResults", "Report", new { export = true, download = false }))';
            var facilityUrl = '@Html.Raw(Url.Action("Facility", "Report", new { export = true, download = false }))';
            var classUrl = '@Html.Raw(Url.Action("Class", "Report", new { export = true, download = false }))';
            downloadQueue.push(facilityUrl + "&id=" +  model.assessmentId);
            for (var i = 0; i < model.classes().length; i++) {
                downloadQueue.push(classUrl + "&id=" +  model.assessmentId + "&classId=" + model.classes()[i].id);
            }
            downloadQueue.push(resultUrl + "&id=" +  model.assessmentId);
            startDownload();
            goToSchool();
        }

        var verifiedStarSetted = false;
        $(function() {
            $form = $('#@(formId)');

            $.extend(model, {
                assessmentId:"@(Model.Id)",
                getCategroyTemplate: function(subCategory) {
                    return "tmp_subCategory_" + subCategory.type;
                },
                collapseAll: function() {
                    $("div.collapse.in").each(function(index, div) {
                        $(div).collapse("hide");
                    });
                    return false;
                },
                save: function() {
                    model.collapseAll();

                    $form.find("#Status").val(TrsAssessmentStatus.Saved);
                    model.submitStatus(Trs_Status.Saving);
                    model.submit();
                },
                preview: function() {
                    model.collapseAll();

                    var id = $form.find("#Id").val();
                    if (id && +id > 0) {
                        window.open('@Url.Action("Preview", "Report")' + "/" + id + "?all=" + model.allFilled());
                } else {
                    $form.find("#Status").val(TrsAssessmentStatus.Saved);
                    model.submitStatus(Trs_Status.Priviewing);
                    model.submit();
                }
                },
                finalize: function() {
                    model.collapseAll();
                    // change status after verified star set
                    $form.find("#Status").val(TrsAssessmentStatus.Saved);
                    model.submitStatus(Trs_Status.Finalizing);
                    model.submit();
                },
                finalizeAfterVerifiedStar: function() {
                    model.collapseAll();
                    // change status after verified star set
                    $form.find("#Status").val(TrsAssessmentStatus.Completed);
                    model.submitStatus(Trs_Status.Finalizing);
                    model.submit();
                },
                submit: function() {
                    $("input[type=text][name=classobs]").each(function(){
                        $(this).removeClass("number");
                    })
                    var result = model.prepare();
                    if ($form.valid()) {
                        if (result == false) {
                            window.showMessage("hint", "trs_All_items_required");
                        } else {
                            $("input[type=text][name=classobs]").each(function(){
                                $(this).addClass("number");
                            })
                            if($("input[type=text][name=classobs]").valid())
                            {
                                var result_observation=model.getObservations();
                                $form.find("#items").val(result);
                                $form.find("#observations").val(result_observation);
                                $form.submit();
                            }
                            else {
                                window.showMessage("hint", "trs_ObservationLength");
                            }
                        }
                    }
                }
            });

            ko.applyBindings(model, document.getElementById("@(formId)"));

            registerFormCallbacks("@(formId)", {
                onPosted: function(response) {
                    if (response.data) {
                        $form.find("#Id").val(response.data.id);
                        model.assessmentId = response.data.id;
                    }
                    if (model.submitStatus() == Trs_Status.Finalizing) {
                        if (response.data.status.value === TrsAssessmentStatus.Saved) {
                            $("#modalSmall").modal({ remote: '@Url.Action("VerifiedStar")/' +  model.assessmentId });
                        } else if (response.data.status.value === TrsAssessmentStatus.Completed) {
                            $form.find("button.submit-btn").button("loading");
                            window.loading();
                            prepareReportUrl();
                        }
                    } else if (model.submitStatus() == Trs_Status.Priviewing) {
                        model.submitStatus(Trs_Status.Saving);
                        window.open('@Url.Action("Preview", "Report")' + "/" + id + "?all=" + model.allFilled());
                    }
                }
            });

            $("#modalSmall").on("hidden.bs.modal", function(event) {
                if (verifiedStarSetted) {
                    model.finalizeAfterVerifiedStar();
                }
            });

            $("body").on("shown.bs.collapse", function(event) {
                var $this = $(event.target);
                var $panel = $this.closest("div.panel");
                window.scrollTo(0, $panel.offset().top);
            });

            $("#btnPreview").tooltip({
                html: true,
                placement: "top",
                title: window.getErrorMessage("trs_Preview_Tips")
            });

            $("#buttonsContainer").removeClass("hide");

            $(window).resize(function() {
                // Measure #, 4 Score, N/A, adjust(padding)
                var descWidth = $("div.panel-group").width() - 120 - 110 * 4 - 80 - 60;
                $("div.item-desc").css("max-width", descWidth);
            }).trigger("resize");

            $("#ApproveDate").on("change", function() {
                var limitDate = new Date('@(limitDate.Year)','@(limitDate.Month - 1)','@(limitDate.Day)');
                var source = $(this).val();
                var date = new Date(source);
                if (date < limitDate) {
                    date = limitDate;
                    source = limitDate.Format("MM/dd/yyyy");
                    $(this).val(source);
                }
                $("#RecertificatedBy").val(source.replace(date.getFullYear().toString(), date.getFullYear() + 3));
            });

        });
    </script>
}