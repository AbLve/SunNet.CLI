@using Sunnet.Cli.UIBase.Models
@model Sunnet.Cli.MainSite.Areas.Demo.Models.Products
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Modal_Layout.cshtml";
    var formId = PostFormHelper.GetFormId(Html.ViewContext.View);
}

<h2>Edit</h2>
@section Scripts
{
    <script type="text/javascript">

        function getUploaderPrefix() {
            return "@(ViewBag.EncryptUserID)_";
        }

        +(function() {

            uploader = SunnetWebUploader.CreateWebUploader({
                pick: "#picker",
                container: "#thelist",
                speed: "#speed",
                uploadbutton: "#ctlBtn",
                submitbutton: "#btnSumbit",
                targetField: "#Logo"
            });

            registerFormCallbacks("@formId", {
                onPosted: function (response) {
                    console.log(response);
                }
            });


            var uploader;

            function beforeSubmit(sender) {
                if (uploader.getStats().queueNum > 0) {
                    $(sender).data("clicked", true);
                    if (uploader.state == "ready") {
                        uploader.upload();
                    }
                    return false;
                }
                return true;
            };

            setTimeout(function () {

            }, 10);

            $("#btnSubmit").click(function () {
                return beforeSubmit(this);
            });

        })();
    </script>
}
@using (Ajax.BeginForm("Edit", "Products", null, PostFormHelper.DefaultAjaxOptions
    , new { @class = "form-horizontal", id = formId }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Products</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Logo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <h5 id="speed"></h5>
                <div id="thelist" class="uploader-list"></div>
                <div class="btns">
                    <div id="picker">选择文件</div>
                    <button id="ctlBtn" class="btn btn-default">开始上传</button>
                </div>
                @Html.HiddenFor(model => model.Logo)
                @Html.ValidationMessageFor(model => model.Logo)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price)
                @Html.ValidationMessageFor(model => model.Price)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="btnSubmit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

