@model Sunnet.Cli.Core.Users.Entities.ParentEntity
@using Sunnet.Cli.UIBase.Models
@using Sunnet.Framework.Extensions
@using Sunnet.Cli.Business.Permission.Models
@{
    ViewBag.Title = "Parent";
    var formId = PostFormHelper.GetFormId(Html.ViewContext.View);
}

@section Scripts
{
    <script type="text/javascript">
        $(function () {
            $("#ChildFirstName").rules("add", { required: true, messages: { required: "The Chlid’s Frist Name field is required." } });
            $("#ChildLastName").rules("add", { required: true, messages: { required: "The Chlid’s Last Name field is required." } });
            registerFormCallbacks("@(formId)", {
                onPosted: function (response) {
                    redirectBack("index");
                }
            });
            $("#Relation").change(function () {
                if ($("#Relation :selected").text() == "Other")
                    $("#RelationOther").attr("type", "text");
                else {
                    $("#RelationOther").val("");
                    $("#RelationOther").attr("type", "hidden");
                }
            })
            $("#SaveInvite").click(function () {
                $("<input type='hidden' name='isInvite' id='isInvite' value='true' />").appendTo($("#@(formId)"));
            });
        });
    </script>
}

@section LeftMenu
{
    @Html.Partial("~/Views/Shared/_MasterData_LeftMenu.cshtml", Sunnet.Cli.MainSite.Models.Leftmenu_MainSite.User)
}

@section BreadPath
{
    @(Html.ActionLink("User Management", "Dashboard", "Public"))
    <i class="icon-angle-right"></i>
    @(Html.ActionLink("Parent", "Index", "Parent"))
    <i class="icon-angle-right"></i>New
}

@using (Ajax.BeginForm("SaveParent", "Parent", null, PostFormHelper.DefaultAjaxOptions,
    new
    {
        @class = "form-horizontal",
        id = formId
    }))
{
    @Html.AntiForgeryToken()  
    <div class="main-content">
        <div class="content-title">Basic Information</div>
        <div class="content-body">
            <div class="form-group">
                @Html.Label("Chlid’s Frist Name", new { @class = "col-sm-3 control-label required", @for = "ChildFirstName" })
                <div class="col-sm-3">
                    @Html.TextBox("ChildFirstName", "", new { @class = "form-control col-sm-3" })
                    @Html.ValidationMessage("ChildFirstName")
                </div>
                @Html.Label("Chlid’s Last Name", new { @class = "col-sm-3 control-label required", @for = "ChildLastName" })
                <div class="col-sm-3">
                    @Html.TextBox("ChildLastName", "", new { @class = "form-control col-sm-3" })
                    @Html.ValidationMessage("ChildLastName")
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SchoolYear, null, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.SchoolYear, new { @class = "form-control", @readonly = true })
                </div>
                @Html.LabelFor(model => model.ParentId, null, new { @class = "col-sm-3 control-label required" })
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.ParentId, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ParentId)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.UserInfo.FirstName, null, new { @class = "col-sm-3 control-label required" })
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.UserInfo.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserInfo.FirstName)
                </div>
                @Html.LabelFor(model => model.UserInfo.MiddleName, null, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.UserInfo.MiddleName, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.UserInfo.LastName, null, new { @class = "col-sm-3 control-label required" })
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.UserInfo.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserInfo.LastName)
                </div>
                @Html.LabelFor(model => model.UserInfo.PreviousLastName, null, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.UserInfo.PreviousLastName, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.UserInfo.Status, null, new { @class = "col-sm-3 control-label required" })
                <div class="col-sm-3">
                    @Html.DropDownListFor(model => model.UserInfo.Status, Model.UserInfo.Status.ToSelectList(), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserInfo.Status)
                </div>
                <span class="col-sm-3 control-label required">@Html.DisplayNameFor(model => model.UserInfo.StatusDate)</span>
                <div class="col-sm-3">
                    <p>@DateTime.Now.ToShortDateString()</p>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.UserInfo.PrimaryPhoneNumber, null, new { @class = "col-sm-3 control-label required" })
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.UserInfo.PrimaryPhoneNumber, new { @class = "form-control _homephone" })
                    @Html.ValidationMessageFor(model => model.UserInfo.PrimaryPhoneNumber)
                </div>
                @Html.LabelFor(model => model.UserInfo.PrimaryNumberType, null, new { @class = "col-sm-3 control-label required" })
                <div class="col-sm-3">
                    @Html.EnumDropDownListFor(model => model.UserInfo.PrimaryNumberType, ViewTextHelper.DefaultPleaseSelectText, "", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserInfo.PrimaryNumberType)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.UserInfo.PrimaryEmailAddress, null, new { @class = "col-sm-3 control-label required" })
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.UserInfo.PrimaryEmailAddress, new { @class = "form-control email" })
                    @Html.ValidationMessageFor(model => model.UserInfo.PrimaryEmailAddress)
                </div>
                @Html.LabelFor(model => model.UserInfo.SecondaryEmailAddress, null, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-3">
                    @Html.TextBoxFor(model => model.UserInfo.SecondaryEmailAddress, new { @class = "form-control email" })
                    @Html.ValidationMessageFor(model => model.UserInfo.SecondaryEmailAddress)
                </div>
            </div>
        </div>
        <div class="content-body">
            <div class="form-group">
                @Html.LabelFor(model => model.ParentNotes, null, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextAreaFor(model => model.ParentNotes, new { @class = "form-control", style = "height:70px; margin:0px; padding:0px;" })
                    @Html.ValidationMessageFor(model => model.ParentNotes)
                </div>
            </div>
        </div>
        <div class="button-content">
            <input type="submit" class="mainbutton mainright-btn submit-btn" value="Submit">
            <input type="submit" id="SaveInvite" class="mainbutton mainright-btn submit-btn" value="Submit & Invite">
            <button class="mainbutton modal-btn cancel-btn" type="button" onclick='redirectBack("index")'>Cancel</button>
        </div>
    </div>
}

