@model Sunnet.Cli.Core.Users.Entities.TeacherEntity
@using System.Web.Optimization
@using Sunnet.Cli.UIBase.Models
@using Sunnet.Cli.Core.Users.Entities
@using Sunnet.Cli.Core.Common.Enums
@using Sunnet.Framework.Extensions
@using Sunnet.Cli.UIBase.Models
@using Sunnet.Cli.Business.Permission.Models
@using Sunnet.Cli.Core.Students.Enums
@{
    ViewBag.Title = "Teacher Invite";
    var formId = PostFormHelper.GetFormId(Html.ViewContext.View);
    IEnumerable<GroupPackageModel> GroupPackages = ViewBag.GroupPackages;
    List<GroupPackageModel> SelectedGroupPagkages = ViewBag.GroupPackageSelected;
}

@section Scripts
{

    @Scripts.Render("~/scripts/module_teacher")
    <script type="text/javascript">
        
        var roleJson = @Html.Raw(ViewBag.Role);
        
        jQuery(function () {
            $.extend(roleJson,{
                selectedCounty: ko.observable(@Model.CountyId),
                countiesOptions: ko.observableArray([]),
                selectedState: ko.observable(@Model.StateId)
            });
            roleJson.selectedState.subscribe(function (state) {
                $.getJSON('/Invitation/Public/GetNullCountiesByStateId',
                { stateId: state },
                function (data)
                {
                    roleJson.countiesOptions.removeAll();
                    roleJson.countiesOptions.push.apply(roleJson.countiesOptions, data);
                    roleJson.selectedCounty(@Model.CountyId);
                });
            });

            registerFormCallbacks("@(formId)", {
                onPosted: function (response) {
                    redirectBack("index");
                }
            });

            var data = @Html.Raw(ViewBag.AgeGroupJson);
            var value = "";
            for (i = 0; i < data.length; i++) {
                value += "'" + data[i].AgeGroup + "'" + ",";
            }
            var bm = eval("[" + value + "]");
            $("#ageGroups").val(bm);

            if ($("#Ethnicity :selected").text() == "Other")
                $("#EthnicityOther").attr("type", "text");
            if ($("#PrimaryLanguageId :selected").text() == "Other")
                $("#PrimaryLanguageOther").attr("type", "text");
            if ($("#SecondaryLanguageId :selected").text() == "Other")
                $("#SecondaryLanguageOther").attr("type", "text");
            if ($("#TeacherType :selected").text() == "Other")
                $("#TeacherTypeOther").attr("type", "text");
            if ($("#CoachAssignmentWay :selected").text() == "Other")
                $("#CoachAssignmentWayOther").attr("type", "text");
            if ($("#ECIRCLEAssignmentWay :selected").text() == "Other")
                $("#ECIRCLEAssignmentWayOther").attr("type", "text");
            if ($("#ageGroups :selected").text() == "Other")
                $("#AgeGroupOther").attr("type", "text");

            $("#Ethnicity").change(function() {
                if ($("#Ethnicity :selected").text() == "Other")
                    $("#EthnicityOther").attr("type", "text");
                else {
                    $("#EthnicityOther").val("");
                    $("#EthnicityOther").attr("type", "hidden");
                }
            });
            $("#PrimaryLanguageId").change(function() {
                if ($("#PrimaryLanguageId :selected").text() == "Other")
                    $("#PrimaryLanguageOther").attr("type", "text");
                else {
                    $("#PrimaryLanguageOther").val("");
                    $("#PrimaryLanguageOther").attr("type", "hidden");
                }
            });
            $("#SecondaryLanguageId").change(function() {
                if ($("#SecondaryLanguageId :selected").text() == "Other")
                    $("#SecondaryLanguageOther").attr("type", "text");
                else {
                    $("#SecondaryLanguageOther").val("");
                    $("#SecondaryLanguageOther").attr("type", "hidden");
                }
            });
            $("#TeacherType").change(function() {
                if ($("#TeacherType :selected").text() == "Other")
                    $("#TeacherTypeOther").attr("type", "text");
                else {
                    $("#TeacherTypeOther").val("");
                    $("#TeacherTypeOther").attr("type", "hidden");
                }
            });
            $("#CoachAssignmentWay").change(function() {
                if ($("#CoachAssignmentWay :selected").text() == "Other")
                    $("#CoachAssignmentWayOther").attr("type", "text");
                else {
                    $("#CoachAssignmentWayOther").val("");
                    $("#CoachAssignmentWayOther").attr("type", "hidden");
                }
            });
            $("#ECIRCLEAssignmentWay").change(function() {
                if ($("#ECIRCLEAssignmentWay :selected").text() == "Other")
                    $("#ECIRCLEAssignmentWayOther").attr("type", "text");
                else {
                    $("#ECIRCLEAssignmentWayOther").val("");
                    $("#ECIRCLEAssignmentWayOther").attr("type", "hidden");
                }
            });

            $("#ageGroups").change(function() {
                if ($("#ageGroups :selected").text() == "Other")
                    $("#AgeGroupOther").attr("type", "text");
                else {
                    $("#AgeGroupOther").val("");
                    $("#AgeGroupOther").attr("type", "hidden");
                }
            }); 
            if ($("#UserInfo_Status").val() == "@((int)EntityStatus.Inactive)")
                $("#SaveInvite").hide();
            $("#UserInfo_Status").change(function() {
                if ($("#UserInfo_Status").val() == "@((int)EntityStatus.Inactive)")
                    $("#SaveInvite").hide();
                else
                    $("#SaveInvite").show();
            });

            $("#dvCertificate input[type='radio']").click(function(event) {
                var $container = $("#txtCers");
                if ($container.length == 0) {
                    $container = $("<input type='hidden' name='certificates' id='txtCers'/>").appendTo($("#@(formId)"));
                }
                var values = "";

                $("#dvCertificate input[type='radio']").each(function(index, radio) {
                    var $r = $(radio);
                    if ($r[0].checked) {
                        values += $r.val() + ",";
                    }
                });
                $container.val(values);
            });

            $("[name='chkPDs']").click(function(event) {
                if ($(this).attr("pdtext") == "Other") {
                    if ($(this).is(":checked"))
                        $("#PDOther").attr("type", "text");
                    else {
                        $("#PDOther").attr("type", "hidden");
                        $("#PDOther").val("");
                    }
                }
            });

            $("#SaveInvite").click(function() {
                $("<input type='hidden' name='isInvite' id='isInvite' value='true' />").appendTo($("#@(formId)"));
            });
            
            $("#ResetInvite").click(function () {
                jQuery.when(waitingConfirm("Are you sure?", "Yes", "No")).done(function () {
                    $.post("/Invitation/Public/ReInvite?userId=@(Model.UserInfo.ID)", function (result) {
                        if (!result) {
                            showMessage("success", "Email has been sent successfully.");
                            location.reload();
                        } else {
                            showMessage("fail");
                        }
                    });
                });
            });

            InitControlsByRole();                       
        });

        function changeInactive(v){
            $form = $("#@(formId)");
            if($(v).val() == "2"){
                $.post("/Invitation/Public/Inactive?id=@(Model.UserInfo.ID)", function (result) {
                    if (result) {
                        $form.data("_source", $form.serialize());
                        $.when(showMessage("success", "The user has been inactive.")).done(function(){redirectBack("index");});
                    } else {
                        showMessage("fail");
                    }
                });
            }
        }
    </script>
}

@section LeftMenu
{
    @Html.Partial("~/Views/Shared/_MasterData_LeftMenu.cshtml", Leftmenu_MainSite.User)
}

@section BreadPath
{
    @(Html.ActionLink("User Management", "Dashboard", "Public"))
    <i class="icon-angle-right"></i>
    @(Html.ActionLink("Teacher", "Index", "Teacher")) <i class="icon-angle-right"></i>
    @(Model.UserInfo.FirstName + " " + Model.UserInfo.LastName)
}

@using (Ajax.BeginForm("SaveInvitation", "Teacher", null, PostFormHelper.DefaultAjaxOptions,
    new
    {
        @class = "form-horizontal",
        id = formId
    }))
{
    <div class="right-content-top">
        <a class="mainbutton mainright-btn nav-btn" href="@(Server.UrlDecode(Request.QueryString["returnurl"]) ?? Url.Action("Index"))" >Back to Teacher List</a>
    </div>
    
    <div class="main-content">
        @Html.Partial("~/Areas/Invitation/Views/Teacher/Partials/EditPartial.cshtml")
        <div class="content-body">
            <div class="form-group">
                <span class="col-sm-3 control-label">Additional Packages</span>
                <div class="col-sm-9">
                    @foreach (var item in GroupPackages)
                    {
                        string strChecked = "";
                        if (SelectedGroupPagkages.Where(e => e.PackageId == item.PackageId).Count() > 0)
                        {
                            strChecked = "checked='checked'";
                        }
                        <div class="with50">
                            <label class="checkbox-inline">
                                <input type="checkbox" @strChecked name="chkPackages" value="@item.PackageId">
                                @item.PackageName
                            </label>
                        </div>
                    }
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TeacherNotes, null, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextAreaFor(model => model.TeacherNotes, new { @class = "form-control", style = "height:70px; margin:0px; padding:0px;" })
                    @Html.ValidationMessageFor(model => model.TeacherNotes)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.UserInfo.InvitationEmail, null, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.UserInfo.InvitationEmail, new { @class = "form-control", @readonly = true })
                </div>
            </div>
        </div>
        <div class="button-content">
            <input type="submit" class="mainbutton mainright-btn submit-btn" value="Submit">
            @if (Model.UserInfo.GoogleId == "")
            {
                <input type="submit" id="SaveInvite" class="mainbutton mainright-btn submit-btn" value="Submit & Invite"/>
            }
            else
            {
                <button class="mainbutton mainright-btn submit-btn" type="button" id="ResetInvite">Reset & Send Invitation</button>
            }
            <button class="mainbutton modal-btn cancel-btn" type="button" onclick='redirectBack("index")'>Cancel</button>
        </div>
    </div>
}






