@using Sunnet.Cli.MainSite.Models
@model Sunnet.Cli.Business.Classrooms.Models.ClassroomModel
@{
    ViewBag.Title = "Classrooms";
}
@section LeftMenu
{
    @Html.Partial("~/Views/Shared/_MasterData_LeftMenu.cshtml", Leftmenu_MainSite.Classroom)
}
@section BreadPath
{
    @(Html.ActionLink("Classroom", "Index", "Classroom"))&nbsp;<i class="icon-angle-right"></i>&nbsp;Classroom List
}
@if (ViewBag.accessAdd)
{
    <div class="right-content-top">
        <button type="button" class="mainbutton mainright-btn create-btn" data-bind="click: $root.addData">Add Classroom</button>
    </div>
}
<div class="modal-l-b"></div>
<form class="form-horizontal" role="form" id="formSearch">
    <div class="form-group">
        @Html.Label("", "Community/District", new { @class = "control-label col-sm-2", @for = "txtCommunity" })
        <div class="col-sm-3">
            @Html.TextBox("txtCommunity", "", new
       {
           autocomplete = "off",
           @class = "form-control",
           data_list = "true",
           data_for = "#CommunityId",
           data_remote = Url.Action("GetCommunitySelectListForSearch", "Community", new { Area = "Community" }),
           data_text = "Name",
           data_value = "ID",
           id = "txtCommunity",
           name = "txtCommunity",
           placeholder = "Enter key text to search",
           data_bind = "value: searchCriteria.communityName",
           @for = "CommunityId",
           data_extraParams = "{\"isActiveCommunity\":\"#isActiveCommunity\"}",
           data_required = "false"
       })
            @Html.HiddenFor(model => model.CommunityId, new
       {
           @class = "form-control ",
           placeholder = "Selected Community",
           data_bind = "value: searchCriteria.communityId"
       })
            @Html.Hidden("isActiveCommunity", false)
        </div>
        @Html.LabelFor(m => m.SchoolName, new { @class = "control-label col-sm-2", @for = "txtSchool" })
        <div class="col-sm-3">
            @Html.TextBox("txtSchool", "", new
       {
           autocomplete = "off",
           @class = "form-control",
           data_list = "true",
           data_for = "#SchoolId",
           data_remote = Url.Action("GetSchoolSelectList", "School", new { Area = "School" }),
           data_template = "<strong><% this[i].Name %></strong><br /><i style='color:gray'><% this[i].City %>, <% this[i].State %> <% this[i].Zip %></i>",

           data_text = "Name",
           data_value = "ID",
           id = "txtSchool",
           placeholder = "Enter key text to search",
           data_bind = "value: searchCriteria.schoolName",
           @for = "SchoolId",
           data_extraParams = "{\"communityId\":\"#CommunityId\",\"isActive\":\"#isActive\"}",
           data_required = "false"
       })
            @Html.HiddenFor(model => model.SchoolId, new
       {
           @class = "form-control",
           data_bind = "value: searchCriteria.schoolId"
       })
            @Html.Hidden("isActive", false)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "control-label col-sm-2", @for = "ClassroomName" })
        <div class="col-sm-3">
            @Html.TextBox("ClassroomName", "", new
       {
           autocomplete = "off",
           @class = "form-control",
           data_list = "true",
           data_text = "Name",
           data_value = "ID",
           placeholder = "Enter key text to search",
           data_remote = Url.Action("GetClassroomNameSelectList", "Classroom", new { Area = "Classroom" }),
           id = "ClassroomName",
           data_bind = "value: searchCriteria.classroomName",
           data_extraParams = "{\"communityId\":\"#CommunityId\",\"schoolId\":\"#SchoolId\",\"isActive\":\"#isActive\"}",
           data_required = "false"
       })
            @Html.Hidden("isActive", false)
        </div>
        @Html.LabelFor(m => m.ClassroomId, new { @class = "control-label col-sm-2" })
        <div class="col-sm-3">
            @Html.TextBox("ClassroomId", "", new
       {
           autocomplete = "off",
           @class = "form-control",
           data_list = "true",
           data_text = "Name",
           data_value = "ID",
           placeholder = "Enter key text to search",
           data_remote = Url.Action("GetClassroomIdSelectList", "Classroom", new { Area = "Classroom" }),
           id = "ClassroomId",
           data_bind = "value: searchCriteria.classroomId",
           data_extraParams = "{\"communityId\":\"#CommunityId\",\"schoolId\":\"#SchoolId\",\"isActiveClassroomId\":\"#isActiveClassroomId\"}",
           data_required = "false"
       })
            @Html.Hidden("isActiveClassroomId", false)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Status, new { @class = "control-label col-sm-2" })
        <div class="col-sm-3">
            @Html.DropDownListFor(m => m.Status, (IEnumerable<SelectListItem>)ViewBag.StatusOptions, new { @class = "form-control", data_bind = "value: searchCriteria.status" })
        </div>
        <div class="col-sm-2"></div>
        <div class="col-sm-2">
            <button class="mainbutton mainright-btn sreach-btn" type="button" data-bind="event: { click: search }">Search</button>
        </div>
    </div>
</form>
<div class="main-content main-content">
    <div class="content-title">Classrooms</div>
    <div class="content-body-tab">
        <table class="table table-striped table-hover">
            <thead>
                <tr data-bind="foreach: { data: headers, as: 'header' }">
                    <!-- ko if: (header.order === true)-->
                    <th data-bind="style: { width: width }">
                        <a href="javascript:;" data-bind="text: text, click: $root.changeOrder"></a>
                        <span class="glyphicon"
                            data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'ASC',
    css: { 'glyphicon-arrow-up': $root.orderDirection().toUpperCase() == 'ASC' }"></span>
                        <span class="glyphicon"
                            data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'DESC',
    css: { 'glyphicon-arrow-down': $root.orderDirection().toUpperCase() == 'DESC' }"></span>
                    </th>
                    <!-- /ko-->
                    <!-- ko if: (header.order === false) -->
                    <th data-bind="text: text, style: { width: width }"></th>
                    <!-- /ko-->
                </tr>
            </thead>
            <tbody data-bind="foreach: { data: showRecords, as: 'item' }">
                <tr>
                    <td data-bind="text: item.ClassroomId"></td>
                    <td data-bind="text: item.Name"></td>
                    <td data-bind="text: item.SchoolName"></td>
                    <td data-bind="text: item.Status.text"></td>
                    <td>
                        @if (ViewBag.accessView)
                        {
                            <a class="table-btn icon-folder-open view-btn" data-bind="event: { click: $root.viewData }" href="#" title="View"></a>
                        }
                        @if (ViewBag.accessEdit)
                        {
                            <a class="table-btn icon-pencil pencil-btn" data-bind="event: { click: $root.updateData }" href="#" title="Edit"></a>
                        }
                        @if (ViewBag.accessAssign)
                        {
                            <!--ko if: (item.Status.value==1)-->
                            <a class="table-btn icon-tags assign2-btn" data-bind='attr: { href: $root.AssignClass(item) }' title="Assign Classes"></a>
                            <!--/ko-->
                        }
                    </td>
                </tr>
            </tbody>
            @Html.Display("e", "NoData", new { Colspan = 5 })
        </table>
        @Html.Partial("_Partial_Pager")
    </div>
</div>


@section Scripts
{
    <script type="text/javascript">
        var list_Classroom = {};
        function changeStatus() {
            $("#txtCommunity").on("selected.sunnet.datalist", function (obj) {
                $("#txtSchool").datalist("clear");
                $("#ClassroomName").datalist("clear");
                $("#ClassroomId").datalist("clear");
            });
            $("#txtSchool").on("selected.sunnet.datalist", function (obj) {
                $("#ClassroomName").datalist("clear");
                $("#ClassroomId").datalist("clear");
            });
        }

        $(function () {
            list_Classroom = new ViewModel(
                {
                    instanceName: "list_Classroom",
                    modalId: "modalNormal",
                    getDataUrl: '@Html.Raw(Server.UrlDecode(Url.Action("Search")))',
                    addDataUrl: '@Html.Raw(Url.Action("New"))',
                    addType: 'Redirect',
                    viewDataUrl: '@Html.Raw(Url.Action("View"))',
                    viewType: 'Redirect',
                    editDataUrl: '@Html.Raw(Url.Action("Edit"))',
                    editType: 'Redirect',
                    deleteDataUrl: '',
                    orderBy: "Name",
                    orderDirection: "ASC",
                    pageSize: 10,
                    headers: [
                        {
                            text: "@Html.DisplayNameFor(model => model.ClassroomId)",
                            field: "@Html.NameFor(model => model.ClassroomId)",
                            order: true,
                            width: '15%'
                        },
                        {
                            text: "@Html.DisplayNameFor(model => model.Name)",
                            field: "@Html.NameFor(model => model.Name)",
                            order: true,
                            width: '15%'
                        },
                        {
                            text: "@Html.DisplayNameFor(model => model.SchoolName)",
                            field: "@Html.NameFor(model => model.SchoolName)",
                            order: true,
                            width: '20%'
                        },
                        {
                            text: "@Html.DisplayNameFor(model => model.Status)",
                            field: "@Html.NameFor(model => model.Status)",
                            order: true,
                            width: '10%'
                        },
                        { text: "Action", width: '15%' }
                    ],
                    searchCriteria: {
                        communityId: ko.observable(window.queryString("communityId", "@ViewBag.CommunityId")),
                        communityName: ko.observable(window.queryString("communityName", "@Html.Raw(ViewBag.CommunityName)")),
                        schoolId: ko.observable(window.queryString("schoolId", "@ViewBag.SchoolId")),
                        schoolName: ko.observable(window.queryString("schoolName", "@Html.Raw(ViewBag.SchoolName)")),
                        classroomName: ko.observable(window.queryString("classroomName")),
                        classroomId: ko.observable(window.queryString("classroomId")),
                        status: ko.observable(window.queryString("status", -1)),
                        isActive: ko.observable(window.queryString("isActive", false)),
                        isActiveClassroomId: ko.observable(window.queryString("isActiveClassroomId", false)),
                    }
                },
                {
                    AssignClass: function (item) {
                        return '@Url.Action("AssignClasses")' + "?classroomId=" + item.ID + "&returnurl=" + list_Classroom.getLocation();
                    }
                }

            );

            list_Classroom.search();
            ko.applyBindings(list_Classroom);
            changeStatus();
        });
    </script>
}