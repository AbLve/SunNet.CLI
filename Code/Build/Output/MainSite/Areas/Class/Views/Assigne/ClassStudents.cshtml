@using Sunnet.Cli.UIBase.Models;
@using Sunnet.Cli.MainSite.Models;
@model Sunnet.Cli.Core.Classes.Entites.ClassEntity

@{
    ViewBag.Title = "Assign Students to Class";
    var formIdPage = PostFormHelper.GetFormId(Html.ViewContext.View);
    var formId = PostFormHelper.GetFormId(Html.ViewContext.View) + "1";
    var formId2 = PostFormHelper.GetFormId(Html.ViewContext.View) + "2";
}

@section LeftMenu
{
    @Html.Partial("~/Views/Shared/_MasterData_LeftMenu.cshtml", Leftmenu_MainSite.Class)
}

@section BreadPath
{
    @(Html.ActionLink("Class List", "Index", "Class"))
    <i class="icon-angle-right"></i>Assign Students to Class
}
@Html.AntiForgeryToken()
<div class="right-content-top">
    <a class="mainbutton mainright-btn nav-btn" href="@(Server.UrlDecode(Request.QueryString["returnurl"]) ?? Url.Action("Index"))">Back
    </a>
</div>

<div class="main-content">
    <div style="text-align: center"><i class="icon-user"></i><span>&nbsp;</span>@Model.Name</div>
    <div class="content-body tab-d-con">
        <form class="form-horizontal clearfix" role="form">
            <div id="@formId">
                <div class="tab-content tab-d">
                    <div class="content-title">
                        Unassgined Students
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-3" for="txtCommunity">Community/District</label>
                        <div class="col-sm-9">
                            @Html.TextBox("txtCommunity", "", new
                               {
                                   autocomplete = "off",
                                   @class = "form-control",
                                   data_list = "true",
                                   data_for = "#CommunityId",
                                   data_remote = Url.Action("GetCommunitySelectListForSearch", "Community", new { Area = "Community" }),
                                   data_text = "Name",
                                   data_value = "ID",
                                   placeholder = "Enter key text to search",
                                   id = "txtCommunity",
                                   name = "txtCommunity",
                                   @for = "CommunityId",
                                   data_required = "false",
                                   data_bind = "value: searchCriteria.communityName",
                                   data_extraParams = "{\"isActiveCommunity\":\"#isActiveCommunity\"}"

                               })
                            <input value="" class="form-control" data-bind="value: searchCriteria.communityId" data-val="true" data-val-number="字段 CommunityId 必须是一个数字。" data-val-required="CommunityId 字段是必需的。" id="CommunityId" name="CommunityId" placeholder="Selected Community" type="hidden">
                            @Html.Hidden("isActiveCommunity", false)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-3" for="txtSchool">School Name</label>
                        <div class="col-sm-9">
                            @Html.TextBox("txtSchool", "", new
                                {
                                    autocomplete = "off",
                                    @class = "form-control",
                                    data_list = "true",
                                    data_for = "#SchoolId",
                                    data_remote = Url.Action("GetSchoolSelectList", "School", new { Area = "School" }),
                                    data_template = "<strong><% this[i].Name %></strong><br /><i style='color:gray'><% this[i].City %>, <% this[i].State %> <% this[i].Zip %></i>",
                                    data_bind = "value: searchCriteria.schoolName",
                                    data_text = "Name",
                                    data_value = "ID",
                                    data_required = false,
                                    placeholder = "Enter key text to search",
                                    id = "txtSchool",
                                    name = "txtSchool",
                                    @for = "SchoolId",
                                    data_extraParams = "{\"communityId\":\"#CommunityId\",\"isActive\":\"#isActive\"}",
                                    onchange = "SchoolChanged()"

                                })
                            @Html.HiddenFor(model => model.SchoolId, new
                                 {
                                     @class = "form-control validate",
                                     placeholder = "Selected School",
                                     data_bind = "value: searchCriteria.schoolId"

                                 })
                            @Html.ValidationMessageFor(model => model.SchoolId)
                            @Html.Hidden("isActive", false)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("", "Class Name", new { @class = "control-label col-sm-3", @for = "dplClass" })
                        <div class="col-sm-9">
                            <select id="dplClass" class="form-control" data-bind="options: classOptions, optionsText: 'Text', optionsValue: 'Value', value: searchCriteria.searchClassId">
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-3" for="txtSchool">Student Name</label>
                        <div class="col-sm-9">
                            <label class="hide" for="Keyword">Keyword</label>

                            <input class="form-control" placeholder="Enter key to search" data-bind="value: searchCriteria.name" id="Keyword" name="Keyword" type="text" value="" />
                        </div>
                    </div>
                    <div class="tab-d-input">
                        <button class="mainbutton mainright-btn sreach-btn" data-bind="event: { click: search }">search</button>
                    </div>
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr data-bind="foreach: { data: headers, as: 'header' }">
                                <!--ko if:($index()===0)-->
                                <th>
                                    <input type="checkbox" onclick="CheckAll(this)" value="@formId" id="chkSelectAll" />
                                    <label for="chkSelectAll">Select All</label>
                                </th>
                                <!--/ko-->
                                <!-- ko if: (header.order === true)-->
                                <th data-bind="style: { width: width }">
                                    <a href="javascript:;" data-bind="text: text, click: $root.changeOrder"></a>
                                    <span class="glyphicon"
                                        data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'ASC',
    css: { 'glyphicon-arrow-up': $root.orderDirection().toUpperCase() == 'ASC' }"></span>
                                    <span class="glyphicon"
                                        data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'DESC',
    css: { 'glyphicon-arrow-down': $root.orderDirection().toUpperCase() == 'DESC' }"></span>
                                </th>
                                <!--/ko-->
                                <!-- ko if: (header.order === false) -->
                                <th data-bind="text: text, style: { width: width }"></th>
                                <!-- /ko-->
                            </tr>
                        </thead>
                        <tbody data-bind="foreach: { data: showRecords, as: 'item' }">
                            <tr>
                                <td>
                                    <label data-bind="attr: { 'for': 'chkComm' + $index() }" class="hide">hiddenChk</label>
                                    <input type="checkbox" name="chkComm" data-bind="value: item.ID, attr: { id: 'chkComm' + $index() }" />
                                </td>
                                <td data-bind="text: item.Name"></td>
                            </tr>
                        </tbody>
                        @Html.Display("e", "NoData", new { Colspan = 2 })
                    </table>
                    @Html.Partial("_Partial_Pager")
                </div>

                <div class="tab-d-m" style="padding-top:200px">
                    <a class="mainright-btn tab-save-btn cancel-btn" href="#" title="Assign Students To Class" data-bind="event: { click: $root.AssignAll }">
                        <i class="icon-double-angle-right icon-large"></i>
                    </a>
                    <a class="mainright-btn tab-save-btn save-btn" href="#" title="Unassign Students from Class" data-bind="event: { click: $root.UnAssignAll }"><i class="icon-double-angle-left icon-large"></i></a>
                </div>
            </div>

            <div class="tab-content tab-d"  id="@formId2">
                <div class="content-title">Assigned Students</div>
                <div class="tab-d-input">
                    <label class="hide" for="Keyword2">Keyword</label>
                    <input class="form-control" placeholder="Enter key to search" data-bind="value: searchCriteria.name"
                        id="Keyword2" name="Keyword" type="text" value="" />
                    <button class="mainbutton mainright-btn sreach-btn" data-bind="event: { click: search }">Search</button>
                </div>
                <table class="table table-striped table-hover">
                    <thead>
                        <tr data-bind="foreach: { data: headers, as: 'header' }">
                            <!-- ko if: ($index() === 0)-->
                            <th>

                                <input type="checkbox" onclick="CheckAll(this)"  value="@formId2" id="chkSelectAll2" />
                                <label for="chkSelectAll2">Select All</label>
                            </th>
                            <!-- /ko-->
                            <!-- ko if: (header.order === true)-->
                            <th data-bind="style: { width: width }">
                                <a href="javascript:;" data-bind="text: text, click: $root.changeOrder"></a>
                                <span class="glyphicon"
                                    data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'ASC',
    css: { 'glyphicon-arrow-up': $root.orderDirection().toUpperCase() == 'ASC' }"></span>
                                <span class="glyphicon"
                                    data-bind="visible: $root.orderBy() == header.field && $root.orderDirection().toUpperCase() == 'DESC',
    css: { 'glyphicon-arrow-down': $root.orderDirection().toUpperCase() == 'DESC' }"></span>
                            </th>
                            <!-- /ko-->
                            <!-- ko if: (header.order === false) -->
                            <th data-bind="text: text, style: { width: width }"></th>
                            <!-- /ko-->
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: { data: showRecords, as: 'item' }">
                        <tr>
                            <td>
                                <label data-bind=" attr: { 'for': 'chkComm2' + $index() }" class="hide">hiddenChk</label>
                                <input type="checkbox" name="chkComm" data-bind="value: item.ID,
    attr: { id: 'chkComm2' + $index() }">
                            </td>
                            <td data-bind="text: item.Name"></td>

                        </tr>
                    </tbody>
                    @Html.Display("e", "NoData", new { Colspan = 2 })
                </table>
                @Html.Partial("_Partial_Pager")
            </div>
        </form>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        function CheckAll(obj) {
            var formId = $(obj).val();
            if ($(obj).is(":checked")) {
                $("#" + formId + " [name='chkComm']").prop("checked", true);
            }
            else {
                $("#" + formId + " [name='chkComm']").prop("checked", false);
            }
        }
        function GetAllCheckedItem(formId) {
            var ids = new Array();
            $("#" + formId + " input:checked").not("#chkSelectAll").not("#chkSelectAll2").each(function (index, obj) {
                ids.push($(this).val());
            });
            return ids;
        }

        var list_Unassignd = {};
        var list_assignd = {};
        $(function () {
            InitList = function () {
                $("#chkSelectAll").prop("checked", false);
                $("#chkSelectAll2").prop("checked", false);
                list_Unassignd.search();
                list_assignd.search();
            }
            //list_Unassignd begin
            list_Unassignd = new ViewModel(
                {
                    instanceName: "list_Unassignd",
                    modalId: "modalNormal",
                    viewType: "Redirect",
                    getDataUrl: '@Html.Raw(Server.UrlDecode(Url.Action("SearchUnAssignedStudent")))',
                    orderBy: "Name",
                    orderDirection: "ASC",
                    pageSize: 10,
                    headers: [
                        {
                            text: "Student Name",
                            field: "Name",
                            order: true,
                            width: '70%'
                        }
                    ],
                    miniPager: true,
                    searchCriteria: {
                        communityId: ko.observable(""),
                        communityName: ko.observable(""),
                        schoolId: ko.observable(""),
                        schoolName: ko.observable(""),
                        searchClassId: ko.observable(""),
                        name: ko.observable(""),
                        classId: ko.observable("@Model.ID")
                    }
                },
                {
                    classOptions: ko.observableArray([]),
                    AssignAll: function (item) {
                        var ids = GetAllCheckedItem("@formId");
                        if (ids != "") {
                            $.post(
                                "@Html.Raw(Server.UrlDecode(Url.Action("AssignStudentToClass")))",
                                { classId: "@Model.ID", studentIds: ids },
                                function (data) {
                                    var res = JSON.parse(data);
                                    if (res.success == true) {
                                        InitList();
                                    }
                                    else {
                                        $.when(window.waitingAlert("fail", res.msg)).done(function () {
                                            $(".mainbutton.mainright-btn.nav-btn")[0].click();
                                        }
                                        );
                                    }
                                }
                                );
                        }
                    },
                    UnAssignAll: function (item) {
                        var ids = GetAllCheckedItem("@formId2");
                        if (ids != "") {
                            $.post(
                            "@Html.Raw(Server.UrlDecode(Url.Action("UnAssignStudentFromClass")))",
                            { classId: "@Model.ID", studentIds: ids },
                            function (res) {
                                if (res.success == true) {
                                    InitList();
                                }
                                else {
                                    $.when(waitingConfirm(res.msg, "Yes", "No")).done(function () {
                                        $.post(
                                            "@Html.Raw(Server.UrlDecode(Url.Action("UnAssignStuOnlyOneClass")))",
                                            { classId: "@Model.ID", studentIds: res.data },
                                            function (res) {
                                                if (res.success == true) {
                                                    InitList();
                                                }
                                            }, 'json'
                                            );
                                    });
                                    InitList();
                                }
                            }, 'json'
                            );
                        }
                    }
                });
            //list_Unassignd end


            //list_assignd begin
            list_assignd = new ViewModel(
                {
                    instanceName: "list_assignd",
                    modalId: "modalNormal",
                    viewType: "Redirect",
                    getDataUrl: '@Html.Raw(Server.UrlDecode(Url.Action("SearchAssignedStudent")))',
                    orderBy: "Name",
                    orderDirection: "ASC",
                    pageSize: 10,
                    miniPager: true,
                    headers: [
                        {
                            text: "Student Name",
                            field: "Name",
                            order: true,
                            width: '70%'
                        }
                    ],
                    searchCriteria: {
                        name: ko.observable(""),
                        classId: ko.observable("@Model.ID")
                    }
                }
            );
            //list_assignd end

            list_Unassignd.search();
            list_assignd.search();
            ko.applyBindings(list_Unassignd, document.getElementById("@formId"));
            ko.applyBindings(list_assignd, document.getElementById("@formId2"));

            $("#txtCommunity").on("selected.sunnet.datalist", function () {
                $("#txtSchool").datalist("clear");
                $("#SchoolId").val("");
                SchoolChanged();
            });
            $("#txtSchool").on("selected.sunnet.datalist", function () {
                SchoolChanged();
            });
            SchoolChanged();
        });
        //function() end
        function SchoolChanged() {
            var schoolId = $("#SchoolId").val();
            var communityId = $("#CommunityId").val();
            $.getJSON(
                '@Url.Action("GetClassSelectList", "Student", new { Area = "Student" })',
                { schoolId: schoolId, communityId: communityId },
                function (data) {
                    list_Unassignd.classOptions(data);
                });
        }

    </script>
}
